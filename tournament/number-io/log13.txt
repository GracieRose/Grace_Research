Command line args: clojush.problems.software.number-io :parent-selection :tournament :print-timings true
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
epigenetic-markers = []
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :tournament
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
report-simplifications = 0
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [[13.14427569374088 -66] -52.85572430625912]
Train Case:   1 | Input/Output: [[29.46115601786323 -76] -46.53884398213677]
Train Case:   2 | Input/Output: [[90.10766787756236 93] 183.10766787756236]
Train Case:   3 | Input/Output: [[92.59839563171047 -33] 59.598395631710474]
Train Case:   4 | Input/Output: [[0.056684144843231365 -41] -40.94331585515677]
Train Case:   5 | Input/Output: [[-48.32074697915534 49] 0.6792530208446621]
Train Case:   6 | Input/Output: [[73.84097767644681 -71] 2.840977676446812]
Train Case:   7 | Input/Output: [[-10.884330688192705 98] 87.1156693118073]
Train Case:   8 | Input/Output: [[49.73673834785319 -37] 12.73673834785319]
Train Case:   9 | Input/Output: [[13.91236435331895 21] 34.91236435331895]
Train Case:  10 | Input/Output: [[3.261261600628316 95] 98.26126160062832]
Train Case:  11 | Input/Output: [[16.573699063089947 70] 86.57369906308995]
Train Case:  12 | Input/Output: [[-14.846316732077085 -65] -79.84631673207709]
Train Case:  13 | Input/Output: [[16.474690964208662 -14] 2.474690964208662]
Train Case:  14 | Input/Output: [[58.32762413309686 74] 132.32762413309686]
Train Case:  15 | Input/Output: [[-74.6614203645089 -97] -171.6614203645089]
Train Case:  16 | Input/Output: [[-34.34636336919756 -24] -58.34636336919756]
Train Case:  17 | Input/Output: [[44.60436451219459 36] 80.60436451219459]
Train Case:  18 | Input/Output: [[40.69336082036992 -51] -10.306639179630082]
Train Case:  19 | Input/Output: [[65.19711439180895 65] 130.19711439180895]
Train Case:  20 | Input/Output: [[64.36377363444831 86] 150.3637736344483]
Train Case:  21 | Input/Output: [[-15.472649001193602 -96] -111.4726490011936]
Train Case:  22 | Input/Output: [[32.781021120753906 -53] -20.218978879246094]
Train Case:  23 | Input/Output: [[-77.88525898090452 37] -40.885258980904524]
Train Case:  24 | Input/Output: [[-44.238807703799 77] 32.761192296201]
Test Case:   0 | Input/Output: [[-39.42887366846075 11] -28.428873668460753]
Test Case:   1 | Input/Output: [[-65.63241182560535 99] 33.367588174394655]
Test Case:   2 | Input/Output: [[98.4334437078387 -63] 35.433443707838705]
Test Case:   3 | Input/Output: [[72.48357874073145 98] 170.48357874073145]
Test Case:   4 | Input/Output: [[75.89641914063475 -63] 12.896419140634748]
Test Case:   5 | Input/Output: [[-65.65296997584456 -80] -145.65296997584454]
Test Case:   6 | Input/Output: [[-49.1706252220979 -17] -66.1706252220979]
Test Case:   7 | Input/Output: [[-32.31309958500579 39] 6.686900414994213]
Test Case:   8 | Input/Output: [[-36.793639200706664 -50] -86.79363920070666]
Test Case:   9 | Input/Output: [[67.6720268223576 47] 114.6720268223576]
Test Case:  10 | Input/Output: [[23.58614412623912 42] 65.58614412623912]
Test Case:  11 | Input/Output: [[-85.64162662917884 -27] -112.64162662917884]
Test Case:  12 | Input/Output: [[-62.73771876478278 -51] -113.73771876478278]
Test Case:  13 | Input/Output: [[-86.5551701612348 91] 4.444829838765202]
Test Case:  14 | Input/Output: [[87.76694455137164 -39] 48.76694455137164]
Test Case:  15 | Input/Output: [[30.531302014504206 59] 89.5313020145042]
Test Case:  16 | Input/Output: [[-97.4564013415109 74] -23.456401341510897]
Test Case:  17 | Input/Output: [[12.59804880293862 16] 28.59804880293862]
Test Case:  18 | Input/Output: [[96.62609062570871 -52] 44.62609062570871]
Test Case:  19 | Input/Output: [[-42.94871948518757 35] -7.948719485187567]
Test Case:  20 | Input/Output: [[-20.02828091880599 -46] -66.02828091880599]
Test Case:  21 | Input/Output: [[-96.37342223953173 -79] -175.37342223953175]
Test Case:  22 | Input/Output: [[45.57777269179542 -64] -18.422227308204583]
Test Case:  23 | Input/Output: [[56.425751614481925 -74] -17.574248385518075]
Test Case:  24 | Input/Output: [[-25.635080617166437 65] 39.36491938283356]
Test Case:  25 | Input/Output: [[-38.246376553508995 -73] -111.246376553509]
Test Case:  26 | Input/Output: [[30.041776644745397 -68] -37.9582233552546]
Test Case:  27 | Input/Output: [[-7.216577880004607 -46] -53.21657788000461]
Test Case:  28 | Input/Output: [[35.69258901993612 -90] -54.30741098006388]
Test Case:  29 | Input/Output: [[75.54994530721592 -99] -23.45005469278408]
Test Case:  30 | Input/Output: [[33.915194090971056 -7] 26.915194090971056]
Test Case:  31 | Input/Output: [[33.12478265794408 86] 119.12478265794408]
Test Case:  32 | Input/Output: [[28.546018720627075 18] 46.546018720627075]
Test Case:  33 | Input/Output: [[85.74906051913979 53] 138.7490605191398]
Test Case:  34 | Input/Output: [[-61.67641205282111 -55] -116.6764120528211]
Test Case:  35 | Input/Output: [[39.48169438659906 -39] 0.4816943865990595]
Test Case:  36 | Input/Output: [[-40.261726847263965 35] -5.261726847263965]
Test Case:  37 | Input/Output: [[-30.783709747101668 5] -25.783709747101668]
Test Case:  38 | Input/Output: [[52.43200653908261 -90] -37.56799346091739]
Test Case:  39 | Input/Output: [[-76.71593185497292 35] -41.71593185497292]
Test Case:  40 | Input/Output: [[53.260447487203976 -25] 28.260447487203976]
Test Case:  41 | Input/Output: [[1.0231921065154665 -30] -28.976807893484533]
Test Case:  42 | Input/Output: [[-47.86565133782419 -23] -70.86565133782419]
Test Case:  43 | Input/Output: [[-67.49361404577998 -50] -117.49361404577998]
Test Case:  44 | Input/Output: [[66.58398968397901 90] 156.583989683979]
Test Case:  45 | Input/Output: [[12.439456459131648 -1] 11.439456459131648]
Test Case:  46 | Input/Output: [[76.24676104040691 -26] 50.24676104040691]
Test Case:  47 | Input/Output: [[-26.02811545945815 -22] -48.02811545945815]
Test Case:  48 | Input/Output: [[98.255053520453 27] 125.255053520453]
Test Case:  49 | Input/Output: [[55.78712374967819 93] 148.7871237496782]
Test Case:  50 | Input/Output: [[-50.23644335453747 68] 17.76355664546253]
Test Case:  51 | Input/Output: [[-98.49268573325844 92] -6.4926857332584405]
Test Case:  52 | Input/Output: [[-93.00723100278714 87] -6.007231002787137]
Test Case:  53 | Input/Output: [[96.95768665667316 -39] 57.95768665667316]
Test Case:  54 | Input/Output: [[-85.58015069825571 86] 0.4198493017442928]
Test Case:  55 | Input/Output: [[-60.56514340248347 -84] -144.56514340248347]
Test Case:  56 | Input/Output: [[-80.83088193758965 41] -39.83088193758965]
Test Case:  57 | Input/Output: [[-48.865226964497666 -5] -53.865226964497666]
Test Case:  58 | Input/Output: [[92.95763515948369 31] 123.95763515948369]
Test Case:  59 | Input/Output: [[-76.45717604150866 -96] -172.45717604150866]
Test Case:  60 | Input/Output: [[-79.17472730675898 22] -57.17472730675898]
Test Case:  61 | Input/Output: [[62.42665001415534 70] 132.42665001415534]
Test Case:  62 | Input/Output: [[-58.68567013304342 42] -16.685670133043423]
Test Case:  63 | Input/Output: [[94.71113708892068 46] 140.71113708892068]
Test Case:  64 | Input/Output: [[-96.76387741477244 45] -51.76387741477244]
Test Case:  65 | Input/Output: [[-38.58269800960588 73] 34.41730199039412]
Test Case:  66 | Input/Output: [[-95.4412170157889 13] -82.4412170157889]
Test Case:  67 | Input/Output: [[-81.95811990709117 28] -53.958119907091174]
Test Case:  68 | Input/Output: [[67.93429530486259 82] 149.9342953048626]
Test Case:  69 | Input/Output: [[-15.89550008971213 87] 71.10449991028787]
Test Case:  70 | Input/Output: [[76.48832285392871 -2] 74.48832285392871]
Test Case:  71 | Input/Output: [[87.59595493800924 13] 100.59595493800924]
Test Case:  72 | Input/Output: [[21.560394754340592 9] 30.560394754340592]
Test Case:  73 | Input/Output: [[-31.20367343283796 -34] -65.20367343283796]
Test Case:  74 | Input/Output: [[-60.13084178386634 -35] -95.13084178386634]
Test Case:  75 | Input/Output: [[-91.31705982878253 -82] -173.31705982878253]
Test Case:  76 | Input/Output: [[-36.58094311282611 8] -28.580943112826112]
Test Case:  77 | Input/Output: [[-97.56418526489826 79] -18.564185264898256]
Test Case:  78 | Input/Output: [[17.803570613665414 -8] 9.803570613665414]
Test Case:  79 | Input/Output: [[4.121615804764815 -98] -93.87838419523518]
Test Case:  80 | Input/Output: [[-69.49311745428648 -31] -100.49311745428648]
Test Case:  81 | Input/Output: [[86.15157383252682 -16] 70.15157383252682]
Test Case:  82 | Input/Output: [[32.30183762006891 50] 82.30183762006891]
Test Case:  83 | Input/Output: [[-62.30182655488399 70] 7.698173445116012]
Test Case:  84 | Input/Output: [[-5.923192919147624 10] 4.076807080852376]
Test Case:  85 | Input/Output: [[73.55888721975356 18] 91.55888721975356]
Test Case:  86 | Input/Output: [[-53.86036194309114 20] -33.86036194309114]
Test Case:  87 | Input/Output: [[-33.126295131989636 84] 50.873704868010364]
Test Case:  88 | Input/Output: [[14.727926275936156 -97] -82.27207372406384]
Test Case:  89 | Input/Output: [[-12.634738703903764 84] 71.36526129609624]
Test Case:  90 | Input/Output: [[53.39339313330311 79] 132.3933931333031]
Test Case:  91 | Input/Output: [[-20.86835120117611 -19] -39.86835120117611]
Test Case:  92 | Input/Output: [[7.920870438236378 -65] -57.07912956176362]
Test Case:  93 | Input/Output: [[-12.604277133077062 93] 80.39572286692294]
Test Case:  94 | Input/Output: [[-54.522055805736905 11] -43.522055805736905]
Test Case:  95 | Input/Output: [[-28.372485871036773 -69] -97.37248587103677]
Test Case:  96 | Input/Output: [[-20.150072793787714 -85] -105.15007279378771]
Test Case:  97 | Input/Output: [[12.420328284625512 76] 88.42032828462551]
Test Case:  98 | Input/Output: [[12.227207509661014 -28] -15.772792490338986]
Test Case:  99 | Input/Output: [[18.249274833183748 -17] 1.2492748331837475]
Test Case: 100 | Input/Output: [[16.112064966748747 -87] -70.88793503325125]
Test Case: 101 | Input/Output: [[-32.29480531973621 -80] -112.29480531973621]
Test Case: 102 | Input/Output: [[-10.166511110068427 37] 26.833488889931573]
Test Case: 103 | Input/Output: [[-19.18729016757881 67] 47.81270983242119]
Test Case: 104 | Input/Output: [[39.100949991378855 65] 104.10094999137885]
Test Case: 105 | Input/Output: [[-2.69447023669926 -47] -49.69447023669926]
Test Case: 106 | Input/Output: [[-48.8959692055063 90] 41.1040307944937]
Test Case: 107 | Input/Output: [[-97.32512855158888 -42] -139.32512855158888]
Test Case: 108 | Input/Output: [[36.415030204907225 -95] -58.584969795092775]
Test Case: 109 | Input/Output: [[-28.3419837647304 -77] -105.3419837647304]
Test Case: 110 | Input/Output: [[-26.061216997339898 54] 27.938783002660102]
Test Case: 111 | Input/Output: [[77.50865419095217 -38] 39.50865419095217]
Test Case: 112 | Input/Output: [[-39.40999797451505 33] -6.409997974515051]
Test Case: 113 | Input/Output: [[86.24826230921349 37] 123.24826230921349]
Test Case: 114 | Input/Output: [[94.77228076322396 -12] 82.77228076322396]
Test Case: 115 | Input/Output: [[66.18231010618703 -30] 36.18231010618703]
Test Case: 116 | Input/Output: [[23.878755591200388 -71] -47.12124440879961]
Test Case: 117 | Input/Output: [[3.825429876439344 79] 82.82542987643934]
Test Case: 118 | Input/Output: [[22.437049382479344 76] 98.43704938247934]
Test Case: 119 | Input/Output: [[33.371518090822406 -6] 27.371518090822406]
Test Case: 120 | Input/Output: [[65.34745815220026 83] 148.34745815220026]
Test Case: 121 | Input/Output: [[-98.67046107615789 -56] -154.6704610761579]
Test Case: 122 | Input/Output: [[14.737977580842369 -53] -38.26202241915763]
Test Case: 123 | Input/Output: [[31.063827305250726 -11] 20.063827305250726]
Test Case: 124 | Input/Output: [[-43.521113558901426 -10] -53.521113558901426]
Test Case: 125 | Input/Output: [[28.060682571977566 -45] -16.939317428022434]
Test Case: 126 | Input/Output: [[-45.83550599647612 -33] -78.83550599647612]
Test Case: 127 | Input/Output: [[95.88439422958606 7] 102.88439422958606]
Test Case: 128 | Input/Output: [[18.753897050587113 -2] 16.753897050587113]
Test Case: 129 | Input/Output: [[-23.052833113470854 -19] -42.052833113470854]
Test Case: 130 | Input/Output: [[27.678779999307295 -92] -64.3212200006927]
Test Case: 131 | Input/Output: [[-99.13639776569872 -96] -195.13639776569872]
Test Case: 132 | Input/Output: [[-20.081434925948244 89] 68.91856507405176]
Test Case: 133 | Input/Output: [[-40.359070446253796 -97] -137.35907044625378]
Test Case: 134 | Input/Output: [[28.671495719377816 32] 60.671495719377816]
Test Case: 135 | Input/Output: [[-63.62687236270963 11] -52.62687236270963]
Test Case: 136 | Input/Output: [[71.8241992703106 28] 99.8241992703106]
Test Case: 137 | Input/Output: [[-85.7265161211426 76] -9.726516121142595]
Test Case: 138 | Input/Output: [[-82.66529649809857 -32] -114.66529649809857]
Test Case: 139 | Input/Output: [[98.4639801229981 -93] 5.463980122998095]
Test Case: 140 | Input/Output: [[57.91889593196123 79] 136.91889593196123]
Test Case: 141 | Input/Output: [[66.85465933949186 69] 135.85465933949186]
Test Case: 142 | Input/Output: [[76.11701335810324 40] 116.11701335810324]
Test Case: 143 | Input/Output: [[13.440127562531615 -53] -39.559872437468385]
Test Case: 144 | Input/Output: [[-53.47871832831148 58] 4.52128167168852]
Test Case: 145 | Input/Output: [[29.18840533975896 63] 92.18840533975896]
Test Case: 146 | Input/Output: [[94.06076844001504 -83] 11.060768440015039]
Test Case: 147 | Input/Output: [[80.4979676172361 -44] 36.4979676172361]
Test Case: 148 | Input/Output: [[-48.825383105783175 73] 24.174616894216825]
Test Case: 149 | Input/Output: [[-43.08603753696774 -34] -77.08603753696774]
Test Case: 150 | Input/Output: [[30.76663173630331 25] 55.76663173630331]
Test Case: 151 | Input/Output: [[89.82439368900205 -36] 53.82439368900205]
Test Case: 152 | Input/Output: [[20.371973799489055 51] 71.37197379948906]
Test Case: 153 | Input/Output: [[38.79896240056206 -54] -15.201037599437939]
Test Case: 154 | Input/Output: [[50.754924429561356 14] 64.75492442956136]
Test Case: 155 | Input/Output: [[73.59818935998595 -88] -14.401810640014048]
Test Case: 156 | Input/Output: [[-45.228174020731785 -97] -142.22817402073179]
Test Case: 157 | Input/Output: [[-36.38553635275734 18] -18.38553635275734]
Test Case: 158 | Input/Output: [[-24.64838144880966 88] 63.35161855119034]
Test Case: 159 | Input/Output: [[41.55677358745382 94] 135.55677358745382]
Test Case: 160 | Input/Output: [[-23.31682646342108 -89] -112.31682646342108]
Test Case: 161 | Input/Output: [[62.91424805919638 83] 145.91424805919638]
Test Case: 162 | Input/Output: [[-55.9289214480635 2] -53.9289214480635]
Test Case: 163 | Input/Output: [[27.554108760061396 54] 81.5541087600614]
Test Case: 164 | Input/Output: [[-79.58317061575018 -73] -152.5831706157502]
Test Case: 165 | Input/Output: [[62.81095255118353 4] 66.81095255118353]
Test Case: 166 | Input/Output: [[-12.613492660025742 -9] -21.61349266002574]
Test Case: 167 | Input/Output: [[1.7656693620357515 -22] -20.23433063796425]
Test Case: 168 | Input/Output: [[-88.08035072302741 67] -21.080350723027408]
Test Case: 169 | Input/Output: [[-69.9403675422998 38] -31.940367542299796]
Test Case: 170 | Input/Output: [[84.58116125967118 99] 183.58116125967118]
Test Case: 171 | Input/Output: [[82.20332226802475 86] 168.20332226802475]
Test Case: 172 | Input/Output: [[34.80143821754109 46] 80.80143821754109]
Test Case: 173 | Input/Output: [[52.64500779069979 -41] 11.645007790699793]
Test Case: 174 | Input/Output: [[5.0219843089097935 49] 54.02198430890979]
Test Case: 175 | Input/Output: [[29.828281026578964 43] 72.82828102657896]
Test Case: 176 | Input/Output: [[15.518857926292284 30] 45.518857926292284]
Test Case: 177 | Input/Output: [[16.933737350417275 34] 50.933737350417275]
Test Case: 178 | Input/Output: [[65.62634498587755 63] 128.62634498587755]
Test Case: 179 | Input/Output: [[0.11805683278518586 70] 70.11805683278519]
Test Case: 180 | Input/Output: [[-66.90519842424183 -31] -97.90519842424183]
Test Case: 181 | Input/Output: [[-58.81561398797142 -18] -76.81561398797142]
Test Case: 182 | Input/Output: [[47.454337178533166 5] 52.454337178533166]
Test Case: 183 | Input/Output: [[-25.128798446301133 -72] -97.12879844630113]
Test Case: 184 | Input/Output: [[21.968740335347064 97] 118.96874033534706]
Test Case: 185 | Input/Output: [[71.64406612882615 99] 170.64406612882615]
Test Case: 186 | Input/Output: [[-87.50350637996873 99] 11.496493620031274]
Test Case: 187 | Input/Output: [[-57.852643465075616 -81] -138.85264346507563]
Test Case: 188 | Input/Output: [[-30.5441786519973 -25] -55.5441786519973]
Test Case: 189 | Input/Output: [[-29.74333560821647 61] 31.25666439178353]
Test Case: 190 | Input/Output: [[46.50742813932311 -31] 15.50742813932311]
Test Case: 191 | Input/Output: [[59.925117977977806 -35] 24.925117977977806]
Test Case: 192 | Input/Output: [[-83.48702513552328 -6] -89.48702513552328]
Test Case: 193 | Input/Output: [[60.671780237332115 17] 77.67178023733211]
Test Case: 194 | Input/Output: [[-24.38922771303052 9] -15.389227713030522]
Test Case: 195 | Input/Output: [[80.69275057353033 24] 104.69275057353033]
Test Case: 196 | Input/Output: [[27.581845546647713 -94] -66.41815445335229]
Test Case: 197 | Input/Output: [[-31.42029960522879 6] -25.42029960522879]
Test Case: 198 | Input/Output: [[61.63869295395483 -86] -24.36130704604517]
Test Case: 199 | Input/Output: [[1.803230107102749 -81] -79.19676989289725]
Test Case: 200 | Input/Output: [[-30.63307510271089 -44] -74.63307510271089]
Test Case: 201 | Input/Output: [[92.30957670827294 54] 146.30957670827294]
Test Case: 202 | Input/Output: [[70.65137907231411 49] 119.65137907231411]
Test Case: 203 | Input/Output: [[96.11413715481149 -83] 13.114137154811488]
Test Case: 204 | Input/Output: [[17.965903594846353 -14] 3.9659035948463526]
Test Case: 205 | Input/Output: [[76.25865338036346 28] 104.25865338036346]
Test Case: 206 | Input/Output: [[-74.85829607582028 -90] -164.85829607582028]
Test Case: 207 | Input/Output: [[21.209573318606203 40] 61.2095733186062]
Test Case: 208 | Input/Output: [[18.33674670590335 85] 103.33674670590335]
Test Case: 209 | Input/Output: [[-79.19388660967743 -80] -159.19388660967743]
Test Case: 210 | Input/Output: [[-79.783801927707 -60] -139.783801927707]
Test Case: 211 | Input/Output: [[-51.216018207840676 -26] -77.21601820784068]
Test Case: 212 | Input/Output: [[-74.5779385019203 53] -21.5779385019203]
Test Case: 213 | Input/Output: [[91.97713550563611 80] 171.9771355056361]
Test Case: 214 | Input/Output: [[93.3064083693815 -86] 7.306408369381501]
Test Case: 215 | Input/Output: [[53.57261094448026 54] 107.57261094448026]
Test Case: 216 | Input/Output: [[-5.732235582294649 -50] -55.73223558229465]
Test Case: 217 | Input/Output: [[78.9072808006826 82] 160.9072808006826]
Test Case: 218 | Input/Output: [[-38.496324280964565 56] 17.503675719035435]
Test Case: 219 | Input/Output: [[-58.34709296156586 9] -49.34709296156586]
Test Case: 220 | Input/Output: [[10.674880860554083 -64] -53.32511913944592]
Test Case: 221 | Input/Output: [[-39.04858627172103 -71] -110.04858627172104]
Test Case: 222 | Input/Output: [[-84.22765577566022 81] -3.2276557756602244]
Test Case: 223 | Input/Output: [[-36.965694071931 -37] -73.965694071931]
Test Case: 224 | Input/Output: [[-64.23461117614168 70] 5.765388823858316]
Test Case: 225 | Input/Output: [[54.93674602638521 58] 112.93674602638521]
Test Case: 226 | Input/Output: [[-27.51607647099148 53] 25.48392352900852]
Test Case: 227 | Input/Output: [[95.01665975247204 -15] 80.01665975247204]
Test Case: 228 | Input/Output: [[85.32209438748012 35] 120.32209438748012]
Test Case: 229 | Input/Output: [[85.9320891931377 -59] 26.9320891931377]
Test Case: 230 | Input/Output: [[40.3829380475091 85] 125.3829380475091]
Test Case: 231 | Input/Output: [[-9.607828229793085 -68] -77.60782822979309]
Test Case: 232 | Input/Output: [[22.537140982299107 -28] -5.462859017700893]
Test Case: 233 | Input/Output: [[68.96800797824102 -56] 12.968007978241019]
Test Case: 234 | Input/Output: [[12.363516054171527 -47] -34.63648394582847]
Test Case: 235 | Input/Output: [[-52.35483617393059 55] 2.645163826069407]
Test Case: 236 | Input/Output: [[52.53830688901067 96] 148.53830688901067]
Test Case: 237 | Input/Output: [[26.956621259340224 -3] 23.956621259340224]
Test Case: 238 | Input/Output: [[9.962554837410991 -13] -3.037445162589009]
Test Case: 239 | Input/Output: [[45.42957036585457 69] 114.42957036585457]
Test Case: 240 | Input/Output: [[15.93885597123949 21] 36.93885597123949]
Test Case: 241 | Input/Output: [[-96.8018014910168 -67] -163.80180149101682]
Test Case: 242 | Input/Output: [[-64.03510625663816 -80] -144.03510625663816]
Test Case: 243 | Input/Output: [[-44.01785256644144 -31] -75.01785256644143]
Test Case: 244 | Input/Output: [[37.15787077133578 97] 134.15787077133578]
Test Case: 245 | Input/Output: [[-20.146994370573907 93] 72.8530056294261]
Test Case: 246 | Input/Output: [[-9.928386268376784 -15] -24.928386268376784]
Test Case: 247 | Input/Output: [[-27.85019967197738 5] -22.85019967197738]
Test Case: 248 | Input/Output: [[41.95154097890648 26] 67.95154097890648]
Test Case: 249 | Input/Output: [[-43.43882791323814 94] 50.56117208676186]
Test Case: 250 | Input/Output: [[-84.1235363337782 -46] -130.1235363337782]
Test Case: 251 | Input/Output: [[-64.89026240969133 95] 30.10973759030867]
Test Case: 252 | Input/Output: [[-20.51081835755764 -13] -33.51081835755764]
Test Case: 253 | Input/Output: [[-65.0548826456475 7] -58.054882645647496]
Test Case: 254 | Input/Output: [[-96.66503843152346 -58] -154.66503843152344]
Test Case: 255 | Input/Output: [[-68.22324240472653 97] 28.776757595273466]
Test Case: 256 | Input/Output: [[-6.266825483335921 44] 37.73317451666408]
Test Case: 257 | Input/Output: [[63.174496802661764 79] 142.17449680266176]
Test Case: 258 | Input/Output: [[37.69154133064791 22] 59.69154133064791]
Test Case: 259 | Input/Output: [[98.49960719154734 4] 102.49960719154734]
Test Case: 260 | Input/Output: [[-78.85551618427692 73] -5.855516184276922]
Test Case: 261 | Input/Output: [[56.50648920515505 87] 143.50648920515505]
Test Case: 262 | Input/Output: [[-17.69769774556795 -99] -116.69769774556795]
Test Case: 263 | Input/Output: [[-87.23241480910575 -38] -125.23241480910575]
Test Case: 264 | Input/Output: [[-2.301956790582139 8] 5.698043209417861]
Test Case: 265 | Input/Output: [[94.4333992075506 -71] 23.433399207550593]
Test Case: 266 | Input/Output: [[-95.91054007405155 37] -58.91054007405155]
Test Case: 267 | Input/Output: [[50.487534451737815 -54] -3.5124655482621847]
Test Case: 268 | Input/Output: [[15.815297238162572 -38] -22.18470276183743]
Test Case: 269 | Input/Output: [[56.4265421847808 12] 68.4265421847808]
Test Case: 270 | Input/Output: [[48.65032599206515 -9] 39.65032599206515]
Test Case: 271 | Input/Output: [[99.61366505474174 -10] 89.61366505474174]
Test Case: 272 | Input/Output: [[-19.511449786501785 -13] -32.511449786501785]
Test Case: 273 | Input/Output: [[-54.98955231108382 -19] -73.98955231108383]
Test Case: 274 | Input/Output: [[-70.354028296667 4] -66.354028296667]
Test Case: 275 | Input/Output: [[57.97415645379499 -5] 52.97415645379499]
Test Case: 276 | Input/Output: [[2.75781969410032 -55] -52.24218030589968]
Test Case: 277 | Input/Output: [[27.5308968180577 62] 89.5308968180577]
Test Case: 278 | Input/Output: [[-28.73769352519689 12] -16.73769352519689]
Test Case: 279 | Input/Output: [[3.148106002682354 -89] -85.85189399731765]
Test Case: 280 | Input/Output: [[-36.54242059632766 -65] -101.54242059632766]
Test Case: 281 | Input/Output: [[13.049709861150461 -34] -20.95029013884954]
Test Case: 282 | Input/Output: [[-13.346950821158572 -94] -107.34695082115857]
Test Case: 283 | Input/Output: [[-88.245455736096 23] -65.245455736096]
Test Case: 284 | Input/Output: [[31.414319031562457 89] 120.41431903156246]
Test Case: 285 | Input/Output: [[46.78173253626355 -16] 30.781732536263547]
Test Case: 286 | Input/Output: [[53.38944973479494 -23] 30.389449734794937]
Test Case: 287 | Input/Output: [[80.21699301739852 -42] 38.21699301739852]
Test Case: 288 | Input/Output: [[30.613264763739835 -16] 14.613264763739835]
Test Case: 289 | Input/Output: [[-72.90513089662443 31] -41.90513089662443]
Test Case: 290 | Input/Output: [[92.54376222216149 -100] -7.45623777783851]
Test Case: 291 | Input/Output: [[-45.94289983730957 22] -23.942899837309568]
Test Case: 292 | Input/Output: [[-45.57141549454406 98] 52.42858450545594]
Test Case: 293 | Input/Output: [[96.40707205820391 22] 118.40707205820391]
Test Case: 294 | Input/Output: [[-89.1102068433529 77] -12.110206843352898]
Test Case: 295 | Input/Output: [[-70.32223960863722 41] -29.32223960863722]
Test Case: 296 | Input/Output: [[22.022621620432915 -60] -37.977378379567085]
Test Case: 297 | Input/Output: [[-20.55278721915208 32] 11.44721278084792]
Test Case: 298 | Input/Output: [[61.814862775868335 -82] -20.185137224131665]
Test Case: 299 | Input/Output: [[-86.75020290911894 -84] -170.75020290911894]
Test Case: 300 | Input/Output: [[-53.31040610460207 7] -46.31040610460207]
Test Case: 301 | Input/Output: [[-62.60261919220913 99] 36.39738080779087]
Test Case: 302 | Input/Output: [[92.73549478193684 30] 122.73549478193684]
Test Case: 303 | Input/Output: [[-13.031022143149286 3] -10.031022143149286]
Test Case: 304 | Input/Output: [[20.04586463106422 88] 108.04586463106422]
Test Case: 305 | Input/Output: [[71.36225637329579 49] 120.36225637329579]
Test Case: 306 | Input/Output: [[-46.660629832751525 -71] -117.66062983275152]
Test Case: 307 | Input/Output: [[-68.41847248272354 21] -47.418472482723544]
Test Case: 308 | Input/Output: [[77.3500640247463 -25] 52.3500640247463]
Test Case: 309 | Input/Output: [[-5.3530027583330195 89] 83.64699724166698]
Test Case: 310 | Input/Output: [[-53.99461354293011 -12] -65.99461354293011]
Test Case: 311 | Input/Output: [[53.218444495473534 -17] 36.218444495473534]
Test Case: 312 | Input/Output: [[-40.089752447607 -88] -128.089752447607]
Test Case: 313 | Input/Output: [[47.04152584300948 41] 88.04152584300948]
Test Case: 314 | Input/Output: [[59.081672817493626 58] 117.08167281749363]
Test Case: 315 | Input/Output: [[-2.4386564363326784 40] 37.56134356366732]
Test Case: 316 | Input/Output: [[22.22991638518235 -83] -60.77008361481765]
Test Case: 317 | Input/Output: [[-58.655728520583004 81] 22.344271479416996]
Test Case: 318 | Input/Output: [[33.949637077122446 61] 94.94963707712245]
Test Case: 319 | Input/Output: [[78.5710014108117 56] 134.5710014108117]
Test Case: 320 | Input/Output: [[-59.3523071417954 50] -9.3523071417954]
Test Case: 321 | Input/Output: [[-52.2421400066198 64] 11.757859993380201]
Test Case: 322 | Input/Output: [[23.61941607288378 17] 40.61941607288378]
Test Case: 323 | Input/Output: [[-94.91048967014153 88] -6.91048967014153]
Test Case: 324 | Input/Output: [[4.187280848195314 -82] -77.81271915180469]
Test Case: 325 | Input/Output: [[51.62421395391621 73] 124.62421395391621]
Test Case: 326 | Input/Output: [[-29.341364120481146 72] 42.658635879518854]
Test Case: 327 | Input/Output: [[-37.705683794039736 -19] -56.705683794039736]
Test Case: 328 | Input/Output: [[2.4756115393682876 -86] -83.52438846063171]
Test Case: 329 | Input/Output: [[-97.88132109226397 -11] -108.88132109226397]
Test Case: 330 | Input/Output: [[16.542225339428413 71] 87.54222533942841]
Test Case: 331 | Input/Output: [[-24.456227682286723 -18] -42.45622768228672]
Test Case: 332 | Input/Output: [[-28.711412453089352 19] -9.711412453089352]
Test Case: 333 | Input/Output: [[82.21358408936453 35] 117.21358408936453]
Test Case: 334 | Input/Output: [[-44.54363014184772 -85] -129.54363014184773]
Test Case: 335 | Input/Output: [[-89.81453261461128 -20] -109.81453261461128]
Test Case: 336 | Input/Output: [[-68.73809795514336 -13] -81.73809795514336]
Test Case: 337 | Input/Output: [[80.12588663571944 89] 169.12588663571944]
Test Case: 338 | Input/Output: [[61.66148087217911 86] 147.6614808721791]
Test Case: 339 | Input/Output: [[-88.41576346148376 -46] -134.41576346148378]
Test Case: 340 | Input/Output: [[64.27607009290344 84] 148.27607009290344]
Test Case: 341 | Input/Output: [[9.142045218936673 -87] -77.85795478106333]
Test Case: 342 | Input/Output: [[52.505094883233824 -30] 22.505094883233824]
Test Case: 343 | Input/Output: [[10.642569712782034 6] 16.642569712782034]
Test Case: 344 | Input/Output: [[0.8139077543125097 25] 25.81390775431251]
Test Case: 345 | Input/Output: [[5.880569065539817 -98] -92.11943093446018]
Test Case: 346 | Input/Output: [[-90.393233997761 82] -8.393233997761001]
Test Case: 347 | Input/Output: [[-11.399749065637053 81] 69.60025093436295]
Test Case: 348 | Input/Output: [[-91.07507356895192 60] -31.07507356895192]
Test Case: 349 | Input/Output: [[67.34110605786498 41] 108.34110605786498]
Test Case: 350 | Input/Output: [[39.8466739465224 -76] -36.1533260534776]
Test Case: 351 | Input/Output: [[-30.848889037360408 69] 38.15111096263959]
Test Case: 352 | Input/Output: [[-42.68970035997135 66] 23.310299640028653]
Test Case: 353 | Input/Output: [[-16.936241934257396 75] 58.063758065742604]
Test Case: 354 | Input/Output: [[11.503864582037409 -1] 10.503864582037409]
Test Case: 355 | Input/Output: [[-60.99691401863705 -57] -117.99691401863706]
Test Case: 356 | Input/Output: [[-53.238554733161614 50] -3.238554733161614]
Test Case: 357 | Input/Output: [[11.288951355975385 -67] -55.711048644024615]
Test Case: 358 | Input/Output: [[92.53395774723509 76] 168.5339577472351]
Test Case: 359 | Input/Output: [[30.37659039781832 -25] 5.376590397818319]
Test Case: 360 | Input/Output: [[42.30949688644162 53] 95.30949688644162]
Test Case: 361 | Input/Output: [[-21.101448381788558 75] 53.89855161821144]
Test Case: 362 | Input/Output: [[-66.74210405458751 18] -48.742104054587514]
Test Case: 363 | Input/Output: [[-69.39510874264087 11] -58.39510874264087]
Test Case: 364 | Input/Output: [[-54.76139758116305 -50] -104.76139758116305]
Test Case: 365 | Input/Output: [[-69.34042912760731 -54] -123.34042912760731]
Test Case: 366 | Input/Output: [[-45.312728147622124 -68] -113.31272814762212]
Test Case: 367 | Input/Output: [[-87.84113522653212 -44] -131.84113522653212]
Test Case: 368 | Input/Output: [[-4.525527491008802 28] 23.474472508991198]
Test Case: 369 | Input/Output: [[-84.30649959373817 83] -1.3064995937381667]
Test Case: 370 | Input/Output: [[71.80069459136405 28] 99.80069459136405]
Test Case: 371 | Input/Output: [[-24.924455528933635 -40] -64.92445552893363]
Test Case: 372 | Input/Output: [[-61.096356236200045 -12] -73.09635623620005]
Test Case: 373 | Input/Output: [[11.270430050450699 -22] -10.729569949549301]
Test Case: 374 | Input/Output: [[20.50179452646732 -82] -61.49820547353268]
Test Case: 375 | Input/Output: [[51.984587763023626 -3] 48.984587763023626]
Test Case: 376 | Input/Output: [[9.130216965429156 -97] -87.86978303457084]
Test Case: 377 | Input/Output: [[40.667019311523035 56] 96.66701931152303]
Test Case: 378 | Input/Output: [[33.62984557307351 -62] -28.37015442692649]
Test Case: 379 | Input/Output: [[0.14730240302765196 -51] -50.85269759697235]
Test Case: 380 | Input/Output: [[83.72723265361557 19] 102.72723265361557]
Test Case: 381 | Input/Output: [[-98.32346564904864 -20] -118.32346564904864]
Test Case: 382 | Input/Output: [[36.44929402239276 13] 49.44929402239276]
Test Case: 383 | Input/Output: [[-37.352888872627396 0] -37.352888872627396]
Test Case: 384 | Input/Output: [[-86.61218891812865 96] 9.387811081871348]
Test Case: 385 | Input/Output: [[31.04425676751444 38] 69.04425676751444]
Test Case: 386 | Input/Output: [[70.52108486137178 -49] 21.521084861371776]
Test Case: 387 | Input/Output: [[-13.00613853225137 -91] -104.00613853225137]
Test Case: 388 | Input/Output: [[-81.42390158965364 2] -79.42390158965364]
Test Case: 389 | Input/Output: [[-72.64505381057833 -82] -154.64505381057833]
Test Case: 390 | Input/Output: [[69.03497995311673 4] 73.03497995311673]
Test Case: 391 | Input/Output: [[-78.18406306307799 -75] -153.18406306307799]
Test Case: 392 | Input/Output: [[19.664188223658925 75] 94.66418822365893]
Test Case: 393 | Input/Output: [[-18.570682287199887 71] 52.42931771280011]
Test Case: 394 | Input/Output: [[-54.20509168343306 100] 45.79490831656694]
Test Case: 395 | Input/Output: [[97.2758123447455 20] 117.2758123447455]
Test Case: 396 | Input/Output: [[62.13307644491505 -90] -27.866923555084952]
Test Case: 397 | Input/Output: [[-99.27628526299048 88] -11.276285262990484]
Test Case: 398 | Input/Output: [[-79.3500353951283 -77] -156.35003539512832]
Test Case: 399 | Input/Output: [[-78.05691809994917 -69] -147.05691809994917]
Test Case: 400 | Input/Output: [[-14.861754097028282 51] 36.13824590297172]
Test Case: 401 | Input/Output: [[95.99421143008468 57] 152.99421143008468]
Test Case: 402 | Input/Output: [[88.14264852024147 1] 89.14264852024147]
Test Case: 403 | Input/Output: [[-95.52842343784506 92] -3.5284234378450634]
Test Case: 404 | Input/Output: [[-4.940971545264688 -61] -65.94097154526469]
Test Case: 405 | Input/Output: [[-70.71492317072654 85] 14.285076829273464]
Test Case: 406 | Input/Output: [[62.14852620747652 44] 106.14852620747652]
Test Case: 407 | Input/Output: [[-63.2284700889298 -64] -127.2284700889298]
Test Case: 408 | Input/Output: [[14.687240522764043 42] 56.68724052276404]
Test Case: 409 | Input/Output: [[-70.18061290728134 -27] -97.18061290728134]
Test Case: 410 | Input/Output: [[57.81141545918891 -90] -32.18858454081109]
Test Case: 411 | Input/Output: [[31.46549156127051 -43] -11.534508438729489]
Test Case: 412 | Input/Output: [[57.85853115232925 32] 89.85853115232925]
Test Case: 413 | Input/Output: [[-51.02463154454282 -27] -78.02463154454281]
Test Case: 414 | Input/Output: [[-68.2283631969262 76] 7.771636803073804]
Test Case: 415 | Input/Output: [[47.652904257643286 67] 114.65290425764329]
Test Case: 416 | Input/Output: [[15.453209982308948 -37] -21.546790017691052]
Test Case: 417 | Input/Output: [[49.62899347292495 -60] -10.371006527075053]
Test Case: 418 | Input/Output: [[51.5930773607644 16] 67.5930773607644]
Test Case: 419 | Input/Output: [[18.40759724883094 -61] -42.59240275116906]
Test Case: 420 | Input/Output: [[75.95190770985326 55] 130.95190770985326]
Test Case: 421 | Input/Output: [[17.296455150171 0] 17.296455150171]
Test Case: 422 | Input/Output: [[15.032463199954009 -79] -63.96753680004599]
Test Case: 423 | Input/Output: [[40.56605947167935 -99] -58.43394052832065]
Test Case: 424 | Input/Output: [[-63.70354637251472 -50] -113.70354637251472]
Test Case: 425 | Input/Output: [[-40.12745167321301 29] -11.12745167321301]
Test Case: 426 | Input/Output: [[17.03030320836936 86] 103.03030320836936]
Test Case: 427 | Input/Output: [[-75.03799411314958 -68] -143.03799411314958]
Test Case: 428 | Input/Output: [[52.60154815560645 -22] 30.60154815560645]
Test Case: 429 | Input/Output: [[46.50409301618615 91] 137.50409301618615]
Test Case: 430 | Input/Output: [[-42.91201194021346 -97] -139.91201194021346]
Test Case: 431 | Input/Output: [[-35.66740110875024 -58] -93.66740110875024]
Test Case: 432 | Input/Output: [[3.826301472449515 94] 97.82630147244952]
Test Case: 433 | Input/Output: [[-83.7321521851549 -58] -141.73215218515492]
Test Case: 434 | Input/Output: [[1.539021842609742 64] 65.53902184260974]
Test Case: 435 | Input/Output: [[-52.73996658705335 63] 10.260033412946648]
Test Case: 436 | Input/Output: [[83.93374557605202 -84] -0.06625442394798142]
Test Case: 437 | Input/Output: [[72.50255520086745 37] 109.50255520086745]
Test Case: 438 | Input/Output: [[16.74497994947137 -20] -3.2550200505286284]
Test Case: 439 | Input/Output: [[-98.71299111530544 -31] -129.71299111530544]
Test Case: 440 | Input/Output: [[13.644130606591105 44] 57.644130606591105]
Test Case: 441 | Input/Output: [[92.75804870888123 -48] 44.75804870888123]
Test Case: 442 | Input/Output: [[-97.59844354390017 7] -90.59844354390017]
Test Case: 443 | Input/Output: [[-18.562480931191942 84] 65.43751906880806]
Test Case: 444 | Input/Output: [[65.47857146897002 -9] 56.47857146897002]
Test Case: 445 | Input/Output: [[68.32213674706003 -70] -1.6778632529399715]
Test Case: 446 | Input/Output: [[-5.124700194282511 2] -3.124700194282511]
Test Case: 447 | Input/Output: [[-46.71101243107885 -90] -136.71101243107884]
Test Case: 448 | Input/Output: [[53.42517787158337 77] 130.42517787158337]
Test Case: 449 | Input/Output: [[-60.70956459713555 59] -1.7095645971355466]
Test Case: 450 | Input/Output: [[-12.696993082970948 -6] -18.69699308297095]
Test Case: 451 | Input/Output: [[11.289510748984185 15] 26.289510748984185]
Test Case: 452 | Input/Output: [[22.570753710676 -86] -63.429246289324]
Test Case: 453 | Input/Output: [[27.723901818270022 8] 35.72390181827002]
Test Case: 454 | Input/Output: [[-77.91677042992788 20] -57.91677042992788]
Test Case: 455 | Input/Output: [[-75.30448880719845 -17] -92.30448880719845]
Test Case: 456 | Input/Output: [[36.6468557620974 60] 96.6468557620974]
Test Case: 457 | Input/Output: [[-83.07696415053975 79] -4.076964150539752]
Test Case: 458 | Input/Output: [[46.64188449496746 24] 70.64188449496746]
Test Case: 459 | Input/Output: [[86.65969332178184 96] 182.65969332178184]
Test Case: 460 | Input/Output: [[24.54558710732819 88] 112.54558710732819]
Test Case: 461 | Input/Output: [[67.11368904420704 39] 106.11368904420704]
Test Case: 462 | Input/Output: [[-39.871626224942936 -2] -41.871626224942936]
Test Case: 463 | Input/Output: [[-80.4186603024985 -85] -165.4186603024985]
Test Case: 464 | Input/Output: [[-27.08679347461127 -3] -30.08679347461127]
Test Case: 465 | Input/Output: [[90.2798063710494 -46] 44.2798063710494]
Test Case: 466 | Input/Output: [[51.57972714562305 41] 92.57972714562305]
Test Case: 467 | Input/Output: [[-85.40917974531708 10] -75.40917974531708]
Test Case: 468 | Input/Output: [[-37.02295841620595 -7] -44.02295841620595]
Test Case: 469 | Input/Output: [[25.15047011154148 -14] 11.15047011154148]
Test Case: 470 | Input/Output: [[-59.68282282877322 -100] -159.68282282877323]
Test Case: 471 | Input/Output: [[-40.97120233286535 66] 25.028797667134647]
Test Case: 472 | Input/Output: [[-9.659413809626798 -61] -70.6594138096268]
Test Case: 473 | Input/Output: [[-42.520022729010584 13] -29.520022729010584]
Test Case: 474 | Input/Output: [[80.58521408324557 95] 175.58521408324557]
Test Case: 475 | Input/Output: [[-50.55144099454021 69] 18.448559005459792]
Test Case: 476 | Input/Output: [[-58.503888643772854 -74] -132.50388864377285]
Test Case: 477 | Input/Output: [[-5.865518797816023 -100] -105.86551879781602]
Test Case: 478 | Input/Output: [[-31.432839448647414 -88] -119.43283944864741]
Test Case: 479 | Input/Output: [[-67.87116737558426 -38] -105.87116737558426]
Test Case: 480 | Input/Output: [[53.36817705018785 23] 76.36817705018785]
Test Case: 481 | Input/Output: [[-72.70532301610073 -24] -96.70532301610073]
Test Case: 482 | Input/Output: [[78.21870698016718 67] 145.21870698016718]
Test Case: 483 | Input/Output: [[-12.573265334393199 16] 3.4267346656068014]
Test Case: 484 | Input/Output: [[86.44494939303053 22] 108.44494939303053]
Test Case: 485 | Input/Output: [[78.56592255793697 -6] 72.56592255793697]
Test Case: 486 | Input/Output: [[15.141488954937188 29] 44.14148895493719]
Test Case: 487 | Input/Output: [[20.828166372821116 -69] -48.171833627178884]
Test Case: 488 | Input/Output: [[30.026202089613548 54] 84.02620208961355]
Test Case: 489 | Input/Output: [[85.64161465879215 22] 107.64161465879215]
Test Case: 490 | Input/Output: [[71.51098293723626 -28] 43.510982937236264]
Test Case: 491 | Input/Output: [[-3.0093722748189293 50] 46.99062772518107]
Test Case: 492 | Input/Output: [[-14.140649986392901 2] -12.140649986392901]
Test Case: 493 | Input/Output: [[-64.69249700071418 -53] -117.69249700071418]
Test Case: 494 | Input/Output: [[-35.899063253972145 10] -25.899063253972145]
Test Case: 495 | Input/Output: [[37.8417252724353 -17] 20.841725272435298]
Test Case: 496 | Input/Output: [[-10.45216487701579 -48] -58.45216487701579]
Test Case: 497 | Input/Output: [[-38.48786079623092 -90] -128.4878607962309]
Test Case: 498 | Input/Output: [[-54.25072345137518 -16] -70.25072345137518]
Test Case: 499 | Input/Output: [[-68.36043314647758 99] 30.639566853522425]
Test Case: 500 | Input/Output: [[53.43685305978812 65] 118.43685305978812]
Test Case: 501 | Input/Output: [[-76.92839870336694 57] -19.928398703366938]
Test Case: 502 | Input/Output: [[-84.28130928280243 25] -59.281309282802425]
Test Case: 503 | Input/Output: [[-23.277210441223687 -46] -69.27721044122369]
Test Case: 504 | Input/Output: [[-62.92440056849489 -19] -81.92440056849489]
Test Case: 505 | Input/Output: [[-31.370861694724766 -93] -124.37086169472477]
Test Case: 506 | Input/Output: [[-66.84843869689311 -77] -143.8484386968931]
Test Case: 507 | Input/Output: [[-4.804995434794932 59] 54.19500456520507]
Test Case: 508 | Input/Output: [[69.92540341542858 68] 137.92540341542858]
Test Case: 509 | Input/Output: [[-35.28506915564813 45] 9.71493084435187]
Test Case: 510 | Input/Output: [[-89.26641765850968 -71] -160.26641765850968]
Test Case: 511 | Input/Output: [[-93.3518443215051 94] 0.6481556784949021]
Test Case: 512 | Input/Output: [[-75.07699212244529 45] -30.07699212244529]
Test Case: 513 | Input/Output: [[-1.4006309945100384 -25] -26.40063099451004]
Test Case: 514 | Input/Output: [[89.27955770294267 68] 157.27955770294267]
Test Case: 515 | Input/Output: [[-37.19694181685496 72] 34.80305818314504]
Test Case: 516 | Input/Output: [[-94.88301613149169 -26] -120.88301613149169]
Test Case: 517 | Input/Output: [[45.990249691445484 -72] -26.009750308554516]
Test Case: 518 | Input/Output: [[69.51871553307228 58] 127.51871553307228]
Test Case: 519 | Input/Output: [[90.31464232899327 -85] 5.314642328993273]
Test Case: 520 | Input/Output: [[87.26187498157759 -23] 64.26187498157759]
Test Case: 521 | Input/Output: [[16.416561293353197 6] 22.416561293353197]
Test Case: 522 | Input/Output: [[0.5352203972007317 57] 57.53522039720073]
Test Case: 523 | Input/Output: [[-63.830416411353696 81] 17.169583588646304]
Test Case: 524 | Input/Output: [[74.21761959403369 99] 173.2176195940337]
Test Case: 525 | Input/Output: [[-3.654217985237622 -53] -56.65421798523762]
Test Case: 526 | Input/Output: [[2.8638057312964094 -100] -97.13619426870359]
Test Case: 527 | Input/Output: [[81.23574330562576 -62] 19.23574330562576]
Test Case: 528 | Input/Output: [[-64.77084502782147 -38] -102.77084502782147]
Test Case: 529 | Input/Output: [[90.25565576202655 -34] 56.25565576202655]
Test Case: 530 | Input/Output: [[6.426484333545929 69] 75.42648433354593]
Test Case: 531 | Input/Output: [[45.27048583531348 -79] -33.72951416468652]
Test Case: 532 | Input/Output: [[96.33999839483963 -13] 83.33999839483963]
Test Case: 533 | Input/Output: [[85.8378591536989 -61] 24.8378591536989]
Test Case: 534 | Input/Output: [[-27.541594990579284 -5] -32.541594990579284]
Test Case: 535 | Input/Output: [[-77.20097375396196 -44] -121.20097375396196]
Test Case: 536 | Input/Output: [[60.43966708010265 -91] -30.56033291989735]
Test Case: 537 | Input/Output: [[-87.14031400155343 -34] -121.14031400155343]
Test Case: 538 | Input/Output: [[33.884574542316926 -21] 12.884574542316926]
Test Case: 539 | Input/Output: [[-34.918428363555705 73] 38.081571636444295]
Test Case: 540 | Input/Output: [[85.85699829925957 -99] -13.143001700740427]
Test Case: 541 | Input/Output: [[87.86451379792217 98] 185.86451379792217]
Test Case: 542 | Input/Output: [[43.73643468557802 4] 47.73643468557802]
Test Case: 543 | Input/Output: [[-55.303889658565296 76] 20.696110341434704]
Test Case: 544 | Input/Output: [[-77.13188018984027 47] -30.131880189840274]
Test Case: 545 | Input/Output: [[-45.30069310795724 48] 2.699306892042763]
Test Case: 546 | Input/Output: [[-62.01661800333716 -93] -155.01661800333716]
Test Case: 547 | Input/Output: [[96.0089488956809 24] 120.0089488956809]
Test Case: 548 | Input/Output: [[-10.894833311586467 4] -6.894833311586467]
Test Case: 549 | Input/Output: [[-49.41369632451873 48] -1.4136963245187317]
Test Case: 550 | Input/Output: [[43.38751510188024 -44] -0.6124848981197601]
Test Case: 551 | Input/Output: [[10.04975880616908 23] 33.04975880616908]
Test Case: 552 | Input/Output: [[72.17519106710643 -7] 65.17519106710643]
Test Case: 553 | Input/Output: [[-15.183223174561974 -100] -115.18322317456197]
Test Case: 554 | Input/Output: [[57.97078315728632 68] 125.97078315728632]
Test Case: 555 | Input/Output: [[-78.7103973038314 97] 18.2896026961686]
Test Case: 556 | Input/Output: [[-77.28550232802823 80] 2.7144976719717704]
Test Case: 557 | Input/Output: [[52.74727837285579 91] 143.7472783728558]
Test Case: 558 | Input/Output: [[45.14380009256848 41] 86.14380009256848]
Test Case: 559 | Input/Output: [[-50.346714345247754 71] 20.653285654752246]
Test Case: 560 | Input/Output: [[-47.12630204209513 -25] -72.12630204209513]
Test Case: 561 | Input/Output: [[-59.85026768477939 73] 13.14973231522061]
Test Case: 562 | Input/Output: [[56.90066901979699 -92] -35.09933098020301]
Test Case: 563 | Input/Output: [[56.527540454807365 28] 84.52754045480737]
Test Case: 564 | Input/Output: [[40.76165843589129 64] 104.76165843589129]
Test Case: 565 | Input/Output: [[-8.138467437488785 30] 21.861532562511215]
Test Case: 566 | Input/Output: [[68.93655106216073 19] 87.93655106216073]
Test Case: 567 | Input/Output: [[-54.01763003357656 99] 44.98236996642344]
Test Case: 568 | Input/Output: [[10.951002704906259 -48] -37.04899729509374]
Test Case: 569 | Input/Output: [[-56.415986815027 71] 14.584013184973003]
Test Case: 570 | Input/Output: [[72.52763276092139 92] 164.5276327609214]
Test Case: 571 | Input/Output: [[-4.365696101436868 89] 84.63430389856313]
Test Case: 572 | Input/Output: [[-42.87587840103906 -69] -111.87587840103906]
Test Case: 573 | Input/Output: [[-80.4445389250281 78] -2.444538925028098]
Test Case: 574 | Input/Output: [[-69.12825143289218 -11] -80.12825143289218]
Test Case: 575 | Input/Output: [[28.322505910494186 -11] 17.322505910494186]
Test Case: 576 | Input/Output: [[-86.47079654754725 34] -52.47079654754725]
Test Case: 577 | Input/Output: [[1.5977806391337452 -6] -4.402219360866255]
Test Case: 578 | Input/Output: [[-68.09949617829662 80] 11.900503821703381]
Test Case: 579 | Input/Output: [[44.23966796659295 7] 51.23966796659295]
Test Case: 580 | Input/Output: [[60.19592812882894 -35] 25.19592812882894]
Test Case: 581 | Input/Output: [[-80.40595349012871 -42] -122.40595349012871]
Test Case: 582 | Input/Output: [[12.100545054063033 29] 41.10054505406303]
Test Case: 583 | Input/Output: [[-99.13368132597316 90] -9.133681325973157]
Test Case: 584 | Input/Output: [[71.42898673869163 -48] 23.428986738691634]
Test Case: 585 | Input/Output: [[-72.55596942683744 -49] -121.55596942683744]
Test Case: 586 | Input/Output: [[-7.998959343353462 45] 37.00104065664654]
Test Case: 587 | Input/Output: [[-36.488080151158655 -9] -45.488080151158655]
Test Case: 588 | Input/Output: [[-83.14557022817344 65] -18.14557022817344]
Test Case: 589 | Input/Output: [[-57.335867822092034 -19] -76.33586782209204]
Test Case: 590 | Input/Output: [[89.72283580400247 21] 110.72283580400247]
Test Case: 591 | Input/Output: [[-13.968538564014608 -34] -47.96853856401461]
Test Case: 592 | Input/Output: [[-77.16387422792008 39] -38.163874227920076]
Test Case: 593 | Input/Output: [[63.17480073806129 75] 138.1748007380613]
Test Case: 594 | Input/Output: [[-78.63373059217005 21] -57.63373059217005]
Test Case: 595 | Input/Output: [[-74.74006345489168 -97] -171.7400634548917]
Test Case: 596 | Input/Output: [[-16.173235094078734 0] -16.173235094078734]
Test Case: 597 | Input/Output: [[-16.21229493966949 -69] -85.21229493966949]
Test Case: 598 | Input/Output: [[60.90726812468239 70] 130.9072681246824]
Test Case: 599 | Input/Output: [[-95.36855713430347 -89] -184.36855713430347]
Test Case: 600 | Input/Output: [[73.41693003651321 51] 124.41693003651321]
Test Case: 601 | Input/Output: [[-79.73902998609834 17] -62.739029986098345]
Test Case: 602 | Input/Output: [[8.57118056830646 -45] -36.42881943169354]
Test Case: 603 | Input/Output: [[0.3635794533967527 -24] -23.636420546603247]
Test Case: 604 | Input/Output: [[-75.43565957375257 -78] -153.43565957375256]
Test Case: 605 | Input/Output: [[4.318603038892178 91] 95.31860303889218]
Test Case: 606 | Input/Output: [[-54.600136042352254 27] -27.600136042352254]
Test Case: 607 | Input/Output: [[-29.073928583648524 -64] -93.07392858364852]
Test Case: 608 | Input/Output: [[-25.53942898259332 9] -16.53942898259332]
Test Case: 609 | Input/Output: [[-97.6638386574765 -26] -123.6638386574765]
Test Case: 610 | Input/Output: [[4.490718804892779 33] 37.49071880489278]
Test Case: 611 | Input/Output: [[-94.25315072696603 23] -71.25315072696603]
Test Case: 612 | Input/Output: [[-67.3827927494649 78] 10.617207250535103]
Test Case: 613 | Input/Output: [[-97.45741767152758 2] -95.45741767152758]
Test Case: 614 | Input/Output: [[-24.753383381767847 -81] -105.75338338176785]
Test Case: 615 | Input/Output: [[64.29561783997778 -68] -3.70438216002222]
Test Case: 616 | Input/Output: [[25.63911562528871 50] 75.63911562528871]
Test Case: 617 | Input/Output: [[89.79911433478532 -34] 55.799114334785315]
Test Case: 618 | Input/Output: [[39.55237816233114 -87] -47.44762183766886]
Test Case: 619 | Input/Output: [[82.79180082398244 -4] 78.79180082398244]
Test Case: 620 | Input/Output: [[-64.34394269686979 44] -20.34394269686979]
Test Case: 621 | Input/Output: [[26.924168967834078 3] 29.924168967834078]
Test Case: 622 | Input/Output: [[-77.28202444365715 -36] -113.28202444365715]
Test Case: 623 | Input/Output: [[-55.09137601440604 42] -13.091376014406038]
Test Case: 624 | Input/Output: [[26.115530452107123 0] 26.115530452107123]
Test Case: 625 | Input/Output: [[-79.99541231214877 -44] -123.99541231214877]
Test Case: 626 | Input/Output: [[59.130123244511225 85] 144.13012324451122]
Test Case: 627 | Input/Output: [[83.0828178393873 84] 167.0828178393873]
Test Case: 628 | Input/Output: [[29.27349981877333 -36] -6.726500181226669]
Test Case: 629 | Input/Output: [[41.20304170700393 67] 108.20304170700393]
Test Case: 630 | Input/Output: [[72.3388614206265 -27] 45.3388614206265]
Test Case: 631 | Input/Output: [[21.98689480209177 5] 26.98689480209177]
Test Case: 632 | Input/Output: [[94.27521434253566 -18] 76.27521434253566]
Test Case: 633 | Input/Output: [[-15.341983962541377 49] 33.65801603745862]
Test Case: 634 | Input/Output: [[37.85208646567921 -58] -20.147913534320793]
Test Case: 635 | Input/Output: [[-4.980708593350826 -52] -56.980708593350826]
Test Case: 636 | Input/Output: [[-29.499495540561654 60] 30.500504459438346]
Test Case: 637 | Input/Output: [[11.597136466955632 -63] -51.40286353304437]
Test Case: 638 | Input/Output: [[55.5961420314876 25] 80.5961420314876]
Test Case: 639 | Input/Output: [[-97.79170404299624 80] -17.791704042996244]
Test Case: 640 | Input/Output: [[-54.95837739974083 1] -53.95837739974083]
Test Case: 641 | Input/Output: [[97.27269920977164 96] 193.27269920977164]
Test Case: 642 | Input/Output: [[95.23744278803207 52] 147.23744278803207]
Test Case: 643 | Input/Output: [[73.70073876095026 14] 87.70073876095026]
Test Case: 644 | Input/Output: [[11.971207042527638 72] 83.97120704252764]
Test Case: 645 | Input/Output: [[-77.94298244009286 -51] -128.94298244009286]
Test Case: 646 | Input/Output: [[3.5599889421270348 -72] -68.44001105787297]
Test Case: 647 | Input/Output: [[67.45096954341577 25] 92.45096954341577]
Test Case: 648 | Input/Output: [[5.956018827964797 -25] -19.043981172035203]
Test Case: 649 | Input/Output: [[-78.97561729693643 -9] -87.97561729693643]
Test Case: 650 | Input/Output: [[66.36528382710506 -98] -31.63471617289494]
Test Case: 651 | Input/Output: [[26.064310522071693 -26] 0.0643105220716933]
Test Case: 652 | Input/Output: [[92.10282891075445 -48] 44.102828910754454]
Test Case: 653 | Input/Output: [[-21.401978916973903 97] 75.5980210830261]
Test Case: 654 | Input/Output: [[33.813859257434444 -66] -32.186140742565556]
Test Case: 655 | Input/Output: [[39.46804476232765 39] 78.46804476232765]
Test Case: 656 | Input/Output: [[97.42119288302925 -36] 61.42119288302925]
Test Case: 657 | Input/Output: [[-93.5347551675062 -27] -120.5347551675062]
Test Case: 658 | Input/Output: [[-17.353251468900964 17] -0.3532514689009645]
Test Case: 659 | Input/Output: [[-22.023277154418892 73] 50.97672284558111]
Test Case: 660 | Input/Output: [[61.106211587630156 -74] -12.893788412369844]
Test Case: 661 | Input/Output: [[23.019006318640223 3] 26.019006318640223]
Test Case: 662 | Input/Output: [[-42.637413764551724 60] 17.362586235448276]
Test Case: 663 | Input/Output: [[-93.32135731403757 -21] -114.32135731403757]
Test Case: 664 | Input/Output: [[80.0366907751831 5] 85.0366907751831]
Test Case: 665 | Input/Output: [[29.112912484282106 28] 57.112912484282106]
Test Case: 666 | Input/Output: [[-45.98275355363326 -90] -135.98275355363324]
Test Case: 667 | Input/Output: [[1.3038401253958227 -100] -98.69615987460418]
Test Case: 668 | Input/Output: [[-28.75944619674482 -46] -74.75944619674482]
Test Case: 669 | Input/Output: [[50.74108251612523 -90] -39.25891748387477]
Test Case: 670 | Input/Output: [[15.58728708234824 54] 69.58728708234824]
Test Case: 671 | Input/Output: [[-49.5627227420544 -83] -132.5627227420544]
Test Case: 672 | Input/Output: [[57.597364016776964 99] 156.59736401677696]
Test Case: 673 | Input/Output: [[-31.330224591572005 -29] -60.330224591572005]
Test Case: 674 | Input/Output: [[47.84324141622628 49] 96.84324141622628]
Test Case: 675 | Input/Output: [[-1.4923364061675954 -38] -39.492336406167595]
Test Case: 676 | Input/Output: [[-84.98695307542985 -61] -145.98695307542985]
Test Case: 677 | Input/Output: [[-13.22504616009212 -59] -72.22504616009212]
Test Case: 678 | Input/Output: [[32.96517407344069 49] 81.96517407344069]
Test Case: 679 | Input/Output: [[52.202629493898854 -28] 24.202629493898854]
Test Case: 680 | Input/Output: [[87.34952130541927 74] 161.34952130541927]
Test Case: 681 | Input/Output: [[-16.327606304313804 -81] -97.3276063043138]
Test Case: 682 | Input/Output: [[15.877846946761736 80] 95.87784694676174]
Test Case: 683 | Input/Output: [[-44.01838563364946 22] -22.01838563364946]
Test Case: 684 | Input/Output: [[-38.9138248609117 4] -34.9138248609117]
Test Case: 685 | Input/Output: [[-97.0007608737248 -11] -108.0007608737248]
Test Case: 686 | Input/Output: [[-96.65433476607204 78] -18.65433476607204]
Test Case: 687 | Input/Output: [[-52.95155457000138 39] -13.951554570001377]
Test Case: 688 | Input/Output: [[-94.62909013018054 34] -60.62909013018054]
Test Case: 689 | Input/Output: [[-37.17010901299342 54] 16.82989098700658]
Test Case: 690 | Input/Output: [[-12.79704932419807 -91] -103.79704932419807]
Test Case: 691 | Input/Output: [[-88.71308467970364 -60] -148.71308467970363]
Test Case: 692 | Input/Output: [[33.26941607633563 22] 55.26941607633563]
Test Case: 693 | Input/Output: [[-24.719564129164056 -17] -41.719564129164056]
Test Case: 694 | Input/Output: [[-61.94143883699701 -53] -114.94143883699701]
Test Case: 695 | Input/Output: [[96.60080779647663 -22] 74.60080779647663]
Test Case: 696 | Input/Output: [[-94.23322149344868 -3] -97.23322149344868]
Test Case: 697 | Input/Output: [[10.427725228764587 90] 100.42772522876459]
Test Case: 698 | Input/Output: [[5.363949793550745 49] 54.363949793550745]
Test Case: 699 | Input/Output: [[65.27317035225812 -35] 30.27317035225812]
Test Case: 700 | Input/Output: [[13.068534754267503 -46] -32.9314652457325]
Test Case: 701 | Input/Output: [[27.88180908534426 -71] -43.11819091465574]
Test Case: 702 | Input/Output: [[-62.85533232024514 -32] -94.85533232024514]
Test Case: 703 | Input/Output: [[-94.64719815234739 -30] -124.64719815234739]
Test Case: 704 | Input/Output: [[-36.42306469148866 9] -27.423064691488662]
Test Case: 705 | Input/Output: [[-11.844120616415069 -56] -67.84412061641507]
Test Case: 706 | Input/Output: [[56.33685211856846 71] 127.33685211856846]
Test Case: 707 | Input/Output: [[-89.02827494869064 68] -21.028274948690637]
Test Case: 708 | Input/Output: [[-80.31803324454623 9] -71.31803324454623]
Test Case: 709 | Input/Output: [[-2.5439123327715407 31] 28.45608766722846]
Test Case: 710 | Input/Output: [[96.00820728291905 88] 184.00820728291905]
Test Case: 711 | Input/Output: [[36.42898758211311 76] 112.42898758211311]
Test Case: 712 | Input/Output: [[-3.548940679837685 73] 69.45105932016232]
Test Case: 713 | Input/Output: [[-50.52080691329826 -93] -143.52080691329826]
Test Case: 714 | Input/Output: [[47.58449687806373 -100] -52.41550312193627]
Test Case: 715 | Input/Output: [[11.663304219881738 51] 62.66330421988174]
Test Case: 716 | Input/Output: [[51.21089369541912 -8] 43.21089369541912]
Test Case: 717 | Input/Output: [[97.15026231382481 91] 188.1502623138248]
Test Case: 718 | Input/Output: [[50.67055983541127 -35] 15.670559835411268]
Test Case: 719 | Input/Output: [[79.7813717606891 -56] 23.781371760689098]
Test Case: 720 | Input/Output: [[31.362106445307887 71] 102.36210644530789]
Test Case: 721 | Input/Output: [[-71.47515449558699 -9] -80.47515449558699]
Test Case: 722 | Input/Output: [[-66.36635556127351 -88] -154.3663555612735]
Test Case: 723 | Input/Output: [[37.68419435836975 49] 86.68419435836975]
Test Case: 724 | Input/Output: [[21.41810897691117 48] 69.41810897691117]
Test Case: 725 | Input/Output: [[-81.57997722343573 60] -21.579977223435733]
Test Case: 726 | Input/Output: [[92.64960811899832 -93] -0.35039188100168417]
Test Case: 727 | Input/Output: [[41.26381457493139 82] 123.26381457493139]
Test Case: 728 | Input/Output: [[48.29685992389378 88] 136.29685992389378]
Test Case: 729 | Input/Output: [[45.029175864003406 46] 91.0291758640034]
Test Case: 730 | Input/Output: [[-34.319551016755995 -13] -47.319551016755995]
Test Case: 731 | Input/Output: [[-37.73328174039277 -56] -93.73328174039277]
Test Case: 732 | Input/Output: [[-99.1874243428609 -4] -103.1874243428609]
Test Case: 733 | Input/Output: [[-68.01858375990139 79] 10.98141624009861]
Test Case: 734 | Input/Output: [[70.53052247842541 -11] 59.53052247842541]
Test Case: 735 | Input/Output: [[12.577537062584668 -47] -34.42246293741533]
Test Case: 736 | Input/Output: [[77.50332879322445 -36] 41.503328793224455]
Test Case: 737 | Input/Output: [[-57.4802798164493 -9] -66.4802798164493]
Test Case: 738 | Input/Output: [[-78.91211475664717 18] -60.91211475664717]
Test Case: 739 | Input/Output: [[49.2138962383614 -86] -36.7861037616386]
Test Case: 740 | Input/Output: [[57.23540560071291 50] 107.23540560071291]
Test Case: 741 | Input/Output: [[67.73986668105007 66] 133.73986668105007]
Test Case: 742 | Input/Output: [[-2.499911549885809 72] 69.50008845011419]
Test Case: 743 | Input/Output: [[-60.27204574615239 11] -49.27204574615239]
Test Case: 744 | Input/Output: [[-31.767488054319415 28] -3.767488054319415]
Test Case: 745 | Input/Output: [[18.694118772483506 -97] -78.3058812275165]
Test Case: 746 | Input/Output: [[34.04480632486502 -68] -33.95519367513498]
Test Case: 747 | Input/Output: [[5.859706220252804 -76] -70.1402937797472]
Test Case: 748 | Input/Output: [[-90.06798985807143 79] -11.067989858071428]
Test Case: 749 | Input/Output: [[-26.415288816181587 -29] -55.41528881618159]
Test Case: 750 | Input/Output: [[11.848061649228981 -98] -86.15193835077102]
Test Case: 751 | Input/Output: [[-7.448944424888708 48] 40.55105557511129]
Test Case: 752 | Input/Output: [[25.79367470851433 63] 88.79367470851433]
Test Case: 753 | Input/Output: [[49.26416867223557 19] 68.26416867223557]
Test Case: 754 | Input/Output: [[-77.19872498590007 39] -38.19872498590007]
Test Case: 755 | Input/Output: [[92.37346050593814 19] 111.37346050593814]
Test Case: 756 | Input/Output: [[-11.746235674621786 74] 62.253764325378214]
Test Case: 757 | Input/Output: [[-13.037004239876097 38] 24.962995760123903]
Test Case: 758 | Input/Output: [[-51.14548144246693 79] 27.85451855753307]
Test Case: 759 | Input/Output: [[-48.26344044324864 97] 48.73655955675136]
Test Case: 760 | Input/Output: [[-46.46213348334245 -38] -84.46213348334246]
Test Case: 761 | Input/Output: [[-37.716016697529355 92] 54.283983302470645]
Test Case: 762 | Input/Output: [[20.506966474727605 -86] -65.4930335252724]
Test Case: 763 | Input/Output: [[75.84742172084873 84] 159.84742172084873]
Test Case: 764 | Input/Output: [[-49.875848446620275 6] -43.875848446620275]
Test Case: 765 | Input/Output: [[-26.721489366712433 -44] -70.72148936671243]
Test Case: 766 | Input/Output: [[24.311070257529522 37] 61.31107025752952]
Test Case: 767 | Input/Output: [[58.397712226093944 73] 131.39771222609394]
Test Case: 768 | Input/Output: [[-74.90270689732074 83] 8.09729310267926]
Test Case: 769 | Input/Output: [[43.270223075806626 -94] -50.729776924193374]
Test Case: 770 | Input/Output: [[-98.26951051476203 -59] -157.26951051476203]
Test Case: 771 | Input/Output: [[36.0266212206931 -62] -25.9733787793069]
Test Case: 772 | Input/Output: [[44.8494675114934 -7] 37.8494675114934]
Test Case: 773 | Input/Output: [[38.3218000216431 -6] 32.3218000216431]
Test Case: 774 | Input/Output: [[-54.681802343115194 3] -51.681802343115194]
Test Case: 775 | Input/Output: [[-24.903553395162348 88] 63.09644660483765]
Test Case: 776 | Input/Output: [[8.213318640594863 -38] -29.786681359405137]
Test Case: 777 | Input/Output: [[58.15047661465164 70] 128.15047661465164]
Test Case: 778 | Input/Output: [[87.3613574906187 -50] 37.3613574906187]
Test Case: 779 | Input/Output: [[-45.08273548620825 -5] -50.08273548620825]
Test Case: 780 | Input/Output: [[-85.22594785895626 66] -19.22594785895626]
Test Case: 781 | Input/Output: [[73.18645375633409 44] 117.18645375633409]
Test Case: 782 | Input/Output: [[-15.760212922972343 74] 58.23978707702766]
Test Case: 783 | Input/Output: [[67.76470956134253 -37] 30.764709561342528]
Test Case: 784 | Input/Output: [[84.50218407965889 22] 106.50218407965889]
Test Case: 785 | Input/Output: [[-87.79709393567356 43] -44.79709393567356]
Test Case: 786 | Input/Output: [[-13.019551042559215 97] 83.98044895744079]
Test Case: 787 | Input/Output: [[21.65697483846371 45] 66.65697483846371]
Test Case: 788 | Input/Output: [[50.40089073713398 -4] 46.40089073713398]
Test Case: 789 | Input/Output: [[-40.47234089761462 94] 53.52765910238538]
Test Case: 790 | Input/Output: [[13.291261696124295 -95] -81.7087383038757]
Test Case: 791 | Input/Output: [[47.15580167601786 87] 134.15580167601786]
Test Case: 792 | Input/Output: [[-58.86989505701039 44] -14.869895057010389]
Test Case: 793 | Input/Output: [[10.479028045855102 95] 105.4790280458551]
Test Case: 794 | Input/Output: [[-47.451877789076356 55] 7.548122210923644]
Test Case: 795 | Input/Output: [[-84.41160727107793 -74] -158.4116072710779]
Test Case: 796 | Input/Output: [[-71.2953316401951 99] 27.7046683598049]
Test Case: 797 | Input/Output: [[-28.970436520582993 -68] -96.970436520583]
Test Case: 798 | Input/Output: [[76.98545366291839 47] 123.98545366291839]
Test Case: 799 | Input/Output: [[-24.1364215059307 93] 68.8635784940693]
Test Case: 800 | Input/Output: [[-46.67073942572804 -23] -69.67073942572804]
Test Case: 801 | Input/Output: [[-77.79153198606643 74] -3.791531986066431]
Test Case: 802 | Input/Output: [[-33.94833756090405 -43] -76.94833756090405]
Test Case: 803 | Input/Output: [[-36.9479733157418 -36] -72.94797331574179]
Test Case: 804 | Input/Output: [[63.09978770973828 21] 84.09978770973828]
Test Case: 805 | Input/Output: [[-10.175985603371387 -4] -14.175985603371387]
Test Case: 806 | Input/Output: [[87.59810032133763 -37] 50.598100321337625]
Test Case: 807 | Input/Output: [[-75.79268045075985 -81] -156.79268045075986]
Test Case: 808 | Input/Output: [[-88.53307061934885 11] -77.53307061934885]
Test Case: 809 | Input/Output: [[-72.95635589265504 39] -33.95635589265504]
Test Case: 810 | Input/Output: [[-98.09005321724014 -47] -145.09005321724015]
Test Case: 811 | Input/Output: [[24.188238373038047 -31] -6.811761626961953]
Test Case: 812 | Input/Output: [[-46.26884154067803 -97] -143.26884154067804]
Test Case: 813 | Input/Output: [[91.98328452484932 -31] 60.983284524849324]
Test Case: 814 | Input/Output: [[8.068165447397575 35] 43.068165447397575]
Test Case: 815 | Input/Output: [[5.374971913528114 92] 97.37497191352811]
Test Case: 816 | Input/Output: [[-2.943268690289429 -65] -67.94326869028943]
Test Case: 817 | Input/Output: [[24.562493637722426 63] 87.56249363772243]
Test Case: 818 | Input/Output: [[2.9683816046337483 -61] -58.03161839536625]
Test Case: 819 | Input/Output: [[-42.59112092087456 88] 45.40887907912544]
Test Case: 820 | Input/Output: [[80.3751834825411 -68] 12.375183482541104]
Test Case: 821 | Input/Output: [[-91.28239518041146 -59] -150.28239518041147]
Test Case: 822 | Input/Output: [[2.823238829768755 80] 82.82323882976875]
Test Case: 823 | Input/Output: [[-18.05005897212577 -96] -114.05005897212577]
Test Case: 824 | Input/Output: [[70.76177921797773 11] 81.76177921797773]
Test Case: 825 | Input/Output: [[-22.27218249358016 -39] -61.27218249358016]
Test Case: 826 | Input/Output: [[90.03882265673968 -18] 72.03882265673968]
Test Case: 827 | Input/Output: [[65.12890424453431 -15] 50.12890424453431]
Test Case: 828 | Input/Output: [[1.505937941127499 71] 72.5059379411275]
Test Case: 829 | Input/Output: [[77.19864541645157 -75] 2.198645416451569]
Test Case: 830 | Input/Output: [[48.69206428248444 100] 148.69206428248444]
Test Case: 831 | Input/Output: [[-37.43555390283244 -37] -74.43555390283244]
Test Case: 832 | Input/Output: [[24.8602090375462 95] 119.8602090375462]
Test Case: 833 | Input/Output: [[-24.06351686338084 14] -10.06351686338084]
Test Case: 834 | Input/Output: [[-47.603668466290515 20] -27.603668466290515]
Test Case: 835 | Input/Output: [[-83.74882555844671 -22] -105.74882555844671]
Test Case: 836 | Input/Output: [[22.398102124443085 67] 89.39810212444308]
Test Case: 837 | Input/Output: [[66.87322107995689 -65] 1.8732210799568918]
Test Case: 838 | Input/Output: [[-27.572203941551095 75] 47.427796058448905]
Test Case: 839 | Input/Output: [[-66.74737625384068 -77] -143.74737625384068]
Test Case: 840 | Input/Output: [[-73.59681256176901 -54] -127.59681256176901]
Test Case: 841 | Input/Output: [[-73.8074885224374 67] -6.807488522437396]
Test Case: 842 | Input/Output: [[48.58579993207468 -3] 45.58579993207468]
Test Case: 843 | Input/Output: [[-64.03864436194047 -29] -93.03864436194047]
Test Case: 844 | Input/Output: [[29.531188204824872 27] 56.53118820482487]
Test Case: 845 | Input/Output: [[22.24511440312014 71] 93.24511440312014]
Test Case: 846 | Input/Output: [[73.05148614598178 -47] 26.051486145981784]
Test Case: 847 | Input/Output: [[-48.05679192128165 -65] -113.05679192128164]
Test Case: 848 | Input/Output: [[2.7011806728647088 83] 85.70118067286471]
Test Case: 849 | Input/Output: [[-92.28320923111414 96] 3.7167907688858577]
Test Case: 850 | Input/Output: [[-53.007272424421735 21] -32.007272424421735]
Test Case: 851 | Input/Output: [[-37.47941028397727 -41] -78.47941028397727]
Test Case: 852 | Input/Output: [[72.29812738842142 70] 142.29812738842142]
Test Case: 853 | Input/Output: [[66.45598236937923 17] 83.45598236937923]
Test Case: 854 | Input/Output: [[-82.26723454959763 99] 16.73276545040237]
Test Case: 855 | Input/Output: [[10.97940922675727 -79] -68.02059077324273]
Test Case: 856 | Input/Output: [[26.012748818530397 57] 83.0127488185304]
Test Case: 857 | Input/Output: [[-87.71976422335814 -13] -100.71976422335814]
Test Case: 858 | Input/Output: [[32.771687810884714 34] 66.77168781088471]
Test Case: 859 | Input/Output: [[66.87862328500046 -98] -31.121376714999542]
Test Case: 860 | Input/Output: [[-39.124967654797075 86] 46.875032345202925]
Test Case: 861 | Input/Output: [[-5.52087810208333 4] -1.52087810208333]
Test Case: 862 | Input/Output: [[-7.078903942548706 -85] -92.0789039425487]
Test Case: 863 | Input/Output: [[31.688851538823627 -21] 10.688851538823627]
Test Case: 864 | Input/Output: [[2.9340820953969455 14] 16.934082095396946]
Test Case: 865 | Input/Output: [[-5.653899934465386 23] 17.346100065534614]
Test Case: 866 | Input/Output: [[-13.2361874932065 27] 13.7638125067935]
Test Case: 867 | Input/Output: [[10.367809243574968 -28] -17.632190756425032]
Test Case: 868 | Input/Output: [[22.368435780691456 87] 109.36843578069146]
Test Case: 869 | Input/Output: [[13.46785162350244 -74] -60.53214837649756]
Test Case: 870 | Input/Output: [[29.805070382403557 -25] 4.8050703824035566]
Test Case: 871 | Input/Output: [[18.346991276584063 26] 44.34699127658406]
Test Case: 872 | Input/Output: [[71.17752781435317 -52] 19.17752781435317]
Test Case: 873 | Input/Output: [[4.853733721352555 29] 33.853733721352555]
Test Case: 874 | Input/Output: [[48.180493737495055 45] 93.18049373749506]
Test Case: 875 | Input/Output: [[-2.3420709294017286 96] 93.65792907059827]
Test Case: 876 | Input/Output: [[73.47151370520336 -96] -22.528486294796636]
Test Case: 877 | Input/Output: [[31.98056932845853 56] 87.98056932845853]
Test Case: 878 | Input/Output: [[-88.64245697463298 -13] -101.64245697463298]
Test Case: 879 | Input/Output: [[-9.99367942647504 44] 34.00632057352496]
Test Case: 880 | Input/Output: [[-26.171801163113244 -81] -107.17180116311324]
Test Case: 881 | Input/Output: [[-87.7600028042189 -4] -91.7600028042189]
Test Case: 882 | Input/Output: [[-78.87593613644427 -16] -94.87593613644427]
Test Case: 883 | Input/Output: [[-30.659852027544602 69] 38.3401479724554]
Test Case: 884 | Input/Output: [[-28.167555405466942 12] -16.167555405466942]
Test Case: 885 | Input/Output: [[33.42233500436299 57] 90.42233500436299]
Test Case: 886 | Input/Output: [[50.880247563417214 80] 130.8802475634172]
Test Case: 887 | Input/Output: [[31.57385458384647 87] 118.57385458384647]
Test Case: 888 | Input/Output: [[70.97520032860268 77] 147.97520032860268]
Test Case: 889 | Input/Output: [[-50.84419631093815 72] 21.155803689061848]
Test Case: 890 | Input/Output: [[-39.070695673392095 -11] -50.070695673392095]
Test Case: 891 | Input/Output: [[-36.500686296834736 -85] -121.50068629683474]
Test Case: 892 | Input/Output: [[-86.41331898657849 66] -20.41331898657849]
Test Case: 893 | Input/Output: [[55.48915872855423 29] 84.48915872855423]
Test Case: 894 | Input/Output: [[-45.302427331395556 -100] -145.30242733139556]
Test Case: 895 | Input/Output: [[55.25831317240065 -99] -43.74168682759935]
Test Case: 896 | Input/Output: [[-8.466755834347126 19] 10.533244165652874]
Test Case: 897 | Input/Output: [[93.7947078712275 -21] 72.7947078712275]
Test Case: 898 | Input/Output: [[95.32885205666796 -67] 28.328852056667955]
Test Case: 899 | Input/Output: [[73.09072807916903 80] 153.09072807916903]
Test Case: 900 | Input/Output: [[-6.449181465721892 100] 93.55081853427811]
Test Case: 901 | Input/Output: [[-73.68187376304354 -44] -117.68187376304354]
Test Case: 902 | Input/Output: [[9.341808938503178 -7] 2.3418089385031777]
Test Case: 903 | Input/Output: [[85.47099951459069 84] 169.4709995145907]
Test Case: 904 | Input/Output: [[36.04208841846017 31] 67.04208841846017]
Test Case: 905 | Input/Output: [[-81.1522159966281 -52] -133.15221599662812]
Test Case: 906 | Input/Output: [[29.23315974044732 -12] 17.23315974044732]
Test Case: 907 | Input/Output: [[42.89329533742563 -70] -27.106704662574373]
Test Case: 908 | Input/Output: [[30.173493508617298 53] 83.1734935086173]
Test Case: 909 | Input/Output: [[39.28461736027728 28] 67.28461736027728]
Test Case: 910 | Input/Output: [[12.818235331438558 -67] -54.18176466856144]
Test Case: 911 | Input/Output: [[-45.825589682138855 40] -5.825589682138855]
Test Case: 912 | Input/Output: [[24.600332493913783 94] 118.60033249391378]
Test Case: 913 | Input/Output: [[-69.01270073611289 45] -24.01270073611289]
Test Case: 914 | Input/Output: [[24.518512927983153 -25] -0.48148707201684715]
Test Case: 915 | Input/Output: [[56.19848471718106 71] 127.19848471718106]
Test Case: 916 | Input/Output: [[-58.534439646509774 -92] -150.53443964650978]
Test Case: 917 | Input/Output: [[-81.46885495647885 -37] -118.46885495647885]
Test Case: 918 | Input/Output: [[23.65417235626495 -47] -23.34582764373505]
Test Case: 919 | Input/Output: [[-55.28937613799316 -67] -122.28937613799316]
Test Case: 920 | Input/Output: [[-6.845889042151086 -59] -65.84588904215109]
Test Case: 921 | Input/Output: [[99.11216424443339 54] 153.1121642444334]
Test Case: 922 | Input/Output: [[-37.61399696118688 -15] -52.61399696118688]
Test Case: 923 | Input/Output: [[-98.16110423861669 -65] -163.1611042386167]
Test Case: 924 | Input/Output: [[-67.52113667527952 -96] -163.52113667527954]
Test Case: 925 | Input/Output: [[1.0358556451828065 91] 92.0358556451828]
Test Case: 926 | Input/Output: [[82.45193007810184 60] 142.45193007810184]
Test Case: 927 | Input/Output: [[84.83330481392181 -3] 81.83330481392181]
Test Case: 928 | Input/Output: [[-6.691589501542012 55] 48.30841049845799]
Test Case: 929 | Input/Output: [[-93.89338359525492 -4] -97.89338359525492]
Test Case: 930 | Input/Output: [[-52.10978946350713 -85] -137.10978946350713]
Test Case: 931 | Input/Output: [[-74.92770715878716 62] -12.927707158787157]
Test Case: 932 | Input/Output: [[99.93358075304477 -34] 65.93358075304477]
Test Case: 933 | Input/Output: [[28.596353912826345 -24] 4.596353912826345]
Test Case: 934 | Input/Output: [[61.9648851346501 -50] 11.964885134650103]
Test Case: 935 | Input/Output: [[71.17159666152699 -3] 68.17159666152699]
Test Case: 936 | Input/Output: [[-42.37512148567728 40] -2.3751214856772833]
Test Case: 937 | Input/Output: [[-14.244639457246791 7] -7.244639457246791]
Test Case: 938 | Input/Output: [[-41.20421053133177 -40] -81.20421053133177]
Test Case: 939 | Input/Output: [[-29.443020627028176 -59] -88.44302062702818]
Test Case: 940 | Input/Output: [[37.159949095939794 92] 129.1599490959398]
Test Case: 941 | Input/Output: [[86.58313487048724 -14] 72.58313487048724]
Test Case: 942 | Input/Output: [[55.18295060106843 -39] 16.182950601068427]
Test Case: 943 | Input/Output: [[-24.484421677006267 -36] -60.48442167700627]
Test Case: 944 | Input/Output: [[-82.75122544843789 75] -7.751225448437893]
Test Case: 945 | Input/Output: [[62.30704777654631 -5] 57.30704777654631]
Test Case: 946 | Input/Output: [[-6.1606935977186055 59] 52.839306402281395]
Test Case: 947 | Input/Output: [[-10.053448060980628 -29] -39.05344806098063]
Test Case: 948 | Input/Output: [[-92.62673050818238 99] 6.373269491817624]
Test Case: 949 | Input/Output: [[89.40113833889046 61] 150.40113833889046]
Test Case: 950 | Input/Output: [[75.13143850041422 -9] 66.13143850041422]
Test Case: 951 | Input/Output: [[-71.07978593255754 -23] -94.07978593255754]
Test Case: 952 | Input/Output: [[-53.63448800781359 90] 36.36551199218641]
Test Case: 953 | Input/Output: [[-1.9607796409136853 32] 30.039220359086315]
Test Case: 954 | Input/Output: [[-22.039700040902076 -66] -88.03970004090208]
Test Case: 955 | Input/Output: [[-84.03718436722478 -1] -85.03718436722478]
Test Case: 956 | Input/Output: [[64.345136210574 62] 126.345136210574]
Test Case: 957 | Input/Output: [[77.17982331215211 80] 157.1798233121521]
Test Case: 958 | Input/Output: [[-60.783088863787846 67] 6.216911136212154]
Test Case: 959 | Input/Output: [[13.770276643446948 -8] 5.770276643446948]
Test Case: 960 | Input/Output: [[-91.46230033283338 -63] -154.46230033283337]
Test Case: 961 | Input/Output: [[2.9486665266893084 -17] -14.051333473310692]
Test Case: 962 | Input/Output: [[19.824550874028972 -99] -79.17544912597103]
Test Case: 963 | Input/Output: [[-11.466662758933182 9] -2.4666627589331824]
Test Case: 964 | Input/Output: [[15.59737456653751 -43] -27.40262543346249]
Test Case: 965 | Input/Output: [[18.621949403369854 -17] 1.6219494033698538]
Test Case: 966 | Input/Output: [[-39.97973621601376 -80] -119.97973621601376]
Test Case: 967 | Input/Output: [[-88.82269882773615 -59] -147.82269882773613]
Test Case: 968 | Input/Output: [[11.0365264031214 36] 47.0365264031214]
Test Case: 969 | Input/Output: [[-50.61489769508229 11] -39.61489769508229]
Test Case: 970 | Input/Output: [[-72.8202923971577 -11] -83.8202923971577]
Test Case: 971 | Input/Output: [[8.61504063391574 6] 14.61504063391574]
Test Case: 972 | Input/Output: [[-56.53448518069557 82] 25.46551481930443]
Test Case: 973 | Input/Output: [[44.07442317445225 -70] -25.92557682554775]
Test Case: 974 | Input/Output: [[1.9061021021552307 30] 31.90610210215523]
Test Case: 975 | Input/Output: [[46.412673008472694 50] 96.4126730084727]
Test Case: 976 | Input/Output: [[27.676560096342357 -49] -21.323439903657643]
Test Case: 977 | Input/Output: [[-47.58596419767396 -46] -93.58596419767396]
Test Case: 978 | Input/Output: [[-47.73905496129387 45] -2.739054961293867]
Test Case: 979 | Input/Output: [[35.932854310461664 -16] 19.932854310461664]
Test Case: 980 | Input/Output: [[16.76102541202414 61] 77.76102541202414]
Test Case: 981 | Input/Output: [[-49.15742991728425 -82] -131.15742991728425]
Test Case: 982 | Input/Output: [[53.058968671089104 0] 53.058968671089104]
Test Case: 983 | Input/Output: [[-73.62038295687125 53] -20.620382956871254]
Test Case: 984 | Input/Output: [[-97.43467975911864 -58] -155.43467975911864]
Test Case: 985 | Input/Output: [[44.8983713058515 9] 53.8983713058515]
Test Case: 986 | Input/Output: [[-57.8326262847068 88] 30.167373715293202]
Test Case: 987 | Input/Output: [[-4.204364116849007 59] 54.79563588315099]
Test Case: 988 | Input/Output: [[68.10999719882372 70] 138.10999719882372]
Test Case: 989 | Input/Output: [[-57.92058737755106 -40] -97.92058737755106]
Test Case: 990 | Input/Output: [[84.47257563779854 -1] 83.47257563779854]
Test Case: 991 | Input/Output: [[-4.5483296469124355 60] 55.451670353087565]
Test Case: 992 | Input/Output: [[-27.41262240980673 -22] -49.41262240980673]
Test Case: 993 | Input/Output: [[-84.32046001018769 -24] -108.32046001018769]
Test Case: 994 | Input/Output: [[24.518224731809866 32] 56.518224731809866]
Test Case: 995 | Input/Output: [[-45.370446053523494 -98] -143.3704460535235]
Test Case: 996 | Input/Output: [[66.54428375112536 92] 158.54428375112536]
Test Case: 997 | Input/Output: [[-76.85324433457805 -53] -129.85324433457805]
Test Case: 998 | Input/Output: [[22.618096496719346 -100] -77.38190350328065]
Test Case: 999 | Input/Output: [[-45.58349777486082 97] 51.41650222513918]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove vector_boolean_pushall zip_insert_left_fromcode exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup vector_integer_butlast vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse exec_k vector_integer_yank float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times genome_dup return_code_pop char_swap integer_max return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank zip_shove vector_integer_flush vector_integer_subvec vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean integer_min exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add code_stackdepth exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse integer_swap string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.11.1-1-SNAPSHOTHash of last Git commit = 8a64f874173fae27ed1a77827849de0fade43c2b
GitHub link = https://github.com/lspector/Clojush/commit/8a64f874173fae27ed1a77827849de0fade43c2b
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.number_io$fn__6694 0x2beee3e8 clojush.problems.software.number_io$fn__6694@2beee3e8] #object[clojush.problems.software.number_io$fn__6696 0x58bad46f clojush.problems.software.number_io$fn__6696@58bad46f] #object[clojush.instructions.tag$tag_instruction_erc$fn__1963 0x20231384 clojush.instructions.tag$tag_instruction_erc$fn__1963@20231384] #object[clojush.instructions.tag$tagged_instruction_erc$fn__1969 0x35becbd4 clojush.instructions.tag$tagged_instruction_erc$fn__1969@35becbd4] in1 in2 print_newline integer_sub integer_inc integer_yankdup integer_mult float_sin float_frominteger float_mod integer_div integer_fromfloat integer_mod integer_rot float_yankdup integer_add integer_shove integer_max integer_stackdepth float_max float_dup_items float_stackdepth integer_dup_times integer_yank integer_min integer_dup_items print_integer print_float integer_flush float_shove float_pop float_sub float_min float_mult float_dec float_add float_dup float_swap integer_swap integer_dup float_tan integer_pop float_dup_times float_inc integer_dec float_rot float_flush float_cos float_div float_yank)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = []
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-function = #object[clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704 0x342723a3 clojush.problems.software.number_io$make_number_io_error_function_from_cases$the_actual_num_io_error_function__6704@342723a3]
error-threshold = 1.0E-4
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.3, :uniform-mutation 0.2, [:alternation :uniform-mutation] 0.5}
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 5000
max-generations = 200
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :tournament
pop-when-tagging = true
population-size = 1000
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.number_io$number_io_initial_report 0x4ec427 clojush.problems.software.number_io$number_io_initial_report@4ec427]
problem-specific-report = #object[clojush.problems.software.number_io$num_io_report 0xfde487b clojush.problems.software.number_io$num_io_report@fde487b]
random-screen = false
random-seed = -55 80 54 -29 -15 -125 -10 -30 -13 48 -118 56 -12 71 -10 -124
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Number IO problem report - generation 0
Test total error for best: 62126.84609999996
Test mean error for best: 31.06342
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -62


        
Correct output: -46.5388439821 | Program output: -72


        
Correct output: 183.1076678776 | Program output: 97


         
Correct output: 59.5983956317  | Program output: -29


        
Correct output: -40.9433158552 | Program output: -37


        
Correct output: 0.6792530208   | Program output: 53


         
Correct output: 2.8409776764   | Program output: -67


        
Correct output: 87.1156693118  | Program output: 102


        
Correct output: 12.7367383479  | Program output: -33


        
Correct output: 34.9123643533  | Program output: 25


         
Correct output: 98.2612616006  | Program output: 99


         
Correct output: 86.5736990631  | Program output: 74


         
Correct output: -79.8463167321 | Program output: -61


        
Correct output: 2.4746909642   | Program output: -10


        
Correct output: 132.3276241331 | Program output: 78


         
Correct output: -171.6614203645 | Program output: -93


        
Correct output: -58.3463633692 | Program output: -20


        
Correct output: 80.6043645122  | Program output: 40


         
Correct output: -10.3066391796 | Program output: -47


        
Correct output: 130.1971143918 | Program output: 69


         
Correct output: 150.3637736344 | Program output: 90


         
Correct output: -111.4726490012 | Program output: -92


        
Correct output: -20.2189788792 | Program output: -49


        
Correct output: -40.8852589809 | Program output: 41


         
Correct output: 32.7611922962  | Program output: 81


         
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_inc} {:instruction tagged_824} {:instruction float_inc} {:instruction float_sin} {:instruction integer_add} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction integer_div} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_rot} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec} {:instruction integer_mod} {:instruction print_newline} {:instruction tag_float_538} {:instruction float_dup_times} {:instruction integer_add} {:instruction integer_max} {:instruction float_add} {:instruction in2} {:instruction float_frominteger} {:instruction float_div} {:instruction float_dup_items} {:instruction integer_stackdepth} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sub} {:instruction integer_min} {:instruction float_dup_times} {:instruction tagged_589} {:instruction integer_shove} {:instruction integer_dup} {:instruction float_tan} {:instruction float_cos} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction float_mult} {:instruction float_shove} {:instruction 85.90639333219517} {:instruction float_pop} {:instruction float_stackdepth} {:instruction integer_inc} {:instruction float_div} {:instruction 80} {:instruction integer_rot} {:instruction integer_dup_times} {:instruction float_flush} {:instruction integer_pop} {:instruction float_stackdepth} {:instruction integer_yankdup} {:instruction integer_div} {:instruction print_newline} {:instruction float_yank} {:instruction tagged_986} {:instruction integer_pop} {:instruction float_dec} {:instruction print_newline} {:instruction integer_stackdepth} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction 10} {:instruction 24} {:instruction integer_mult} {:instruction integer_rot} {:instruction integer_dup} {:instruction integer_div} {:instruction integer_add} {:instruction float_dec} {:instruction integer_fromfloat} {:instruction float_stackdepth} {:instruction integer_flush})
Best program: (integer_min integer_inc tagged_824 float_inc float_sin integer_add float_min integer_stackdepth integer_dup integer_div tag_integer_484 integer_flush tag_float_527 float_rot in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec integer_mod print_newline tag_float_538 float_dup_times integer_add integer_max float_add in2 float_frominteger float_div float_dup_items integer_stackdepth integer_min integer_mod float_sub integer_min float_dup_times tagged_589 integer_shove integer_dup float_tan float_cos float_tan integer_fromfloat float_mult float_shove 85.90639333219517 float_pop float_stackdepth integer_inc float_div 80 integer_rot integer_dup_times float_flush integer_pop float_stackdepth integer_yankdup integer_div print_newline float_yank tagged_986 integer_pop float_dec print_newline integer_stackdepth integer_rot float_sub float_pop 10 24 integer_mult integer_rot integer_dup integer_div integer_add float_dec integer_fromfloat float_stackdepth integer_flush)
Errors: [9.1443 12 25.4612 13 86.1077 13 88.5984 12 3.9433 12 52.3207 10 69.841 11 14.8843 12 45.7367 11 9.9124 12 0.7387 12 12.5737 12 18.8463 11 12.4747 11 54.3276 13 78.6614 13 38.3464 13 40.6044 12 36.6934 13 61.1971 13 60.3638 13 19.4726 13 28.781 12 81.8853 13 48.2388 12]
Total: 1303.1552000000001
Mean: 26.063105
Genome size: 95
Size: 96
Percent parens: 0.010
--- Population Statistics ---
Average total errors in population: 18299.3774696
Median total errors in population: 25338.0
Error averages by case: (717.2342924999995 13.886 719.7964200999991 13.976 742.0511075000018 13.394 721.411276900001 12.566 709.9777645999998 13.708 704.6106002000006 12.362 715.1180991000007 11.845 717.1461507999999 13.278 711.3733299000006 12.569 701.3544285999997 12.609 715.8212806000014 12.558 714.4140153999988 12.436 723.1865114999977 13.357 705.2731679000011 11.794 729.2906403999995 13.406 748.4537068999981 14.067 719.6031978000007 13.458 712.8294856999993 12.416 713.6048073000005 13.757 728.1720479999985 13.395 734.0388726000018 13.38 732.8613740999978 14.062 712.7935866999997 13.856 710.3135316000003 13.369 709.7737728999999 13.37)
Error minima by case: (0.6618 10 0.4612 9 28.6468 3 0.4016 2 0.0567 2 1.0E-4 6 0.1398 2 1.8843 9 0.2633 2 1.0876 1 0.7387 2 2.4263 1 0.8463 2 0.2265 2 21.3276 3 6.0341 2 3.3464 2 0.6044 2 0.3259 8 18.4374 3 39.3638 2 7.5274 2 1.781 8 0.2239 2 0.2388 7)
Average genome size in population (length): 51.819
Average program size in population (points): 52.819
Average percent parens in population: 0.041
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 1
Genome diversity (% unique Plush genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.322
Error (vector) diversity:			 0.367
Behavioral diversity:				 0.382
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 1300100
--- Timings ---
Current time: 1529614859882 milliseconds
Total Time:           3.7 seconds
Initialization:       0.1 seconds,  3.3%
Reproduction:         0.7 seconds, 18.3%
Fitness Testing:      2.9 seconds, 78.4%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Number IO problem report - generation 1
Test total error for best: 62011.846099999966
Test mean error for best: 31.00592
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -62
          
Correct output: -46.5388439821 | Program output: -72
          
Correct output: 183.1076678776 | Program output: 97
           
Correct output: 59.5983956317  | Program output: -29
          
Correct output: -40.9433158552 | Program output: -37
          
Correct output: 0.6792530208   | Program output: 53
           
Correct output: 2.8409776764   | Program output: -67
          
Correct output: 87.1156693118  | Program output: 102
          
Correct output: 12.7367383479  | Program output: -33
          
Correct output: 34.9123643533  | Program output: 25
           
Correct output: 98.2612616006  | Program output: 99
           
Correct output: 86.5736990631  | Program output: 74
           
Correct output: -79.8463167321 | Program output: -61
          
Correct output: 2.4746909642   | Program output: -10
          
Correct output: 132.3276241331 | Program output: 78
           
Correct output: -171.6614203645 | Program output: -93
          
Correct output: -58.3463633692 | Program output: -20
          
Correct output: 80.6043645122  | Program output: 40
           
Correct output: -10.3066391796 | Program output: -47
          
Correct output: 130.1971143918 | Program output: 69
           
Correct output: 150.3637736344 | Program output: 90
           
Correct output: -111.4726490012 | Program output: -92
          
Correct output: -20.2189788792 | Program output: -49
          
Correct output: -40.8852589809 | Program output: 41
           
Correct output: 32.7611922962  | Program output: 81
           
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_inc} {:instruction tagged_824} {:instruction float_inc} {:instruction float_sin} {:instruction integer_add} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction integer_div} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_rot} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec} {:instruction integer_mod} {:instruction print_newline} {:instruction tag_float_538} {:instruction float_dup_times} {:instruction integer_add})
Best program: (integer_min integer_inc tagged_824 float_inc float_sin integer_add float_min integer_stackdepth integer_dup integer_div tag_integer_484 integer_flush tag_float_527 float_rot in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec integer_mod print_newline tag_float_538 float_dup_times integer_add)
Errors: [9.1443 12 25.4612 12 86.1077 13 88.5984 12 3.9433 12 52.3207 10 69.841 10 14.8843 12 45.7367 11 9.9124 11 0.7387 12 12.5737 12 18.8463 11 12.4747 11 54.3276 13 78.6614 13 38.3464 13 40.6044 12 36.6934 12 61.1971 13 60.3638 13 19.4726 13 28.781 12 81.8853 13 48.2388 12]
Total: 1299.1552000000001
Mean: 25.983105
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 6944.880865999996
Median total errors in population: 2037.4511
Error averages by case: (263.0040418999998 12.754 267.9370353000001 12.989 319.39611949999784 11.302 274.5282831999978 10.44 246.6719850000004 12.335 232.7021466000002 11.707 259.9657160999977 9.924 265.38146949999975 12.468 249.503988700001 10.415 230.2264530000004 10.572 262.9307158000022 10.448 260.880055500001 10.099 274.88102570000115 11.047 235.13137999999913 9.852 288.6536408999988 11.271 329.9682033 11.557 263.00928010000143 11.167 255.2463943000016 10.149 251.7164985 12.484 286.72149599999835 11.387 299.76342789999904 11.223 293.7392110000001 11.569 253.13525779999992 12.793 247.88089779999856 11.237 248.01514260000027 12.702)
Error minima by case: (0.6618 10 0.4612 9 9.8923 3 0.5984 2 0.0567 2 1.0E-4 6 0.1398 2 1.8843 8 0.2633 2 1.0876 1 0.7387 2 2.4263 1 0.1765 2 0.2265 2 21.3276 3 6.0341 2 1.8234 2 0.6044 2 0.3066 8 9.5293 3 31.2383 2 3.5881 2 0.028 8 0.2239 2 0.2388 7)
Average genome size in population (length): 57.719
Average program size in population (points): 58.719
Average percent parens in population: 0.024
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.497
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.793
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.793
Total error diversity:				 0.294
Error (vector) diversity:			 0.321
Behavioral diversity:				 0.339
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 2748900
--- Timings ---
Current time: 1529614864891 milliseconds
Total Time:           9.3 seconds
Initialization:       0.1 seconds,  1.3%
Reproduction:         3.8 seconds, 40.6%
Fitness Testing:      4.5 seconds, 48.2%
Report:               0.9 seconds, 10.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Number IO problem report - generation 2
Test total error for best: 60333.808700000016
Test mean error for best: 30.16690
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -66.081       
Correct output: -46.5388439821 | Program output: -76.081       
Correct output: 183.1076678776 | Program output: 93.081        
Correct output: 59.5983956317  | Program output: -33.081       
Correct output: -40.9433158552 | Program output: -41.081       
Correct output: 0.6792530208   | Program output: 49.081        
Correct output: 2.8409776764   | Program output: -71.081       
Correct output: 87.1156693118  | Program output: 98.081        
Correct output: 12.7367383479  | Program output: -37.081       
Correct output: 34.9123643533  | Program output: 21.081        
Correct output: 98.2612616006  | Program output: 95.081        
Correct output: 86.5736990631  | Program output: 70.081        
Correct output: -79.8463167321 | Program output: -65.081       
Correct output: 2.4746909642   | Program output: -14.081       
Correct output: 132.3276241331 | Program output: 74.081        
Correct output: -171.6614203645 | Program output: -97.081       
Correct output: -58.3463633692 | Program output: -24.081       
Correct output: 80.6043645122  | Program output: 36.081        
Correct output: -10.3066391796 | Program output: -51.081       
Correct output: 130.1971143918 | Program output: 65.081        
Correct output: 150.3637736344 | Program output: 86.081        
Correct output: -111.4726490012 | Program output: -96.081       
Correct output: -20.2189788792 | Program output: -53.081       
Correct output: -40.8852589809 | Program output: 37.081        
Correct output: 32.7611922962  | Program output: 77.081        
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_yank} {:instruction integer_dup_times} {:instruction in2} {:instruction float_frominteger} {:instruction integer_dup} {:instruction tagged_148} {:instruction integer_flush} {:instruction integer_swap} {:instruction float_dup_items} {:instruction float_add} {:instruction integer_stackdepth} {:instruction print_float} {:instruction float_dec} {:instruction float_dup_items} {:instruction 81} {:instruction in1} {:instruction tagged_384} {:instruction tag_integer_454} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction integer_shove} {:instruction float_pop} {:instruction integer_mod} {:instruction float_rot} {:instruction float_mod} {:instruction float_cos} {:instruction 57.01064641691471} {:instruction float_dec} {:instruction integer_dec} {:instruction float_div} {:instruction in2} {:instruction float_sub} {:instruction -20} {:instruction float_yank} {:instruction integer_pop} {:instruction integer_yankdup} {:instruction float_div} {:instruction integer_dup_items} {:instruction float_flush} {:instruction integer_rot} {:instruction integer_sub} {:instruction integer_dup_items} {:instruction float_swap} {:instruction 36.45164482900336} {:instruction float_div} {:instruction float_mult} {:instruction float_mod} {:instruction float_yank} {:instruction float_div} {:instruction float_inc} {:instruction integer_add} {:instruction print_integer} {:instruction in2} {:instruction float_dec} {:instruction float_inc} {:instruction float_mod} {:instruction float_div} {:instruction float_tan} {:instruction in1} {:instruction integer_yank} {:instruction float_sub} {:instruction integer_max} {:instruction tagged_120} {:instruction float_tan} {:instruction float_mult} {:instruction print_integer} {:instruction integer_swap} {:instruction float_dec} {:instruction integer_dup_items} {:instruction integer_yank} {:instruction integer_yank} {:instruction -0.30697331465160005} {:instruction integer_shove})
Best program: (float_yank integer_dup_times in2 float_frominteger integer_dup tagged_148 integer_flush integer_swap float_dup_items float_add integer_stackdepth print_float float_dec float_dup_items 81 in1 tagged_384 tag_integer_454 integer_stackdepth integer_dup integer_shove float_pop integer_mod float_rot float_mod float_cos 57.01064641691471 float_dec integer_dec float_div in2 float_sub -20 float_yank integer_pop integer_yankdup float_div integer_dup_items float_flush integer_rot integer_sub integer_dup_items float_swap 36.45164482900336 float_div float_mult float_mod float_yank float_div float_inc integer_add print_integer in2 float_dec float_inc float_mod float_div float_tan in1 integer_yank float_sub integer_max tagged_120 float_tan float_mult print_integer integer_swap float_dec integer_dup_items integer_yank integer_yank -0.30697331465160005 integer_shove)
Errors: [13.2253 11 29.5422 9 90.0267 10 92.6794 11 0.1377 10 48.4017 10 73.922 11 10.9653 11 49.8177 11 13.8314 12 3.1803 10 16.4927 10 14.7653 11 16.5557 10 58.2466 11 74.5804 11 34.2654 12 44.5234 10 40.7744 10 65.1161 12 64.2828 13 15.3916 11 32.862 11 77.9663 12 44.3198 11]
Total: 1296.8722
Mean: 25.937445
Genome size: 73
Size: 74
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 4972.236954299992
Median total errors in population: 1327.7912000000001
Error averages by case: (175.75074860000174 12.366 187.35050209999963 12.508 225.22584179999717 11.221 217.8945750999979 9.829 160.61239199999946 11.702 181.59849030000038 11.411 211.20783489999707 9.567 172.77885690000167 11.953 189.42170040000028 9.767 156.95417720000052 10.341 166.71877360000065 10.257 169.4368789999996 9.621 178.5241260000015 10.554 164.6720328000004 9.562 198.9681038999986 10.77 226.80932820000203 11.278 181.3259608000003 10.715 180.16880350000037 9.761 187.2987984999989 12.258 200.80472429999892 11.799 205.69386529999946 11.273 187.0101156999999 11.294 182.89178589999923 12.862 200.032499399998 11.646 186.36703809999997 12.404)
Error minima by case: (9.1443 10 10.5388 9 25.1077 3 0.3191 2 0.0567 2 0.0349 8 0.159 2 4.9498 8 0.7367 2 1.5027 1 0.2613 2 5.4917 1 8.1537 2 0.4747 2 25.6724 3 45.6614 2 5.3464 2 0.6044 2 1.9427 8 18.4374 3 7.6362 2 7.5274 2 11.855 8 4.8853 2 3.6538 8)
Average genome size in population (length): 49.161
Average program size in population (points): 50.161
Average percent parens in population: 0.032
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 2.986
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 37
Genome diversity (% unique Plush genomes):	 0.683
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 37
Syntactic diversity (% unique Push programs):	 0.683
Total error diversity:				 0.134
Error (vector) diversity:			 0.142
Behavioral diversity:				 0.15
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 3984250
--- Timings ---
Current time: 1529614868002 milliseconds
Total Time:          12.3 seconds
Initialization:       0.1 seconds,  1.0%
Reproduction:         5.2 seconds, 42.6%
Fitness Testing:      5.7 seconds, 46.3%
Report:               1.2 seconds, 10.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Number IO problem report - generation 3
Test total error for best: 62274.29309999996
Test mean error for best: 31.13715
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -58
          
Correct output: -46.5388439821 | Program output: -68
          
Correct output: 183.1076678776 | Program output: 101
          
Correct output: 59.5983956317  | Program output: -25
          
Correct output: -40.9433158552 | Program output: -33
          
Correct output: 0.6792530208   | Program output: 57
           
Correct output: 2.8409776764   | Program output: -63
          
Correct output: 87.1156693118  | Program output: 106
          
Correct output: 12.7367383479  | Program output: -29
          
Correct output: 34.9123643533  | Program output: 29
           
Correct output: 98.2612616006  | Program output: 103
          
Correct output: 86.5736990631  | Program output: 78
           
Correct output: -79.8463167321 | Program output: -57
          
Correct output: 2.4746909642   | Program output: -6
           
Correct output: 132.3276241331 | Program output: 82
           
Correct output: -171.6614203645 | Program output: -89
          
Correct output: -58.3463633692 | Program output: -16
          
Correct output: 80.6043645122  | Program output: 44
           
Correct output: -10.3066391796 | Program output: -43
          
Correct output: 130.1971143918 | Program output: 73
           
Correct output: 150.3637736344 | Program output: 94
           
Correct output: -111.4726490012 | Program output: -88
          
Correct output: -20.2189788792 | Program output: -45
          
Correct output: -40.8852589809 | Program output: 45
           
Correct output: 32.7611922962  | Program output: 85
           
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_inc} {:instruction tagged_824} {:instruction float_inc} {:instruction float_sin} {:instruction integer_add} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction integer_mult} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_rot} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec} {:instruction integer_mod} {:instruction print_newline})
Best program: (integer_min integer_inc tagged_824 float_inc float_sin integer_add float_min integer_stackdepth integer_dup integer_mult tag_integer_484 integer_flush tag_float_527 float_rot in2 integer_max integer_rot float_sub float_pop float_div float_pop float_div float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec integer_mod print_newline)
Errors: [5.1443 11 21.4612 11 82.1077 12 84.5984 12 7.9433 11 56.3207 11 65.841 11 18.8843 11 41.7367 12 5.9124 12 4.7387 11 8.5737 12 22.8463 12 8.4747 11 50.3276 13 82.6614 14 42.3464 12 36.6044 11 32.6934 12 57.1971 12 56.3638 13 23.4726 14 24.781 13 85.8853 12 52.2388 13]
Total: 1278.1552
Mean: 25.563105
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 4293.216496399993
Median total errors in population: 1325.7912000000001
Error averages by case: (139.83418640000156 11.969 153.79863149999966 12.063 197.9925506999962 12.572 207.53792079999664 11.467 129.50360030000027 11.529 161.0844792000005 10.62 191.1629818999958 10.926 129.99512870000189 11.679 170.31520140000092 11.181 129.83375250000068 11.896 121.91446329999945 11.571 132.92088789999778 11.404 143.6041566000017 11.93 141.5207265000008 10.853 169.6969363999982 12.419 196.38079240000283 12.708 159.57308290000066 12.447 156.91425050000018 11.385 162.7293328999983 12.029 175.5643860999985 13.442 175.23064209999941 13.061 144.95584819999928 12.903 156.0718284999993 12.587 187.16334749999737 13.205 157.97438120000035 12.097)
Error minima by case: (5.1443 10 9.542 9 9.8923 4 21.4016 4 0.0567 8 0.2516 9 0.841 5 6.1157 10 1.0268 5 5.9124 3 0.2613 2 5.5737 3 13.8463 5 0.4747 5 41.6724 4 73.6614 4 21.3496 5 0.3956 4 10.3066 10 34.8029 4 35.6362 4 14.4726 4 0.781 8 3.8885 4 18.9976 10)
Average genome size in population (length): 49.197
Average program size in population (points): 50.197
Average percent parens in population: 0.031
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.452
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 41
Genome diversity (% unique Plush genomes):	 0.609
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 41
Syntactic diversity (% unique Push programs):	 0.609
Total error diversity:				 0.074
Error (vector) diversity:			 0.078
Behavioral diversity:				 0.081
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 5225700
--- Timings ---
Current time: 1529614871156 milliseconds
Total Time:          15.6 seconds
Initialization:       0.1 seconds,  0.8%
Reproduction:         6.9 seconds, 44.5%
Fitness Testing:      6.9 seconds, 43.9%
Report:               1.7 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Number IO problem report - generation 4
Test total error for best: 62217.29309999996
Test mean error for best: 31.10865
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -58           
Correct output: -46.5388439821 | Program output: -68           
Correct output: 183.1076678776 | Program output: 101           
Correct output: 59.5983956317  | Program output: -25           
Correct output: -40.9433158552 | Program output: -33           
Correct output: 0.6792530208   | Program output: 57            
Correct output: 2.8409776764   | Program output: -63           
Correct output: 87.1156693118  | Program output: 106           
Correct output: 12.7367383479  | Program output: -29           
Correct output: 34.9123643533  | Program output: 29            
Correct output: 98.2612616006  | Program output: 103           
Correct output: 86.5736990631  | Program output: 78            
Correct output: -79.8463167321 | Program output: -57           
Correct output: 2.4746909642   | Program output: -6            
Correct output: 132.3276241331 | Program output: 82            
Correct output: -171.6614203645 | Program output: -89           
Correct output: -58.3463633692 | Program output: -16           
Correct output: 80.6043645122  | Program output: 44            
Correct output: -10.3066391796 | Program output: -43           
Correct output: 130.1971143918 | Program output: 73            
Correct output: 150.3637736344 | Program output: 94            
Correct output: -111.4726490012 | Program output: -88           
Correct output: -20.2189788792 | Program output: -45           
Correct output: -40.8852589809 | Program output: 45            
Correct output: 32.7611922962  | Program output: 85            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_inc} {:instruction tagged_824} {:instruction integer_add} {:instruction float_sin} {:instruction integer_add} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction integer_mult} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_rot} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec} {:instruction integer_mod} {:instruction integer_div})
Best program: (integer_min integer_inc tagged_824 integer_add float_sin integer_add float_min integer_stackdepth integer_dup integer_mult tag_integer_484 integer_flush tag_float_527 float_rot in2 integer_max integer_rot float_sub float_pop float_div float_pop float_div float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec integer_mod integer_div)
Errors: [5.1443 11 21.4612 11 82.1077 12 84.5984 12 7.9433 11 56.3207 11 65.841 11 18.8843 11 41.7367 11 5.9124 12 4.7387 11 8.5737 12 22.8463 12 8.4747 11 50.3276 13 82.6614 14 42.3464 12 36.6044 11 32.6934 12 57.1971 12 56.3638 13 23.4726 14 24.781 13 85.8853 12 52.2388 13]
Total: 1277.1552
Mean: 25.543104
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 3321.296772600007
Median total errors in population: 1299.1552000000001
Error averages by case: (93.99726189999996 11.976 108.43821140000101 12.052 165.91620769999673 12.578 163.62622459999923 11.856 87.01381889999962 11.846 128.879224099998 10.274 146.19548839999896 10.559 98.6814931000006 11.951 124.4574924999983 11.223 93.00546520000067 11.479 87.89663270000064 11.554 97.61473469999905 11.737 101.70340130000059 11.47 94.34404550000076 10.905 135.93603340000075 12.773 157.89797280000036 12.767 117.43668499999872 12.808 121.564448199998 11.707 116.81674240000028 12.074 141.75991390000087 12.998 142.0550480000016 13.101 103.82865319999883 12.802 110.1496404000013 12.171 156.10177449999784 12.781 126.45315880000204 12.085)
Error minima by case: (5.1443 11 21.4612 8 82.1077 4 21.4016 3 0.0567 9 0.3207 9 0.159 4 6.1157 10 7.7367 4 5.9124 4 0.2613 3 5.5737 3 11.1537 4 0.4747 4 50.3276 4 48.6614 4 8.3464 4 0.3956 4 10.3066 10 49.1971 4 56.3638 4 10.5274 4 20.219 10 37.0 4 18.2388 10)
Average genome size in population (length): 58.752
Average program size in population (points): 59.752
Average percent parens in population: 0.019
Minimum age in population: 4.0
Maximum age in population: 7.875
Average age in population: 5.909625
Median age in population: 6.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 45
Genome diversity (% unique Plush genomes):	 0.698
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 45
Syntactic diversity (% unique Push programs):	 0.698
Total error diversity:				 0.088
Error (vector) diversity:			 0.093
Behavioral diversity:				 0.102
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 6711575
--- Timings ---
Current time: 1529614874703 milliseconds
Total Time:          19.0 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         8.5 seconds, 44.6%
Fitness Testing:      8.4 seconds, 44.3%
Report:               2.0 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Number IO problem report - generation 5
Test total error for best: 62556.06009999995
Test mean error for best: 31.27803
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -55
          
Correct output: -46.5388439821 | Program output: -65
          
Correct output: 183.1076678776 | Program output: 104
          
Correct output: 59.5983956317  | Program output: -22
          
Correct output: -40.9433158552 | Program output: -30
          
Correct output: 0.6792530208   | Program output: 60
           
Correct output: 2.8409776764   | Program output: -60
          
Correct output: 87.1156693118  | Program output: 109
          
Correct output: 12.7367383479  | Program output: -26
          
Correct output: 34.9123643533  | Program output: 32
           
Correct output: 98.2612616006  | Program output: 106
          
Correct output: 86.5736990631  | Program output: 81
           
Correct output: -79.8463167321 | Program output: -54
          
Correct output: 2.4746909642   | Program output: -3
           
Correct output: 132.3276241331 | Program output: 85
           
Correct output: -171.6614203645 | Program output: -86
          
Correct output: -58.3463633692 | Program output: -13
          
Correct output: 80.6043645122  | Program output: 47
           
Correct output: -10.3066391796 | Program output: -40
          
Correct output: 130.1971143918 | Program output: 76
           
Correct output: 150.3637736344 | Program output: 97
           
Correct output: -111.4726490012 | Program output: -85
          
Correct output: -20.2189788792 | Program output: -42
          
Correct output: -40.8852589809 | Program output: 48
           
Correct output: 32.7611922962  | Program output: 88
           
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_inc} {:instruction tagged_824} {:instruction float_inc} {:instruction float_sin} {:instruction integer_add} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction integer_div} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_rot} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction integer_max} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec} {:instruction integer_mod} {:instruction print_newline})
Best program: (integer_min integer_inc tagged_824 float_inc float_sin integer_add float_min integer_stackdepth integer_dup integer_div tag_integer_484 integer_flush tag_float_527 float_rot in2 integer_max integer_rot float_sub float_pop float_div float_mod integer_max integer_inc integer_inc integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec integer_mod print_newline)
Errors: [2.1443 11 18.4612 11 79.1077 12 81.5984 13 10.9433 12 59.3207 10 62.841 11 21.8843 11 38.7367 11 2.9124 11 7.7387 11 5.5737 12 25.8463 12 5.4747 12 47.3276 14 85.6614 13 45.3464 12 33.6044 12 29.6934 12 54.1971 13 53.3638 13 26.4726 14 21.781 12 88.8853 12 55.2388 13]
Total: 1264.1551999999997
Mean: 25.283104
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 3058.057046800012
Median total errors in population: 1298.1552000000001
Error averages by case: (86.00496529999992 11.904 100.5394781000011 11.595 153.74026779999696 12.321 154.39736579999897 11.851 78.77865589999952 11.609 116.19797339999833 10.426 137.94305300000002 10.585 87.00261900000056 11.656 115.18037569999811 11.366 77.8958168000007 11.504 76.12929840000089 11.287 83.7945261999994 11.588 95.05161010000063 11.519 84.40666790000054 10.89 122.98217570000085 12.689 152.57705680000075 12.776 109.6027325999985 12.633 106.4745123999983 11.375 107.99814510000039 11.893 128.1109349000015 12.746 129.6394719000024 13.148 98.21992729999869 12.571 101.48799200000097 12.141 143.065291699998 12.611 114.03213300000175 12.12)
Error minima by case: (2.1443 9 17.5388 8 2.9733 4 19.5984 3 0.0567 9 0.3207 8 0.159 3 6.1157 10 4.7367 3 2.9124 3 0.2613 3 5.5737 2 14.7573 3 0.4747 3 15.7534 4 22.4196 3 10.2654 3 0.3956 3 10.3066 9 0.1161 4 21.7172 4 15.3836 3 8.781 10 2.1147 3 23.7612 11)
Average genome size in population (length): 57.039
Average program size in population (points): 58.039
Average percent parens in population: 0.019
Minimum age in population: 5.0
Maximum age in population: 9.375
Average age in population: 7.35675
Median age in population: 7.4375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 53
Genome diversity (% unique Plush genomes):	 0.695
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 53
Syntactic diversity (% unique Push programs):	 0.695
Total error diversity:				 0.097
Error (vector) diversity:			 0.102
Behavioral diversity:				 0.108
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 8152125
--- Timings ---
Current time: 1529614877806 milliseconds
Total Time:          22.2 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:         9.9 seconds, 44.8%
Fitness Testing:      9.7 seconds, 43.8%
Report:               2.4 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Number IO problem report - generation 6
Test total error for best: 62612.12209999994
Test mean error for best: 31.30606
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -54
          
Correct output: -46.5388439821 | Program output: -64
          
Correct output: 183.1076678776 | Program output: 105
          
Correct output: 59.5983956317  | Program output: -21
          
Correct output: -40.9433158552 | Program output: -29
          
Correct output: 0.6792530208   | Program output: 61
           
Correct output: 2.8409776764   | Program output: -59
          
Correct output: 87.1156693118  | Program output: 110
          
Correct output: 12.7367383479  | Program output: -25
          
Correct output: 34.9123643533  | Program output: 33
           
Correct output: 98.2612616006  | Program output: 107
          
Correct output: 86.5736990631  | Program output: 82
           
Correct output: -79.8463167321 | Program output: -53
          
Correct output: 2.4746909642   | Program output: -2
           
Correct output: 132.3276241331 | Program output: 86
           
Correct output: -171.6614203645 | Program output: -85
          
Correct output: -58.3463633692 | Program output: -12
          
Correct output: 80.6043645122  | Program output: 48
           
Correct output: -10.3066391796 | Program output: -39
          
Correct output: 130.1971143918 | Program output: 77
           
Correct output: 150.3637736344 | Program output: 98
           
Correct output: -111.4726490012 | Program output: -84
          
Correct output: -20.2189788792 | Program output: -41
          
Correct output: -40.8852589809 | Program output: 49
           
Correct output: 32.7611922962  | Program output: 89
           
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_inc} {:instruction tagged_824} {:instruction float_inc} {:instruction float_sin} {:instruction integer_add} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction integer_mult} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_rot} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec} {:instruction integer_mod} {:instruction print_newline})
Best program: (integer_min integer_inc tagged_824 float_inc float_sin integer_add float_min integer_stackdepth integer_dup integer_mult tag_integer_484 integer_flush tag_float_527 float_rot in2 integer_max integer_rot float_sub float_pop float_div float_pop float_div float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec integer_mod print_newline)
Errors: [1.1443 11 17.4612 11 78.1077 12 80.5984 12 11.9433 12 60.3207 11 61.841 11 22.8843 11 37.7367 12 1.9124 11 8.7387 11 4.5737 12 26.8463 12 4.4747 12 46.3276 13 86.6614 14 46.3464 13 32.6044 12 28.6934 11 53.1971 13 52.3638 14 27.4726 13 20.781 12 89.8853 12 56.2388 12]
Total: 1259.1551999999997
Mean: 25.183104
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 3372.860543000006
Median total errors in population: 1287.1552000000001
Error averages by case: (98.68629130000004 11.787 112.90428990000069 11.5 162.75569479999697 12.195 164.82560669999916 12.018 95.62007919999951 11.534 129.66971119999823 10.895 149.0425945999988 10.965 100.47946360000071 11.324 127.02603469999855 11.82 87.99676330000061 11.885 89.18696530000103 11.065 93.78166879999921 11.738 111.71951850000052 12.04 96.33382470000066 11.033 132.22056050000054 12.887 168.47582130000106 13.285 125.42644189999884 12.466 116.67296529999827 11.116 120.0758438999999 12.214 137.7732112000007 12.557 138.6920825000013 13.279 114.82870229999884 13.13 113.74210330000113 12.639 156.97123399999808 12.464 127.55707020000152 12.56)
Error minima by case: (1.1443 10 17.4612 8 78.1077 4 10.4016 4 0.0567 8 0.3207 9 0.841 5 0.8843 9 1.7367 5 0.0876 4 0.2613 2 1.4263 3 14.7573 5 0.4747 5 44.3276 4 74.5724 4 34.2574 5 0.3956 3 10.3066 9 42.1971 4 52.3638 4 15.3836 4 19.3007 7 40.8853 4 2.2388 10)
Average genome size in population (length): 63.644
Average program size in population (points): 64.644
Average percent parens in population: 0.017
Minimum age in population: 6.625
Maximum age in population: 10.90625
Average age in population: 8.8759375
Median age in population: 8.90625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 59
Genome diversity (% unique Plush genomes):	 0.725
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 59
Syntactic diversity (% unique Push programs):	 0.725
Total error diversity:				 0.101
Error (vector) diversity:			 0.111
Behavioral diversity:				 0.116
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 9760900
--- Timings ---
Current time: 1529614881168 milliseconds
Total Time:          25.6 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        11.6 seconds, 45.2%
Fitness Testing:     11.1 seconds, 43.5%
Report:               2.8 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Number IO problem report - generation 7
Test total error for best: 63075.26269999994
Test mean error for best: 31.53763
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -51
          
Correct output: -46.5388439821 | Program output: -61
          
Correct output: 183.1076678776 | Program output: 108
          
Correct output: 59.5983956317  | Program output: -18
          
Correct output: -40.9433158552 | Program output: -26
          
Correct output: 0.6792530208   | Program output: 64
           
Correct output: 2.8409776764   | Program output: -56
          
Correct output: 87.1156693118  | Program output: 113
          
Correct output: 12.7367383479  | Program output: -22
          
Correct output: 34.9123643533  | Program output: 36
           
Correct output: 98.2612616006  | Program output: 110
          
Correct output: 86.5736990631  | Program output: 85
           
Correct output: -79.8463167321 | Program output: -50
          
Correct output: 2.4746909642   | Program output: 1
            
Correct output: 132.3276241331 | Program output: 89
           
Correct output: -171.6614203645 | Program output: -82
          
Correct output: -58.3463633692 | Program output: -9
           
Correct output: 80.6043645122  | Program output: 51
           
Correct output: -10.3066391796 | Program output: -36
          
Correct output: 130.1971143918 | Program output: 80
           
Correct output: 150.3637736344 | Program output: 101
          
Correct output: -111.4726490012 | Program output: -81
          
Correct output: -20.2189788792 | Program output: -38
          
Correct output: -40.8852589809 | Program output: 52
           
Correct output: 32.7611922962  | Program output: 92
           
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_inc} {:instruction tagged_824} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction integer_mult} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_rot} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec} {:instruction integer_mod} {:instruction print_newline})
Best program: (integer_min integer_inc tagged_824 float_min integer_stackdepth integer_dup integer_mult tag_integer_484 integer_flush tag_float_527 float_rot in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec integer_mod print_newline)
Errors: [1.8557 12 14.4612 12 75.1077 11 77.5984 12 14.9433 13 63.3207 11 58.841 11 25.8843 10 34.7367 12 1.0876 11 11.7387 10 1.5737 11 29.8463 13 1.4747 12 43.3276 14 89.6614 13 49.3464 12 29.6044 11 25.6934 11 50.1971 13 49.3638 12 30.4726 13 17.781 12 92.8853 12 59.2388 11]
Total: 1245.0417999999997
Mean: 24.900837
Genome size: 60
Size: 61
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3190.741159000006
Median total errors in population: 1278.1552
Error averages by case: (84.56585789999993 11.409 99.13733530000124 11.543 155.9691734999967 12.212 156.07714460000014 12.242 86.60313769999937 11.509 130.30810009999777 11.001 138.18834919999958 11.065 97.64862370000122 11.377 116.52151889999796 11.707 84.59547740000073 11.942 85.03438950000108 11.192 87.84235949999916 11.857 101.51942410000098 12.236 86.12392530000052 11.281 126.3657014000012 13.119 157.24913119999988 13.875 118.65901619999826 12.404 113.10063419999787 11.228 108.54229030000057 12.385 132.53951090000126 12.373 132.13304160000226 13.142 102.71624649999812 13.742 101.60207920000141 12.999 157.6963793999976 12.455 126.95131140000244 12.756)
Error minima by case: (0.1443 11 14.4612 8 75.1077 5 48.5984 4 0.0567 9 0.3207 10 1.841 6 0.1157 10 1.7367 5 0.9124 5 0.2613 5 1.5737 3 14.8281 5 1.4747 5 43.3276 5 74.6432 5 34.3282 6 29.6044 5 4.6934 10 50.1971 4 49.3638 5 15.4545 5 5.219 9 25.8853 5 21.7612 11)
Average genome size in population (length): 57.988
Average program size in population (points): 58.988
Average percent parens in population: 0.018
Minimum age in population: 7.875
Maximum age in population: 12.390625
Average age in population: 10.497
Median age in population: 10.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 72
Genome diversity (% unique Plush genomes):	 0.687
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 72
Syntactic diversity (% unique Push programs):	 0.687
Total error diversity:				 0.054
Error (vector) diversity:			 0.06
Behavioral diversity:				 0.064
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 11219375
--- Timings ---
Current time: 1529614884386 milliseconds
Total Time:          28.8 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        13.2 seconds, 45.8%
Fitness Testing:     12.4 seconds, 43.1%
Report:               3.1 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Number IO problem report - generation 8
Test total error for best: 63017.26269999994
Test mean error for best: 31.50863
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -51           
Correct output: -46.5388439821 | Program output: -61           
Correct output: 183.1076678776 | Program output: 108           
Correct output: 59.5983956317  | Program output: -18           
Correct output: -40.9433158552 | Program output: -26           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -56           
Correct output: 87.1156693118  | Program output: 113           
Correct output: 12.7367383479  | Program output: -22           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 110           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -50           
Correct output: 2.4746909642   | Program output: 1             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -82           
Correct output: -58.3463633692 | Program output: -9            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -36           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 101           
Correct output: -111.4726490012 | Program output: -81           
Correct output: -20.2189788792 | Program output: -38           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec} {:instruction integer_mod} {:instruction 12})
Best program: (integer_min integer_div tagged_824 integer_flush in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_min integer_inc float_dup_times float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min integer_inc float_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec integer_mod 12)
Errors: [1.8557 12 14.4612 11 75.1077 11 77.5984 12 14.9433 13 63.3207 11 58.841 11 25.8843 10 34.7367 12 1.0876 11 11.7387 10 1.5737 11 29.8463 13 1.4747 12 43.3276 14 89.6614 13 49.3464 12 29.6044 11 25.6934 11 50.1971 13 49.3638 12 30.4726 13 17.781 12 92.8853 12 59.2388 11]
Total: 1244.0417999999997
Mean: 24.880836
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 3128.609665400006
Median total errors in population: 1275.1551999999997
Error averages by case: (81.51193349999994 11.37 96.0870844000009 11.78 152.63740709999647 12.167 153.14112640000008 12.412 85.08857309999935 11.688 128.52079909999776 10.811 135.4233769999999 11.04 96.33353110000084 11.562 113.64455389999802 11.346 80.75517480000067 11.581 83.76454330000112 11.138 84.22537769999937 11.58 100.68113490000104 12.375 82.74475530000052 11.503 122.85537480000123 13.227 156.4984722000002 13.593 117.88503439999816 12.493 109.31486119999789 11.404 105.64043260000051 12.337 128.9889233000018 12.653 128.7077874000026 13.148 101.84820979999816 13.457 98.64074700000144 12.809 155.85659069999744 12.626 125.27086040000239 12.443)
Error minima by case: (0.1443 11 12.4612 11 73.1077 4 11.4016 3 0.0567 11 0.3207 10 0.841 4 1.1157 10 0.2633 4 0.0876 3 0.2613 4 0.4263 2 14.8463 4 0.4747 4 41.3276 3 74.6614 4 6.6536 4 9.6044 4 6.6934 11 48.1971 3 47.3638 3 15.4726 4 3.219 11 7.1147 4 5.2388 11)
Average genome size in population (length): 57.654
Average program size in population (points): 58.654
Average percent parens in population: 0.018
Minimum age in population: 9.953125
Maximum age in population: 13.640625
Average age in population: 12.04984375
Median age in population: 12.09375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.722
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.722
Total error diversity:				 0.069
Error (vector) diversity:			 0.076
Behavioral diversity:				 0.08
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 12667600
--- Timings ---
Current time: 1529614887680 milliseconds
Total Time:          32.1 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        14.7 seconds, 45.7%
Fitness Testing:     13.9 seconds, 43.2%
Report:               3.4 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Number IO problem report - generation 9
Test total error for best: 63017.26269999994
Test mean error for best: 31.50863
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -51           
Correct output: -46.5388439821 | Program output: -61           
Correct output: 183.1076678776 | Program output: 108           
Correct output: 59.5983956317  | Program output: -18           
Correct output: -40.9433158552 | Program output: -26           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -56           
Correct output: 87.1156693118  | Program output: 113           
Correct output: 12.7367383479  | Program output: -22           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 110           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -50           
Correct output: 2.4746909642   | Program output: 1             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -82           
Correct output: -58.3463633692 | Program output: -9            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -36           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 101           
Correct output: -111.4726490012 | Program output: -81           
Correct output: -20.2189788792 | Program output: -38           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_sub} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_dup} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec} {:instruction integer_mod})
Best program: (integer_min float_sub tagged_824 integer_flush in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_min integer_inc float_dup_times float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_dup float_yankdup in1 print_integer integer_yank integer_dec integer_mod)
Errors: [1.8557 12 14.4612 11 75.1077 11 77.5984 12 14.9433 13 63.3207 11 58.841 11 25.8843 10 34.7367 12 1.0876 11 11.7387 10 1.5737 11 29.8463 13 1.4747 12 43.3276 14 89.6614 13 49.3464 12 29.6044 11 25.6934 11 50.1971 13 49.3638 12 30.4726 13 17.781 12 92.8853 12 59.2388 11]
Total: 1244.0417999999997
Mean: 24.880836
Genome size: 50
Size: 51
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 3125.237454700008
Median total errors in population: 1264.1551999999997
Error averages by case: (79.67546599999996 11.368 93.88370080000091 11.518 152.5462993999965 11.987 150.56392160000007 12.456 86.89928959999932 12.098 130.5267611999977 10.645 132.98449000000014 11.091 99.7168451000011 11.177 110.90929059999836 11.494 79.65570960000052 11.25 87.44937240000115 11.07 83.81674039999943 11.682 102.07928860000091 12.347 79.95419140000023 11.694 122.446047200001 13.461 158.16981080000022 13.358 118.76568799999838 12.518 108.2452567999978 11.806 103.12596560000024 11.908 128.4007262000016 12.95 128.51342360000243 13.203 103.56973719999817 13.507 96.1884040000015 12.382 157.77470539999752 12.447 127.62532320000231 12.334)
Error minima by case: (0.1443 10 6.4612 10 67.1077 4 45.5984 4 0.0567 10 0.3207 9 0.841 5 10.8843 10 0.2633 4 0.0876 2 0.2613 3 0.4263 2 8.8463 5 0.4747 4 35.3276 4 74.6614 4 7.3464 5 21.6044 4 11.3066 11 42.1971 4 41.3638 4 15.4726 4 9.781 12 0.1147 4 19.7612 11)
Average genome size in population (length): 59.15
Average program size in population (points): 60.15
Average percent parens in population: 0.017
Minimum age in population: 11.4609375
Maximum age in population: 15.24609375
Average age in population: 13.56515625
Median age in population: 13.63671875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 36
Genome diversity (% unique Plush genomes):	 0.709
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 36
Syntactic diversity (% unique Push programs):	 0.709
Total error diversity:				 0.072
Error (vector) diversity:			 0.078
Behavioral diversity:				 0.089
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 14152675
--- Timings ---
Current time: 1529614890746 milliseconds
Total Time:          35.2 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        16.1 seconds, 45.8%
Fitness Testing:     15.1 seconds, 43.1%
Report:               3.8 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Number IO problem report - generation 10
Test total error for best: 63017.26269999994
Test mean error for best: 31.50863
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -51           
Correct output: -46.5388439821 | Program output: -61           
Correct output: 183.1076678776 | Program output: 108           
Correct output: 59.5983956317  | Program output: -18           
Correct output: -40.9433158552 | Program output: -26           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -56           
Correct output: 87.1156693118  | Program output: 113           
Correct output: 12.7367383479  | Program output: -22           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 110           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -50           
Correct output: 2.4746909642   | Program output: 1             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -82           
Correct output: -58.3463633692 | Program output: -9            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -36           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 101           
Correct output: -111.4726490012 | Program output: -81           
Correct output: -20.2189788792 | Program output: -38           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_inc} {:instruction tagged_824} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction integer_mult} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_rot} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec} {:instruction integer_mod} {:instruction float_swap})
Best program: (integer_min integer_inc tagged_824 float_min integer_stackdepth integer_dup integer_mult tag_integer_484 integer_flush tag_float_527 float_rot in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod float_pop integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec integer_mod float_swap)
Errors: [1.8557 12 14.4612 11 75.1077 11 77.5984 12 14.9433 13 63.3207 11 58.841 11 25.8843 10 34.7367 12 1.0876 11 11.7387 10 1.5737 11 29.8463 13 1.4747 12 43.3276 14 89.6614 13 49.3464 12 29.6044 11 25.6934 11 50.1971 13 49.3638 12 30.4726 13 17.781 12 92.8853 12 59.2388 11]
Total: 1244.0417999999997
Mean: 24.880836
Genome size: 61
Size: 62
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3351.6347438000066
Median total errors in population: 1250.1551999999997
Error averages by case: (90.41602600000002 11.621 103.01124400000128 11.578 158.3232223999966 11.603 158.05574079999943 12.275 100.13696999999938 12.58 140.73627139999883 10.641 141.4824439999994 11.164 110.12296080000161 10.774 119.05260979999787 11.707 86.88661439999987 11.309 97.91211110000108 10.954 90.36401199999908 11.574 114.84544040000142 12.418 88.06495510000077 11.656 128.4467712000014 13.562 170.7255512000012 13.292 130.488531199998 12.689 114.145212799998 11.771 111.62864480000071 11.646 134.28875520000153 12.892 134.51578560000218 12.787 116.93312079999752 13.337 104.82103200000142 12.311 167.73039359999748 12.512 137.96132320000183 11.886)
Error minima by case: (0.1443 10 8.4612 11 69.1077 11 8.4016 11 0.0567 11 0.3207 10 0.841 10 10.8843 10 0.2633 11 0.0876 11 0.7387 9 0.4263 10 14.8463 11 0.4747 10 37.3276 12 74.6614 12 7.3464 12 9.6044 10 10.3066 11 44.1971 12 43.3638 11 15.4726 12 11.781 12 4.1147 11 2.2388 11)
Average genome size in population (length): 64.127
Average program size in population (points): 65.127
Average percent parens in population: 0.016
Minimum age in population: 12.62109375
Maximum age in population: 16.87890625
Average age in population: 15.079794921875
Median age in population: 15.115234375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 37
Genome diversity (% unique Plush genomes):	 0.741
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 37
Syntactic diversity (% unique Push programs):	 0.741
Total error diversity:				 0.073
Error (vector) diversity:			 0.081
Behavioral diversity:				 0.09
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 15762275
--- Timings ---
Current time: 1529614894039 milliseconds
Total Time:          38.4 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        17.7 seconds, 46.1%
Fitness Testing:     16.5 seconds, 42.9%
Report:               4.1 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Number IO problem report - generation 11
Test total error for best: 63017.26269999994
Test mean error for best: 31.50863
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -51           
Correct output: -46.5388439821 | Program output: -61           
Correct output: 183.1076678776 | Program output: 108           
Correct output: 59.5983956317  | Program output: -18           
Correct output: -40.9433158552 | Program output: -26           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -56           
Correct output: 87.1156693118  | Program output: 113           
Correct output: 12.7367383479  | Program output: -22           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 110           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -50           
Correct output: 2.4746909642   | Program output: 1             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -82           
Correct output: -58.3463633692 | Program output: -9            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -36           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 101           
Correct output: -111.4726490012 | Program output: -81           
Correct output: -20.2189788792 | Program output: -38           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_inc} {:instruction tagged_824} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction integer_mult} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_rot} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec} {:instruction integer_mod} {:instruction float_swap})
Best program: (integer_min integer_inc tagged_824 float_min integer_stackdepth integer_dup integer_mult tag_integer_484 integer_flush tag_float_527 float_rot in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod float_pop integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec integer_mod float_swap)
Errors: [1.8557 12 14.4612 11 75.1077 11 77.5984 12 14.9433 13 63.3207 11 58.841 11 25.8843 10 34.7367 12 1.0876 11 11.7387 10 1.5737 11 29.8463 13 1.4747 12 43.3276 14 89.6614 13 49.3464 12 29.6044 11 25.6934 11 50.1971 13 49.3638 12 30.4726 13 17.781 12 92.8853 12 59.2388 11]
Total: 1244.0417999999997
Mean: 24.880836
Genome size: 61
Size: 62
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3432.9567472
Median total errors in population: 1245.0417999999997
Error averages by case: (92.90941280000006 11.913 104.22593360000145 11.629 161.02600699999635 11.456 160.46854399999913 12.126 103.92662979999926 12.865 146.20255419999933 10.838 143.1237619999989 11.145 114.38796080000165 10.592 121.51766299999787 11.887 91.8732175999994 11.263 102.21241760000123 10.628 93.75907559999848 11.427 117.85013300000142 12.727 92.17777200000126 11.733 131.59311600000126 13.823 172.82587400000145 13.199 134.909531199998 12.424 118.17800399999767 11.462 113.71280520000067 11.453 137.61336100000156 12.94 137.41005800000246 12.299 118.94706599999759 13.198 106.79571800000168 12.273 173.30985239999728 12.446 142.71927840000154 11.535)
Error minima by case: (0.1443 10 3.4612 10 64.1077 11 18.5984 11 0.0567 11 0.6793 9 0.841 10 3.1157 10 0.7367 11 0.0876 9 0.7387 9 0.4263 11 14.8463 11 0.4747 10 32.3276 12 74.6614 12 5.6536 11 18.6044 10 10.3066 11 39.1971 12 38.3638 11 15.4726 12 6.781 11 23.1147 10 4.2388 10)
Average genome size in population (length): 61.595
Average program size in population (points): 62.595
Average percent parens in population: 0.017
Minimum age in population: 14.275390625
Maximum age in population: 18.2734375
Average age in population: 16.516701171875
Median age in population: 16.572265625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 117
Genome diversity (% unique Plush genomes):	 0.705
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 117
Syntactic diversity (% unique Push programs):	 0.705
Total error diversity:				 0.071
Error (vector) diversity:			 0.076
Behavioral diversity:				 0.079
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 17306200
--- Timings ---
Current time: 1529614897224 milliseconds
Total Time:          41.6 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        19.1 seconds, 46.0%
Fitness Testing:     17.9 seconds, 43.0%
Report:               4.5 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Number IO problem report - generation 12
Test total error for best: 63017.26269999994
Test mean error for best: 31.50863
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -51           
Correct output: -46.5388439821 | Program output: -61           
Correct output: 183.1076678776 | Program output: 108           
Correct output: 59.5983956317  | Program output: -18           
Correct output: -40.9433158552 | Program output: -26           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -56           
Correct output: 87.1156693118  | Program output: 113           
Correct output: 12.7367383479  | Program output: -22           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 110           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -50           
Correct output: 2.4746909642   | Program output: 1             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -82           
Correct output: -58.3463633692 | Program output: -9            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -36           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 101           
Correct output: -111.4726490012 | Program output: -81           
Correct output: -20.2189788792 | Program output: -38           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_inc} {:instruction tagged_824} {:instruction float_inc} {:instruction float_sin} {:instruction integer_add} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction integer_div} {:instruction tag_integer_484} {:instruction integer_mult} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_rot} {:instruction in2} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction float_pop} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec} {:instruction integer_mod} {:instruction float_swap} {:instruction tag_float_538} {:instruction float_dup_times} {:instruction integer_shove} {:instruction integer_max} {:instruction float_add} {:instruction in2} {:instruction float_frominteger} {:instruction float_div} {:instruction float_dup_items} {:instruction integer_stackdepth} {:instruction integer_min} {:instruction integer_mod} {:instruction float_sub} {:instruction float_flush})
Best program: (integer_min integer_inc tagged_824 float_inc float_sin integer_add float_min integer_stackdepth integer_dup integer_div tag_integer_484 integer_mult tag_integer_484 integer_flush tag_float_527 float_rot in2 integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod float_pop float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec integer_mod float_swap tag_float_538 float_dup_times integer_shove integer_max float_add in2 float_frominteger float_div float_dup_items integer_stackdepth integer_min integer_mod float_sub float_flush)
Errors: [1.8557 12 14.4612 11 75.1077 11 77.5984 12 14.9433 13 63.3207 11 58.841 11 25.8843 10 34.7367 12 1.0876 11 11.7387 10 1.5737 11 29.8463 13 1.4747 12 43.3276 14 89.6614 13 49.3464 12 29.6044 11 25.6934 11 50.1971 13 49.3638 12 30.4726 13 17.781 12 92.8853 12 59.2388 11]
Total: 1244.0417999999997
Mean: 24.880836
Genome size: 73
Size: 74
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 3734.076653400001
Median total errors in population: 1244.0417999999997
Error averages by case: (105.49583560000005 12.063 116.49732160000116 11.468 172.80149919999647 11.473 171.76836319999936 12.128 115.30193389999934 12.891 158.15578159999947 10.949 154.92403399999858 11.139 127.31242360000152 10.511 133.36529599999818 11.988 104.42704239999948 11.274 115.18550800000116 10.551 106.51904379999895 11.331 129.9932848000014 12.847 103.41249970000074 11.854 143.7185296000003 13.828 184.42761440000118 13.21 146.36168159999923 12.359 130.21354239999778 11.388 125.71887120000055 11.495 149.58560160000042 13.034 149.51096480000123 12.322 131.36844959999763 13.222 118.89290800000157 12.293 184.58268759999734 12.372 155.10493520000122 11.441)
Error minima by case: (0.1443 10 3.4612 10 64.1077 11 8.5984 10 0.0567 11 0.3207 10 1.841 10 10.8843 10 0.2633 11 0.0876 11 0.2613 10 0.4263 10 14.8463 11 0.4747 10 32.3276 12 74.6614 12 2.6536 11 18.6044 11 10.3066 11 39.1971 12 38.3638 11 15.4726 12 6.781 11 11.1147 11 11.7612 11)
Average genome size in population (length): 57.132
Average program size in population (points): 58.132
Average percent parens in population: 0.018
Minimum age in population: 15.7451171875
Maximum age in population: 20.0732421875
Average age in population: 17.90213330078125
Median age in population: 17.92236328125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 192
Genome diversity (% unique Plush genomes):	 0.646
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 192
Syntactic diversity (% unique Push programs):	 0.646
Total error diversity:				 0.058
Error (vector) diversity:			 0.063
Behavioral diversity:				 0.066
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 18736850
--- Timings ---
Current time: 1529614900619 milliseconds
Total Time:          44.8 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        20.6 seconds, 46.0%
Fitness Testing:     19.2 seconds, 42.8%
Report:               4.9 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Number IO problem report - generation 13
Test total error for best: 63017.26269999994
Test mean error for best: 31.50863
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -51           
Correct output: -46.5388439821 | Program output: -61           
Correct output: 183.1076678776 | Program output: 108           
Correct output: 59.5983956317  | Program output: -18           
Correct output: -40.9433158552 | Program output: -26           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -56           
Correct output: 87.1156693118  | Program output: 113           
Correct output: 12.7367383479  | Program output: -22           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 110           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -50           
Correct output: 2.4746909642   | Program output: 1             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -82           
Correct output: -58.3463633692 | Program output: -9            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -36           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 101           
Correct output: -111.4726490012 | Program output: -81           
Correct output: -20.2189788792 | Program output: -38           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction print_float} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_mod} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_stackdepth} {:instruction integer_mod} {:instruction 12})
Best program: (integer_min integer_div tagged_824 integer_flush in2 integer_max integer_rot float_sub float_pop float_div print_float float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_min integer_inc float_dup_times float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min integer_inc float_inc integer_inc integer_inc float_mod integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_stackdepth integer_mod 12)
Errors: [1.8557 12 14.4612 11 75.1077 11 77.5984 12 14.9433 13 63.3207 11 58.841 11 25.8843 10 34.7367 12 1.0876 11 11.7387 10 1.5737 11 29.8463 13 1.4747 12 43.3276 14 89.6614 13 49.3464 12 29.6044 11 25.6934 11 50.1971 13 49.3638 12 30.4726 13 17.781 12 92.8853 12 59.2388 11]
Total: 1244.0417999999997
Mean: 24.880836
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 3675.4422296000002
Median total errors in population: 1244.0417999999997
Error averages by case: (102.86499000000005 12.04 113.89016640000145 11.408 170.5639299999965 11.47 169.70336319999822 12.138 113.7731967999994 12.888 155.47842300000022 10.927 152.54676199999795 11.14 124.55134920000177 10.525 131.19576939999774 11.969 102.1813415999995 11.285 112.53750800000111 10.564 104.06163339999857 11.336 127.49667000000164 12.844 102.15467080000136 11.84 141.42984000000038 13.833 181.79526000000197 13.218 144.42906719999922 12.361 128.03595999999777 11.393 123.35964480000084 11.488 147.36039000000005 13.007 147.19842000000085 12.317 128.51133999999743 13.23 116.48603200000169 12.298 182.23399939999734 12.386 152.23750240000044 11.46)
Error minima by case: (0.1443 11 4.4612 11 65.1077 10 2.4016 11 0.0567 11 0.3207 10 1.841 10 10.8843 10 0.2633 10 0.0876 10 0.7387 10 0.4263 10 10.8463 11 0.4747 10 33.3276 12 74.6614 12 10.6536 11 18.6044 10 10.3066 11 40.1971 12 39.3638 11 15.4726 12 7.781 11 5.8853 12 10.7612 11)
Average genome size in population (length): 56.144
Average program size in population (points): 57.144
Average percent parens in population: 0.018
Minimum age in population: 16.97265625
Maximum age in population: 21.4033203125
Average age in population: 19.37652661132812
Median age in population: 19.4210205078125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 165
Genome diversity (% unique Plush genomes):	 0.661
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 165
Syntactic diversity (% unique Push programs):	 0.661
Total error diversity:				 0.048
Error (vector) diversity:			 0.051
Behavioral diversity:				 0.051
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 20141925
--- Timings ---
Current time: 1529614903603 milliseconds
Total Time:          48.1 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        22.2 seconds, 46.1%
Fitness Testing:     20.4 seconds, 42.4%
Report:               5.4 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Number IO problem report - generation 14
Test total error for best: 63017.26269999994
Test mean error for best: 31.50863
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -51           
Correct output: -46.5388439821 | Program output: -61           
Correct output: 183.1076678776 | Program output: 108           
Correct output: 59.5983956317  | Program output: -18           
Correct output: -40.9433158552 | Program output: -26           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -56           
Correct output: 87.1156693118  | Program output: 113           
Correct output: 12.7367383479  | Program output: -22           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 110           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -50           
Correct output: 2.4746909642   | Program output: 1             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -82           
Correct output: -58.3463633692 | Program output: -9            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -36           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 101           
Correct output: -111.4726490012 | Program output: -81           
Correct output: -20.2189788792 | Program output: -38           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_sin} {:instruction integer_add} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction integer_mult} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_rot} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_sin} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer})
Best program: (integer_min float_sin integer_add float_min integer_stackdepth integer_dup integer_mult tag_integer_484 integer_flush tag_float_527 float_rot in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_inc integer_inc integer_min in2 integer_max integer_rot float_sub float_pop float_div float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_sin float_dup_times float_tan float_tan float_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer)
Errors: [1.8557 12 14.4612 11 75.1077 11 77.5984 12 14.9433 13 63.3207 11 58.841 11 25.8843 10 34.7367 12 1.0876 11 11.7387 10 1.5737 11 29.8463 13 1.4747 12 43.3276 14 89.6614 13 49.3464 12 29.6044 11 25.6934 11 50.1971 13 49.3638 12 30.4726 13 17.781 12 92.8853 12 59.2388 11]
Total: 1244.0417999999997
Mean: 24.880836
Genome size: 62
Size: 63
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3886.5292002000006
Median total errors in population: 1244.0417999999997
Error averages by case: (111.76469130000005 12.051 122.8057828000012 11.42 178.06996069999678 11.469 178.13678079999875 12.124 121.81893389999934 12.901 164.30681950000005 10.945 161.3291929999982 11.14 132.8080765000014 10.534 140.10308589999883 11.954 110.99400599999943 11.289 120.68067890000117 10.559 112.39576489999878 11.343 136.08836070000135 12.846 110.29029730000104 11.823 149.3898916 13.841 189.76130740000167 13.218 153.0059495999995 12.356 136.4853115999984 11.397 132.31656460000025 11.49 155.3396161000001 13.013 154.996145800001 12.297 137.0120865999983 13.227 125.4606890000016 12.312 190.77403169999732 12.389 160.97317400000054 11.484)
Error minima by case: (0.1443 11 5.4612 11 66.1077 3 1.4016 4 0.0567 11 0.6793 10 0.159 5 10.8843 9 0.2633 4 0.0876 3 0.2613 4 0.4263 2 3.1537 5 0.4747 3 23.3276 4 74.6614 4 24.6536 4 19.6044 4 10.3066 10 21.1971 4 40.3638 4 15.4726 3 8.781 11 26.8853 4 15.7612 11)
Average genome size in population (length): 55.452
Average program size in population (points): 56.452
Average percent parens in population: 0.018
Minimum age in population: 18.23974609375
Maximum age in population: 22.7669677734375
Average age in population: 20.789333984375
Median age in population: 20.82257080078125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 145
Genome diversity (% unique Plush genomes):	 0.705
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 145
Syntactic diversity (% unique Push programs):	 0.705
Total error diversity:				 0.049
Error (vector) diversity:			 0.051
Behavioral diversity:				 0.052
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 21528975
--- Timings ---
Current time: 1529614906473 milliseconds
Total Time:          50.9 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        23.6 seconds, 46.3%
Fitness Testing:     21.5 seconds, 42.3%
Report:               5.7 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Number IO problem report - generation 15
Test total error for best: 62761.78489999994
Test mean error for best: 31.38089
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -52           
Correct output: -46.5388439821 | Program output: -62           
Correct output: 183.1076678776 | Program output: 96            
Correct output: 59.5983956317  | Program output: -19           
Correct output: -40.9433158552 | Program output: -27           
Correct output: 0.6792530208   | Program output: 63            
Correct output: 2.8409776764   | Program output: -57           
Correct output: 87.1156693118  | Program output: 96            
Correct output: 12.7367383479  | Program output: -23           
Correct output: 34.9123643533  | Program output: 35            
Correct output: 98.2612616006  | Program output: 96            
Correct output: 86.5736990631  | Program output: 84            
Correct output: -79.8463167321 | Program output: -51           
Correct output: 2.4746909642   | Program output: 0             
Correct output: 132.3276241331 | Program output: 88            
Correct output: -171.6614203645 | Program output: -83           
Correct output: -58.3463633692 | Program output: -10           
Correct output: 80.6043645122  | Program output: 50            
Correct output: -10.3066391796 | Program output: -37           
Correct output: 130.1971143918 | Program output: 79            
Correct output: 150.3637736344 | Program output: 96            
Correct output: -111.4726490012 | Program output: -82           
Correct output: -20.2189788792 | Program output: -39           
Correct output: -40.8852589809 | Program output: 51            
Correct output: 32.7611922962  | Program output: 91            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction float_mult} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_tan} {:instruction 84} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_min} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (integer_min integer_div tagged_824 float_mult in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_inc integer_inc integer_min integer_inc integer_yank float_tan 84 integer_inc integer_min integer_inc float_dup_times float_dup_times float_tan float_inc integer_min integer_min integer_inc float_dup_times float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min integer_inc float_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec)
Errors: [0.8557 11 15.4612 11 87.1077 13 78.5984 12 13.9433 13 62.3207 10 59.841 11 8.8843 12 35.7367 11 0.0876 11 2.2613 11 2.5737 12 28.8463 12 2.4747 11 44.3276 14 88.6614 13 48.3464 13 30.6044 12 26.6934 11 51.1971 12 54.3638 13 29.4726 13 18.781 12 91.8853 13 58.2388 12]
Total: 1240.5643999999998
Mean: 24.811289
Genome size: 53
Size: 54
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 3807.291716200001
Median total errors in population: 1244.0417999999997
Error averages by case: (108.61313430000006 12.053 119.647472400002 11.407 175.09139959999646 11.486 175.49337119999794 12.116 119.48716069999941 12.89 160.42036210000072 10.944 158.53392099999746 11.142 129.68507880000217 10.526 137.20903269999852 11.973 107.32840649999952 11.27 117.70022930000108 10.562 109.18783029999813 11.349 132.96005330000187 12.83 107.3600756000017 11.816 146.22192729999998 13.818 186.6243074000024 13.209 149.84394959999963 12.331 132.95540129999827 11.394 129.31611180000118 11.466 152.10626369999972 13.022 151.9350434000004 12.291 133.87608659999773 13.218 122.39093700000153 12.308 186.74296759999734 12.363 157.3111927000002 11.466)
Error minima by case: (0.1443 11 4.4612 11 20.8923 3 33.0 2 0.0567 11 0.184 8 0.841 2 8.8843 10 0.2633 2 0.0876 2 1.2613 2 0.4263 1 13.8463 2 0.4747 2 33.3276 3 4.3386 2 3.3464 2 9.3956 2 11.3066 11 17.8029 3 39.3638 3 15.4726 2 7.781 11 5.8853 2 10.2388 10)
Average genome size in population (length): 55.123
Average program size in population (points): 56.123
Average percent parens in population: 0.018
Minimum age in population: 19.23974609375
Maximum age in population: 24.19873046875
Average age in population: 22.22474371337891
Median age in population: 22.23236083984375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 129
Genome diversity (% unique Plush genomes):	 0.712
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 129
Syntactic diversity (% unique Push programs):	 0.712
Total error diversity:				 0.052
Error (vector) diversity:			 0.054
Behavioral diversity:				 0.054
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 22907625
--- Timings ---
Current time: 1529614909493 milliseconds
Total Time:          53.9 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        25.0 seconds, 46.5%
Fitness Testing:     22.7 seconds, 42.1%
Report:               6.0 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Number IO problem report - generation 16
Test total error for best: 62751.38229999994
Test mean error for best: 31.37569
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -52           
Correct output: -46.5388439821 | Program output: -62           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -19           
Correct output: -40.9433158552 | Program output: -27           
Correct output: 0.6792530208   | Program output: 63            
Correct output: 2.8409776764   | Program output: -57           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -23           
Correct output: 34.9123643533  | Program output: 35            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 84            
Correct output: -79.8463167321 | Program output: -51           
Correct output: 2.4746909642   | Program output: 0             
Correct output: 132.3276241331 | Program output: 88            
Correct output: -171.6614203645 | Program output: -83           
Correct output: -58.3463633692 | Program output: -10           
Correct output: 80.6043645122  | Program output: 50            
Correct output: -10.3066391796 | Program output: -37           
Correct output: 130.1971143918 | Program output: 79            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -82           
Correct output: -20.2189788792 | Program output: -39           
Correct output: -40.8852589809 | Program output: 51            
Correct output: 32.7611922962  | Program output: 91            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_stackdepth} {:instruction integer_inc} {:instruction tagged_824} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction integer_mult} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (integer_stackdepth integer_inc tagged_824 float_min integer_stackdepth integer_dup integer_mult tag_integer_484 integer_flush tag_float_527 float_pop in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec)
Errors: [0.8557 11 15.4612 11 83.1077 12 78.5984 12 13.9433 13 62.3207 10 59.841 11 12.8843 12 35.7367 11 0.0876 11 1.7387 10 2.5737 12 28.8463 12 2.4747 11 44.3276 14 88.6614 13 48.3464 13 30.6044 12 26.6934 11 51.1971 12 50.3638 12 29.4726 13 18.781 12 91.8853 13 58.2388 12]
Total: 1233.0417999999997
Mean: 24.660835
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 3811.3309784
Median total errors in population: 1244.0417999999997
Error averages by case: (108.74207370000005 12.038 119.73162760000233 11.414 175.19217609999626 11.459 175.2341743999978 12.094 118.94793389999926 12.926 161.73517810000055 10.928 158.43755699999772 11.13 129.96061370000234 10.545 137.12955929999782 11.952 107.40959759999934 11.26 117.83429190000125 10.547 109.35991229999789 11.341 133.2687459000021 12.825 105.65814550000187 11.794 146.3935468000003 13.841 187.09963020000254 13.192 149.8129887999994 12.35 133.44752039999824 11.391 129.31233820000128 11.466 152.35701030000027 12.995 152.02787340000108 12.277 134.2310317999976 13.205 122.42281300000157 12.288 188.10203169999713 12.38 158.38360680000062 11.461)
Error minima by case: (0.1443 11 4.4612 11 65.1077 3 6.5984 2 0.0567 11 0.6793 10 0.841 2 7.8843 10 0.7367 2 0.0876 2 0.7387 2 0.4263 1 8.8463 2 0.4747 2 33.3276 3 74.6614 2 7.3464 2 15.3956 2 10.3066 11 34.1971 3 39.3638 3 15.4726 2 7.781 11 10.1147 2 11.7612 10)
Average genome size in population (length): 54.598
Average program size in population (points): 55.598
Average percent parens in population: 0.018
Minimum age in population: 20.98046875
Maximum age in population: 25.74374389648438
Average age in population: 23.66040078735352
Median age in population: 23.73469543457031
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 107
Genome diversity (% unique Plush genomes):	 0.742
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 107
Syntactic diversity (% unique Push programs):	 0.742
Total error diversity:				 0.051
Error (vector) diversity:			 0.054
Behavioral diversity:				 0.054
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 24272825
--- Timings ---
Current time: 1529614912753 milliseconds
Total Time:          57.1 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        26.6 seconds, 46.5%
Fitness Testing:     24.0 seconds, 42.1%
Report:               6.4 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Number IO problem report - generation 17
Test total error for best: 62751.38229999994
Test mean error for best: 31.37569
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -52           
Correct output: -46.5388439821 | Program output: -62           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -19           
Correct output: -40.9433158552 | Program output: -27           
Correct output: 0.6792530208   | Program output: 63            
Correct output: 2.8409776764   | Program output: -57           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -23           
Correct output: 34.9123643533  | Program output: 35            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 84            
Correct output: -79.8463167321 | Program output: -51           
Correct output: 2.4746909642   | Program output: 0             
Correct output: 132.3276241331 | Program output: 88            
Correct output: -171.6614203645 | Program output: -83           
Correct output: -58.3463633692 | Program output: -10           
Correct output: 80.6043645122  | Program output: 50            
Correct output: -10.3066391796 | Program output: -37           
Correct output: 130.1971143918 | Program output: 79            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -82           
Correct output: -20.2189788792 | Program output: -39           
Correct output: -40.8852589809 | Program output: 51            
Correct output: 32.7611922962  | Program output: 91            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_inc} {:instruction tagged_824} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_mult} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (integer_min integer_inc tagged_824 in2 integer_max integer_rot float_sub integer_dup integer_mult tag_integer_484 integer_flush tag_float_527 float_pop in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec)
Errors: [0.8557 11 15.4612 11 83.1077 12 78.5984 12 13.9433 13 62.3207 10 59.841 11 12.8843 12 35.7367 11 0.0876 11 1.7387 10 2.5737 12 28.8463 12 2.4747 11 44.3276 14 88.6614 13 48.3464 13 30.6044 12 26.6934 11 51.1971 12 50.3638 12 29.4726 13 18.781 12 91.8853 13 58.2388 12]
Total: 1233.0417999999997
Mean: 24.660835
Genome size: 61
Size: 62
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 3349.6944550000003
Median total errors in population: 1244.0417999999997
Error averages by case: (89.39052680000005 11.998 100.73754560000134 11.37 158.00422239999628 11.479 157.8401423999998 12.101 100.18962979999925 12.884 143.39755419999886 10.899 140.4906949999996 11.118 111.1039939000018 10.541 118.05455659999762 11.944 88.41149519999942 11.257 98.85885970000123 10.528 90.35895999999904 11.339 114.23613300000167 12.8 88.33316480000069 11.809 128.22377120000152 13.854 169.53219680000097 13.181 131.08253119999767 12.352 114.62700399999767 11.383 110.20873920000071 11.442 134.22275520000184 12.982 134.2871494000027 12.316 115.52901119999731 13.186 103.22652800000165 12.249 170.34062299999724 12.375 140.17066640000226 11.449)
Error minima by case: (0.1443 11 4.4612 11 65.1077 11 28.5984 10 0.0567 11 0.3207 10 0.841 9 7.8843 10 0.7367 11 0.0876 11 0.2613 10 0.4263 10 0.1537 11 0.4747 9 33.3276 12 74.6614 12 4.6536 11 15.3956 11 10.3066 11 34.1971 12 39.3638 11 15.4726 12 7.781 11 22.1147 11 1.7612 11)
Average genome size in population (length): 54.604
Average program size in population (points): 55.604
Average percent parens in population: 0.018
Minimum age in population: 21.98046875
Maximum age in population: 27.0338134765625
Average age in population: 25.10286717224121
Median age in population: 25.11803436279297
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 76
Genome diversity (% unique Plush genomes):	 0.745
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 76
Syntactic diversity (% unique Push programs):	 0.745
Total error diversity:				 0.058
Error (vector) diversity:			 0.061
Behavioral diversity:				 0.062
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 25638000
--- Timings ---
Current time: 1529614915637 milliseconds
Total Time:          60.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        28.0 seconds, 46.6%
Fitness Testing:     25.1 seconds, 41.9%
Report:               6.8 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Number IO problem report - generation 18
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (integer_min integer_div tagged_824 integer_flush in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_inc integer_inc integer_min float_pop integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 3529.2897201999995
Median total errors in population: 1244.0417999999997
Error averages by case: (96.91027860000005 11.924 108.16962320000144 11.391 165.65157619999636 11.668 164.37736319999883 12.124 107.90308339999932 12.858 150.2056299999996 10.824 147.4641719999985 11.124 116.34003520000185 10.741 125.88060979999766 11.867 96.25256799999944 11.278 104.82699960000099 10.614 97.7397171999988 11.42 121.61474780000172 12.723 96.55012620000109 11.733 135.18880560000116 13.824 176.1412284000016 13.18 138.8501455999986 12.442 121.98475119999779 11.487 117.89635240000084 11.478 141.19657260000093 12.932 141.2506028000018 12.367 122.50617559999745 13.193 110.9039660000016 12.287 177.14931119999724 12.48 146.81127840000136 11.565)
Error minima by case: (0.1443 11 2.4612 11 63.1077 11 26.4016 11 0.0567 10 1.3207 9 0.159 10 1.1157 10 0.2633 11 0.0876 11 0.2613 8 0.4263 11 11.8463 11 0.4747 11 31.3276 12 74.6614 11 9.6536 12 5.3956 11 5.3066 11 30.1971 12 37.3638 11 15.4726 11 5.781 11 27.1147 12 17.7612 11)
Average genome size in population (length): 55.196
Average program size in population (points): 56.196
Average percent parens in population: 0.018
Minimum age in population: 23.7183837890625
Maximum age in population: 28.85676574707031
Average age in population: 26.54475826263428
Median age in population: 26.55411148071289
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 53
Genome diversity (% unique Plush genomes):	 0.733
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 53
Syntactic diversity (% unique Push programs):	 0.733
Total error diversity:				 0.072
Error (vector) diversity:			 0.076
Behavioral diversity:				 0.077
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 27018025
--- Timings ---
Current time: 1529614918584 milliseconds
Total Time:          63.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        29.5 seconds, 46.8%
Fitness Testing:     26.3 seconds, 41.7%
Report:               7.2 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Number IO problem report - generation 19
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (integer_min integer_div tagged_824 integer_flush in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_inc integer_inc integer_min float_pop integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 3343.1403805999944
Median total errors in population: 1244.0417999999997
Error averages by case: (90.26509100000004 11.683 101.67956320000128 11.441 162.20043779999665 12.202 154.28941119999985 12.115 100.74451639999927 12.79 143.15891279999883 10.573 138.60107599999967 11.141 103.17134100000126 11.359 117.23082799999818 11.633 89.11773519999947 11.287 93.44602240000049 10.78 90.17971719999917 11.589 115.24151820000142 12.465 88.8757840000006 11.499 127.82142640000119 13.779 171.35084240000117 13.192 131.4489167999981 12.665 114.39303679999796 11.698 110.16968240000048 11.524 133.7221494000015 12.692 135.05251320000215 12.638 117.09290159999776 13.226 103.62691600000133 12.287 170.38085239999754 12.67 139.15718880000188 11.794)
Error minima by case: (0.1443 11 2.4612 11 68.1077 11 13.4016 11 0.0567 11 3.3207 10 8.159 10 1.8843 10 0.2633 11 0.0876 11 0.2613 9 0.4263 11 4.8463 10 0.4747 10 32.3276 11 74.6614 12 9.3464 11 12.3956 11 15.6934 11 30.1971 12 42.3638 11 15.4726 11 7.781 11 8.1147 11 10.2388 11)
Average genome size in population (length): 55.961
Average program size in population (points): 56.961
Average percent parens in population: 0.018
Minimum age in population: 25.16595458984375
Maximum age in population: 30.44411468505859
Average age in population: 27.94609080123901
Median age in population: 27.96919250488281
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 79
Genome diversity (% unique Plush genomes):	 0.707
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 79
Syntactic diversity (% unique Push programs):	 0.707
Total error diversity:				 0.095
Error (vector) diversity:			 0.11
Behavioral diversity:				 0.112
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 28417225
--- Timings ---
Current time: 1529614921604 milliseconds
Total Time:          66.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        31.0 seconds, 47.0%
Fitness Testing:     27.4 seconds, 41.6%
Report:               7.4 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Number IO problem report - generation 20
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction float_mult} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (integer_min integer_div tagged_824 float_mult in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_inc integer_inc integer_min float_div float_mod float_pop integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2708.4752283000003
Median total errors in population: 1235.5643999999998
Error averages by case: (64.75290340000004 11.382 77.06893360000029 11.388 139.31534569999698 12.434 132.6595440000013 12.098 75.76170199999942 12.649 117.32477869999782 10.3 115.88308000000029 11.185 72.2769856999998 11.871 93.70266299999905 11.416 61.39316519999963 11.291 62.86170170000054 10.651 63.06876490000049 11.679 90.51452200000027 12.195 62.894126199999484 11.312 101.92927160000058 13.713 147.73271599999975 13.143 107.57361599999868 12.78 88.21660839999826 11.82 86.15580519999955 11.527 108.06947110000114 12.469 109.0473358000018 12.621 92.06424399999877 13.201 79.2707180000012 12.238 145.56506729999782 12.79 113.24215880000189 11.977)
Error minima by case: (0.1443 11 7.4612 11 68.1077 11 35.4016 10 5.9433 11 0.3207 9 1.841 10 3.8843 9 0.2633 10 0.0876 10 0.2613 8 0.4263 9 20.8463 10 0.4747 10 30.3276 12 80.6614 10 40.3464 11 14.3956 11 11.3066 11 28.1971 10 42.3638 11 21.4726 11 10.781 11 41.8853 11 2.7612 11)
Average genome size in population (length): 58.765
Average program size in population (points): 59.765
Average percent parens in population: 0.017
Minimum age in population: 27.07595825195312
Maximum age in population: 31.24482154846191
Average age in population: 29.44394118499756
Median age in population: 29.51166915893555
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 133
Genome diversity (% unique Plush genomes):	 0.685
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 133
Syntactic diversity (% unique Push programs):	 0.685
Total error diversity:				 0.095
Error (vector) diversity:			 0.117
Behavioral diversity:				 0.119
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 29886400
--- Timings ---
Current time: 1529614924705 milliseconds
Total Time:          69.1 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        32.6 seconds, 47.1%
Fitness Testing:     28.7 seconds, 41.5%
Report:               7.8 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Number IO problem report - generation 21
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_stackdepth} {:instruction integer_inc} {:instruction tagged_824} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction integer_mult} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_flush} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction float_stackdepth} {:instruction integer_dec})
Best program: (integer_stackdepth integer_inc tagged_824 float_min integer_stackdepth integer_dup integer_mult tag_integer_484 integer_flush tag_float_527 float_pop in2 integer_max integer_rot float_sub float_pop float_div float_pop float_div float_mod float_pop integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_flush 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer float_stackdepth integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 64
Size: 65
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2734.2684916999974
Median total errors in population: 1233.0417999999997
Error averages by case: (67.57044310000005 11.457 78.77164520000001 11.555 140.4061302999967 12.274 130.3952064000017 11.956 77.92675869999928 12.63 118.0464958999976 10.309 114.92250700000028 11.281 73.93395259999993 11.948 93.1901444999992 11.554 63.03580119999949 11.407 64.15491480000105 10.446 63.594143500000534 11.631 93.39036830000049 12.234 63.64113819999939 11.263 101.95661640000034 13.764 151.59637739999974 13.126 109.27996239999871 12.7 88.03164119999822 11.699 86.49328139999935 11.567 107.8490769000011 12.583 109.99660820000206 12.388 95.83971659999862 13.144 80.11720100000109 12.242 146.5840672999976 12.809 113.60629320000204 11.971)
Error minima by case: (0.1443 11 5.4612 11 70.1077 11 10.4016 11 0.0567 11 0.3207 9 1.841 10 5.8843 10 0.2633 11 0.0876 10 0.2613 8 0.4263 10 14.8463 11 0.4747 10 27.3276 11 74.6614 11 34.3464 12 10.6044 10 10.3066 11 25.1971 11 44.3638 11 15.4726 10 8.781 11 40.8853 11 0.7612 11)
Average genome size in population (length): 58.744
Average program size in population (points): 59.744
Average percent parens in population: 0.017
Minimum age in population: 28.71128845214844
Maximum age in population: 32.75030422210693
Average age in population: 30.97672584438324
Median age in population: 31.05348873138428
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 78
Genome diversity (% unique Plush genomes):	 0.699
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 78
Syntactic diversity (% unique Push programs):	 0.699
Total error diversity:				 0.103
Error (vector) diversity:			 0.115
Behavioral diversity:				 0.116
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 31355150
--- Timings ---
Current time: 1529614927883 milliseconds
Total Time:          72.3 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        34.1 seconds, 47.2%
Fitness Testing:     29.9 seconds, 41.4%
Report:               8.1 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Number IO problem report - generation 22
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_stackdepth} {:instruction integer_inc} {:instruction tagged_824} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction integer_mult} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_mod} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_dup_times} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (integer_stackdepth integer_inc tagged_824 float_min integer_stackdepth integer_dup integer_mult tag_integer_484 integer_flush tag_float_527 float_pop in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_min integer_inc float_dup_times float_mod float_pop integer_inc float_mod float_pop integer_min integer_inc float_dup_times integer_dup_times float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 67
Size: 68
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2619.2062223999956
Median total errors in population: 1233.0417999999997
Error averages by case: (63.984620600000056 11.458 73.99295120000029 11.836 135.30588419999685 12.263 124.23822240000162 11.653 73.44164529999928 12.389 114.14974079999762 10.314 109.39155300000027 11.551 69.18360549999994 11.973 87.52914449999929 11.831 59.18972159999942 11.691 58.43977920000109 10.418 59.24634290000052 11.377 88.95275350000053 12.226 59.45706829999938 11.242 97.62258200000018 13.771 147.5563457999998 13.116 105.8830015999989 12.431 83.5653883999982 11.426 80.79944179999951 11.792 102.55245660000088 12.871 105.53079100000159 12.343 92.36907959999877 13.08 74.38332500000112 12.236 142.8927231999977 12.844 109.46805440000162 11.948)
Error minima by case: (0.1443 10 3.4612 10 73.1077 11 37.4016 11 0.0567 11 0.3207 9 0.841 10 4.8843 10 0.2633 10 0.0876 11 0.2613 9 0.4263 10 4.1537 11 0.4747 10 30.3276 11 74.6614 11 25.6536 11 16.3956 10 3.6934 11 28.1971 12 43.3638 11 15.4726 11 5.219 11 41.8853 12 12.7612 10)
Average genome size in population (length): 57.563
Average program size in population (points): 58.563
Average percent parens in population: 0.017
Minimum age in population: 29.80363464355469
Maximum age in population: 34.24941873550415
Average age in population: 32.54970200109482
Median age in population: 32.59937572479248
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 98
Genome diversity (% unique Plush genomes):	 0.697
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 98
Syntactic diversity (% unique Push programs):	 0.697
Total error diversity:				 0.086
Error (vector) diversity:			 0.101
Behavioral diversity:				 0.101
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 32794400
--- Timings ---
Current time: 1529614930984 milliseconds
Total Time:          75.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        35.6 seconds, 47.3%
Fitness Testing:     31.1 seconds, 41.3%
Report:               8.5 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
;;******************************
;; -*- Number IO problem report - generation 23
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_div} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer})
Best program: (float_shove integer_div tagged_824 integer_flush in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_inc integer_inc float_pop integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 53
Size: 54
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2733.4350836999947
Median total errors in population: 1232.0417999999997
Error averages by case: (66.48413720000005 11.42 75.93794240000034 11.97 141.09413029999658 12.263 129.02219840000157 11.47 77.3709287999994 12.226 121.30821309999777 10.278 113.53821400000027 11.729 74.75721710000028 11.985 91.60808859999888 11.976 65.65736439999944 11.84 64.841382300001 10.397 64.25304810000046 11.223 92.39352200000062 12.183 62.45464419999944 11.221 102.54961640000079 13.811 150.2080388000005 13.109 108.86892319999822 12.264 88.86926759999817 11.293 84.44477679999991 11.939 108.5410769000016 13.012 110.58760820000238 12.313 94.40618919999835 13.08 77.78741200000132 12.227 149.43098489999738 12.868 116.95715880000242 11.966)
Error minima by case: (0.1443 11 5.4612 11 73.1077 10 32.4016 10 0.9433 11 0.3207 9 0.159 10 3.8843 9 1.7367 11 0.0876 10 0.2613 8 0.4263 10 6.8463 11 0.4747 10 30.3276 12 75.6614 12 5.3464 11 11.3956 10 11.3066 11 28.1971 11 43.3638 11 16.4726 10 8.781 11 12.1147 11 1.2388 10)
Average genome size in population (length): 57.176
Average program size in population (points): 58.176
Average percent parens in population: 0.017
Minimum age in population: 31.24061584472656
Maximum age in population: 35.86993551254272
Average age in population: 34.05338906383514
Median age in population: 34.12382769584656
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 93
Genome diversity (% unique Plush genomes):	 0.665
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 93
Syntactic diversity (% unique Push programs):	 0.665
Total error diversity:				 0.084
Error (vector) diversity:			 0.093
Behavioral diversity:				 0.094
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 34223950
--- Timings ---
Current time: 1529614933963 milliseconds
Total Time:          78.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        37.1 seconds, 47.4%
Fitness Testing:     32.3 seconds, 41.2%
Report:               8.8 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 23
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
;;******************************
;; -*- Number IO problem report - generation 24
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_div} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (integer_min integer_div tagged_824 integer_flush in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_inc integer_inc integer_min float_pop integer_min integer_inc float_dup_times float_mod float_dup_times float_mod float_pop integer_inc integer_inc integer_div integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2617.1513512999936
Median total errors in population: 1232.0417999999997
Error averages by case: (62.924137200000054 11.43 72.3370976 11.95 135.64377649999682 12.232 125.06819840000166 11.488 73.7587019999993 12.242 115.64277869999766 10.278 109.72853200000029 11.704 68.9592170999996 11.969 87.67766839999915 11.964 59.856663599999386 11.82 59.00281450000109 10.381 58.43557410000049 11.238 89.03290720000062 12.185 58.13504899999943 11.227 96.81158200000064 13.792 147.10436159999978 13.103 105.37169439999846 12.281 82.91784999999811 11.311 80.63400319999967 11.939 102.77225950000134 12.996 104.94879100000233 12.307 91.1801343999986 13.094 74.02028800000117 12.232 144.11206729999762 12.854 111.1022036000024 11.956)
Error minima by case: (0.1443 10 5.4612 11 70.1077 11 34.4016 9 0.9433 11 0.3207 9 1.841 10 6.8843 9 0.2633 10 0.0876 10 0.2613 9 0.4263 11 15.8463 10 0.4747 10 27.3276 10 7.3386 11 4.3464 11 6.3956 10 11.3066 11 25.1971 11 43.3638 11 16.4726 11 8.781 11 2.1147 11 2.7612 10)
Average genome size in population (length): 57.108
Average program size in population (points): 58.108
Average percent parens in population: 0.017
Minimum age in population: 32.62686729431152
Maximum age in population: 37.28889107704163
Average age in population: 35.46542155253887
Median age in population: 35.56721007823944
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 76
Genome diversity (% unique Plush genomes):	 0.712
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 76
Syntactic diversity (% unique Push programs):	 0.712
Total error diversity:				 0.083
Error (vector) diversity:			 0.099
Behavioral diversity:				 0.099
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 35651825
--- Timings ---
Current time: 1529614937058 milliseconds
Total Time:          81.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        38.7 seconds, 47.5%
Fitness Testing:     33.5 seconds, 41.1%
Report:               9.1 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 24
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
;;******************************
;; -*- Number IO problem report - generation 25
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction print_float} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction print_float} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (integer_min integer_div tagged_824 print_float in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_inc integer_inc print_float integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2802.749177399996
Median total errors in population: 1232.0417999999997
Error averages by case: (70.19145250000005 11.451 79.35226570000037 11.983 143.55333749999687 12.265 131.5621383000014 11.482 80.76773869999941 12.246 122.91357429999776 10.288 116.01201630000028 11.711 77.29994570000039 11.993 94.40072539999898 11.966 68.10128149999946 11.846 67.583832100001 10.409 66.88994110000019 11.23 95.9866065000006 12.187 65.80478169999967 11.22 105.02416400000051 13.792 153.75954010000032 13.112 111.88831439999863 12.286 91.13556709999828 11.31 87.39637849999983 11.972 110.90501590000123 13.019 113.12504710000208 12.318 98.30582329999841 13.081 80.91026160000114 12.242 150.86179859999785 12.862 118.77162950000222 11.975)
Error minima by case: (0.1443 10 4.4612 10 71.1077 3 33.0 2 1.9433 10 0.3207 9 0.841 2 6.8843 10 0.7367 2 0.0876 2 0.2613 2 0.4263 1 7.8463 2 0.4747 2 32.3276 3 2.3386 2 0.6536 2 14.3956 2 7.7763 10 30.1971 3 44.3638 3 17.4726 2 7.781 11 0.8853 2 15.7612 11)
Average genome size in population (length): 57.533
Average program size in population (points): 58.533
Average percent parens in population: 0.017
Minimum age in population: 34.40656757354736
Maximum age in population: 38.84524041414261
Average age in population: 36.90394011551142
Median age in population: 36.90641063451767
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 63
Genome diversity (% unique Plush genomes):	 0.767
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 63
Syntactic diversity (% unique Push programs):	 0.767
Total error diversity:				 0.082
Error (vector) diversity:			 0.099
Behavioral diversity:				 0.099
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 37090550
--- Timings ---
Current time: 1529614940232 milliseconds
Total Time:          84.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        40.4 seconds, 47.7%
Fitness Testing:     34.7 seconds, 41.0%
Report:               9.4 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 25
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 26
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 26
;;******************************
;; -*- Number IO problem report - generation 26
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_inc} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_mod} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_mult} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer})
Best program: (integer_min integer_inc tagged_824 integer_flush in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_inc integer_inc float_mod float_pop integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc float_mult integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 54
Size: 55
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 3027.8578926999962
Median total errors in population: 1232.0417999999997
Error averages by case: (79.82762440000006 11.471 89.03030830000131 11.982 151.44019849999674 12.28 140.89700730000052 11.516 90.3913343999993 12.261 131.46558689999782 10.296 125.59397810000027 11.705 85.86566830000112 11.992 104.06534419999848 11.99 76.87214169999943 11.852 76.15869030000103 10.439 75.53840709999977 11.268 105.36901060000136 12.21 75.64566220000013 11.243 113.3420910000011 13.801 162.42488300000102 13.139 121.3044825999982 12.31 99.68049699999823 11.332 97.14166800000055 11.985 119.22132950000164 13.034 121.34285940000237 12.337 107.50169349999784 13.108 90.67994740000118 12.264 159.25589259999757 12.873 127.12958640000234 11.984)
Error minima by case: (0.1443 11 5.4612 9 72.1077 11 20.4016 9 0.0567 10 0.3207 6 0.159 9 5.8843 9 2.2633 9 0.0876 9 0.2613 9 0.4263 10 0.1537 10 0.4747 10 30.3276 11 0.6614 11 13.6536 9 0.6044 10 11.146 11 28.1971 11 44.3638 11 15.4726 9 8.781 10 2.8853 9 11.7612 11)
Average genome size in population (length): 57.985
Average program size in population (points): 58.985
Average percent parens in population: 0.017
Minimum age in population: 35.8426308631897
Maximum age in population: 40.15325075387955
Average age in population: 38.28460657343268
Median age in population: 38.30319787561893
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 55
Genome diversity (% unique Plush genomes):	 0.764
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 55
Syntactic diversity (% unique Push programs):	 0.764
Total error diversity:				 0.098
Error (vector) diversity:			 0.113
Behavioral diversity:				 0.113
--- Run Statistics ---
Number of program evaluations used so far: 27000
Number of point (instruction) evaluations so far: 38540650
--- Timings ---
Current time: 1529614943413 milliseconds
Total Time:          87.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        41.9 seconds, 47.7%
Fitness Testing:     36.1 seconds, 41.1%
Report:               9.8 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 26
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 27
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 27
;;******************************
;; -*- Number IO problem report - generation 27
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_yankdup} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (integer_min integer_div tagged_824 integer_flush in2 integer_max integer_rot float_sub float_pop float_div integer_flush in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_inc integer_inc integer_min float_pop integer_min integer_inc float_dup_times float_mod float_yankdup integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer float_yankdup in1 print_integer integer_yank integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 66
Size: 67
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2637.0793156999944
Median total errors in population: 1232.0417999999997
Error averages by case: (64.14552970000005 11.438 73.31802439999998 11.974 136.68034569999705 12.259 125.82660000000152 11.482 74.92975869999938 12.237 115.24585449999786 10.288 110.20928100000027 11.719 69.7947624999996 11.991 88.4309316999993 11.979 60.33606519999952 11.845 60.10556310000092 10.413 59.42983710000047 11.239 90.26306090000038 12.191 58.96965619999956 11.231 97.75227160000055 13.793 148.33802299999962 13.109 106.39765519999858 12.284 83.54705879999833 11.305 81.43737579999951 11.951 103.6224711000012 13.02 106.0103358000019 12.303 92.46566179999867 13.067 74.91269700000107 12.249 143.6100672999978 12.88 111.09742760000192 11.956)
Error minima by case: (0.1443 11 3.4612 11 14.8923 11 12.4016 11 0.9433 11 0.3207 10 0.159 10 5.8843 10 0.7367 10 0.0876 10 0.2613 9 0.4263 10 15.8463 11 0.4747 10 32.3276 12 2.6614 12 9.3464 11 12.3956 10 11.3066 11 30.1971 11 40.6362 11 16.4726 10 6.781 11 2.8853 11 3.7612 10)
Average genome size in population (length): 58.254
Average program size in population (points): 59.254
Average percent parens in population: 0.017
Minimum age in population: 37.28583967685699
Maximum age in population: 41.80563412606716
Average age in population: 39.76459039932489
Median age in population: 39.80681958049536
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 51
Genome diversity (% unique Plush genomes):	 0.77
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 51
Syntactic diversity (% unique Push programs):	 0.77
Total error diversity:				 0.086
Error (vector) diversity:			 0.101
Behavioral diversity:				 0.102
--- Run Statistics ---
Number of program evaluations used so far: 28000
Number of point (instruction) evaluations so far: 39997350
--- Timings ---
Current time: 1529614946458 milliseconds
Total Time:          90.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        43.4 seconds, 47.7%
Fitness Testing:     37.3 seconds, 41.1%
Report:              10.1 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 27
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 28
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 28
;;******************************
;; -*- Number IO problem report - generation 28
Test total error for best: 63021.29509999994
Test mean error for best: 31.51065
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 101           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 101           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 101           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 101           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_stackdepth} {:instruction integer_inc} {:instruction tagged_824} {:instruction float_min} {:instruction integer_stackdepth} {:instruction float_tan} {:instruction integer_mult} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 93} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (integer_stackdepth integer_inc tagged_824 float_min integer_stackdepth float_tan integer_mult tag_integer_484 integer_flush tag_float_527 float_pop in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 93 integer_inc integer_min integer_inc integer_fromfloat float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec)
Errors: [2.8557 11 13.4612 12 82.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 13.8843 11 33.7367 12 2.0876 12 2.7387 11 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 49.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 62
Size: 63
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2516.9442987999923
Median total errors in population: 1232.0417999999997
Error averages by case: (59.107848600000054 11.429 68.62178719999955 11.928 130.99488419999727 12.191 122.20519040000143 11.502 69.0693617999995 12.231 112.14170289999794 10.279 106.78941900000027 11.684 64.88659729999941 11.939 83.87956199999972 11.951 54.999802399999545 11.802 54.543417600000836 10.356 53.77290500000038 11.212 85.3092924 12.164 53.8041621999996 11.238 92.47823720000004 13.764 143.77300719999903 13.087 101.53938719999915 12.292 78.18487199999849 11.309 76.85955039999921 11.923 98.19645660000062 13.002 100.54951860000126 12.278 87.6070247999991 13.04 70.200536000001 12.251 140.39303499999795 12.843 107.38674080000155 11.955)
Error minima by case: (0.1443 11 5.4612 11 22.8923 4 20.4016 4 0.9433 10 0.3207 9 1.841 5 5.8843 10 2.2633 4 0.0876 3 0.2613 4 0.4263 2 15.8463 4 0.4747 2 32.3276 4 75.6614 3 22.6536 4 12.3956 4 10.3066 11 30.1971 3 43.3638 3 16.4726 4 8.781 11 40.8853 4 6.2388 11)
Average genome size in population (length): 57.945
Average program size in population (points): 58.945
Average percent parens in population: 0.017
Minimum age in population: 38.33434194326401
Maximum age in population: 43.10406675189734
Average age in population: 41.25817705334723
Median age in population: 41.31836070120335
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 42
Genome diversity (% unique Plush genomes):	 0.802
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 42
Syntactic diversity (% unique Push programs):	 0.802
Total error diversity:				 0.085
Error (vector) diversity:			 0.101
Behavioral diversity:				 0.101
--- Run Statistics ---
Number of program evaluations used so far: 29000
Number of point (instruction) evaluations so far: 41446225
--- Timings ---
Current time: 1529614949524 milliseconds
Total Time:          93.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        44.9 seconds, 47.8%
Fitness Testing:     38.5 seconds, 41.0%
Report:              10.4 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 28
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 29
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 29
;;******************************
;; -*- Number IO problem report - generation 29
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction print_float} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_swap} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (integer_min integer_div tagged_824 print_float in2 integer_max integer_rot float_sub float_pop float_div float_pop integer_inc integer_inc integer_min float_div float_mod float_pop integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_swap float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 57
Size: 58
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2569.0866104999936
Median total errors in population: 1232.0417999999997
Error averages by case: (61.42838540000006 11.426 70.68564079999965 11.984 133.21566879999682 12.228 121.85942720000158 11.449 72.0103617999993 12.223 114.63909939999776 10.261 107.41475800000026 11.721 66.80548159999924 11.973 85.3597747999995 11.967 58.51437919999943 11.846 56.71703060000098 10.372 56.215558200000444 11.208 87.52459980000013 12.16 55.59677669999951 11.203 94.40325440000012 13.797 145.99768439999954 13.099 103.60938719999895 12.267 80.73436639999818 11.284 78.57829559999911 11.948 100.33906240000074 12.98 102.56542720000166 12.268 89.94607959999885 13.057 72.09735400000115 12.223 143.31649379999755 12.854 109.7552632000019 11.959)
Error minima by case: (0.1443 11 4.4612 10 72.1077 3 2.5984 2 0.9433 10 0.6793 9 2.841 2 5.8843 10 0.7367 2 0.0876 2 0.2613 2 0.4263 1 15.8463 2 0.4747 2 28.3276 3 4.3386 2 24.0 2 0.3956 2 10.3066 11 26.1971 3 41.3638 3 16.4726 2 7.781 9 37.0 2 13.7612 10)
Average genome size in population (length): 58.203
Average program size in population (points): 59.203
Average percent parens in population: 0.017
Minimum age in population: 40.49725362658501
Maximum age in population: 44.77334382385015
Average age in population: 42.64400071002916
Median age in population: 42.68934642150998
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 35
Genome diversity (% unique Plush genomes):	 0.779
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 35
Syntactic diversity (% unique Push programs):	 0.779
Total error diversity:				 0.084
Error (vector) diversity:			 0.097
Behavioral diversity:				 0.097
--- Run Statistics ---
Number of program evaluations used so far: 30000
Number of point (instruction) evaluations so far: 42901525
--- Timings ---
Current time: 1529614952646 milliseconds
Total Time:          97.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        46.2 seconds, 47.7%
Fitness Testing:     39.9 seconds, 41.1%
Report:              10.8 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 29
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 30
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 30
;;******************************
;; -*- Number IO problem report - generation 30
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_max} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (integer_min in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_inc integer_inc integer_min float_pop float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_max float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 53
Size: 54
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2661.5606384999946
Median total errors in population: 1232.0417999999997
Error averages by case: (64.29712710000005 11.421 73.62771400000034 11.962 138.10845339999673 12.212 126.96900160000165 11.502 74.9388720999993 12.228 117.35828889999766 10.26 111.38021400000028 11.721 71.75083690000017 11.982 88.84182529999896 11.964 61.62410159999941 11.846 61.81894020000113 10.39 60.90767380000052 11.25 90.33936830000054 12.168 59.921979099999454 11.231 99.39992680000034 13.788 148.62970020000003 13.101 106.21996239999866 12.304 84.81745439999801 11.313 81.77330979999962 11.947 105.00066820000106 12.99 107.68506340000205 12.293 92.7556617999985 13.084 75.18050700000119 12.241 145.0494113999977 12.869 113.11757680000207 11.98)
Error minima by case: (0.1443 11 4.4612 11 71.1077 11 16.4016 11 0.9433 11 0.3207 9 0.159 10 0.8843 10 0.2633 11 0.0876 11 0.2613 8 0.4263 10 4.1537 11 0.4747 10 31.3276 11 75.6614 11 0.3464 11 16.3956 10 10.3066 10 29.1971 11 43.3638 11 16.4726 11 7.781 10 2.8853 10 12.7612 10)
Average genome size in population (length): 58.231
Average program size in population (points): 59.231
Average percent parens in population: 0.017
Minimum age in population: 41.49725362658501
Maximum age in population: 46.13679168187082
Average age in population: 44.0557108625304
Median age in population: 44.1102141533047
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.788
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.788
Total error diversity:				 0.086
Error (vector) diversity:			 0.1
Behavioral diversity:				 0.101
--- Run Statistics ---
Number of program evaluations used so far: 31000
Number of point (instruction) evaluations so far: 44357650
--- Timings ---
Current time: 1529614955721 milliseconds
Total Time:         100.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        47.7 seconds, 47.6%
Fitness Testing:     41.2 seconds, 41.1%
Report:              11.1 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 30
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 31
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 31
;;******************************
;; -*- Number IO problem report - generation 31
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_div} {:instruction float_stackdepth} {:instruction integer_flush} {:instruction in2} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction float_mult} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_add} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (float_shove integer_div float_stackdepth integer_flush in2 tag_integer_484 integer_flush tag_float_527 float_pop in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc float_mult integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_add in1 print_integer integer_yank integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 68
Size: 69
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2572.2633144999945
Median total errors in population: 1232.0417999999997
Error averages by case: (61.43068410000006 11.4 70.68894679999995 11.996 133.72188419999682 12.199 122.95240320000156 11.431 72.15830509999937 12.215 113.69274079999776 10.248 107.68764500000029 11.74 67.07933279999953 11.985 85.69593169999911 11.961 57.920977599999475 11.844 57.080508000000954 10.331 56.41388480000049 11.223 87.59144610000058 12.151 56.80957429999947 11.172 94.84590960000058 13.786 145.99634579999966 13.102 103.80804079999855 12.253 80.88624559999832 11.28 78.74314939999974 11.939 100.78645660000119 12.986 103.04315480000196 12.264 89.88955219999858 13.059 72.20925900000115 12.232 142.3764937999977 12.874 109.11644240000192 11.967)
Error minima by case: (0.1443 10 4.4612 11 70.1077 3 33.0 2 0.9433 10 0.6793 9 0.159 2 7.8843 10 1.2633 2 0.0876 2 0.2613 2 0.4263 1 15.8463 2 0.4747 2 32.3276 3 75.6614 2 24.0 2 17.3956 2 2.6934 11 30.1971 3 42.3638 3 16.4726 2 7.219 10 37.0 2 11.7612 10)
Average genome size in population (length): 58.51
Average program size in population (points): 59.51
Average percent parens in population: 0.017
Minimum age in population: 42.80292993783951
Maximum age in population: 47.44588823150843
Average age in population: 45.49456761315651
Median age in population: 45.55682470509782
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.769
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.769
Total error diversity:				 0.083
Error (vector) diversity:			 0.1
Behavioral diversity:				 0.101
--- Run Statistics ---
Number of program evaluations used so far: 32000
Number of point (instruction) evaluations so far: 45820625
--- Timings ---
Current time: 1529614958768 milliseconds
Total Time:         103.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        49.2 seconds, 47.7%
Fitness Testing:     42.4 seconds, 41.1%
Report:              11.5 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 31
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 32
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 32
;;******************************
;; -*- Number IO problem report - generation 32
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction tagged_824} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction tagged_824} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction integer_mult} {:instruction tag_integer_444} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_add} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank})
Best program: (tagged_824 float_min integer_stackdepth integer_stackdepth integer_inc tagged_824 float_min integer_stackdepth integer_dup integer_mult tag_integer_444 integer_flush tag_float_527 float_pop in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_add 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 63
Size: 64
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2842.998212199995
Median total errors in population: 1232.0417999999997
Error averages by case: (71.65399290000006 11.415 81.01655880000075 11.997 144.48069949999655 12.219 133.58381280000134 11.481 82.53209889999934 12.23 125.19993029999777 10.255 118.48369100000028 11.746 78.51791130000068 11.983 96.57693169999865 11.974 69.73588999999946 11.882 68.61020150000107 10.366 68.02854230000025 11.234 97.47829050000097 12.173 67.6857766999997 11.212 106.07230600000081 13.798 154.84540900000067 13.113 113.89919119999823 12.308 92.51322359999821 11.317 89.47769660000017 11.966 112.01528850000147 13.032 114.10015300000227 12.289 99.4588809999982 13.073 82.84606900000124 12.25 153.30798489999754 12.901 120.66368120000239 12.0)
Error minima by case: (0.1443 11 5.4612 11 70.1077 11 38.4016 11 0.9433 10 0.3207 9 1.841 10 3.1157 10 2.2633 11 0.0876 11 0.2613 8 0.4263 11 4.8463 10 0.4747 10 30.3276 11 1.3386 11 16.6536 12 17.3956 10 11.3066 11 28.1971 12 44.3638 11 16.4726 11 8.781 11 1.8853 12 6.2388 11)
Average genome size in population (length): 58.245
Average program size in population (points): 59.245
Average percent parens in population: 0.017
Minimum age in population: 44.58495703805238
Maximum age in population: 48.68113940395415
Average age in population: 46.9112883559023
Median age in population: 46.92900648992509
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.782
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.782
Total error diversity:				 0.079
Error (vector) diversity:			 0.091
Behavioral diversity:				 0.092
--- Run Statistics ---
Number of program evaluations used so far: 33000
Number of point (instruction) evaluations so far: 47276875
--- Timings ---
Current time: 1529614961876 milliseconds
Total Time:         106.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        50.7 seconds, 47.7%
Fitness Testing:     43.6 seconds, 41.1%
Report:              11.8 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 32
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 33
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 33
;;******************************
;; -*- Number IO problem report - generation 33
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_min} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer})
Best program: (integer_min integer_div tagged_824 integer_flush in2 integer_max integer_rot float_sub float_min float_div float_mod float_pop integer_inc integer_inc integer_min float_pop integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2674.1522421999957
Median total errors in population: 1232.0417999999997
Error averages by case: (64.43140560000006 11.438 73.85094240000001 11.949 138.37523799999664 12.259 127.03839520000169 11.517 75.41981539999925 12.276 118.43681659999757 10.273 111.45657800000029 11.721 71.94133279999983 11.998 89.53203539999883 11.967 62.72480239999936 11.823 62.01207580000115 10.405 61.46088480000052 11.251 90.49990720000083 12.202 60.538795999999394 11.242 99.73794400000062 13.819 148.44036159999968 13.118 107.02761599999829 12.3 85.9808719999981 11.313 82.34577679999983 11.934 105.71527400000147 13.004 107.79197200000225 12.307 92.5211343999984 13.107 75.69041200000126 12.244 146.74941139999754 12.865 114.12344240000245 11.977)
Error minima by case: (0.1443 11 0.4612 11 18.8923 11 16.4016 11 0.0567 11 0.3207 10 0.841 10 6.8843 10 0.7367 11 0.0876 11 0.2613 10 0.4263 11 8.8463 11 0.4747 10 30.3276 12 74.6614 12 10.6536 11 14.3956 11 11.3066 11 30.1971 11 44.6362 11 15.4726 12 3.781 11 28.1147 12 12.7612 11)
Average genome size in population (length): 57.956
Average program size in population (points): 58.956
Average percent parens in population: 0.017
Minimum age in population: 45.80501402169466
Maximum age in population: 50.07029998046346
Average age in population: 48.30381803191453
Median age in population: 48.36655234848149
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.812
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.812
Total error diversity:				 0.077
Error (vector) diversity:			 0.092
Behavioral diversity:				 0.092
--- Run Statistics ---
Number of program evaluations used so far: 34000
Number of point (instruction) evaluations so far: 48725925
--- Timings ---
Current time: 1529614965015 milliseconds
Total Time:         109.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        52.1 seconds, 47.6%
Fitness Testing:     45.0 seconds, 41.1%
Report:              12.2 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 33
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 34
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 34
;;******************************
;; -*- Number IO problem report - generation 34
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_div} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (integer_min integer_div tagged_824 integer_flush in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_inc integer_inc integer_min float_pop integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_div integer_inc float_yankdup in1 print_integer integer_yank integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2548.158396399994
Median total errors in population: 1232.0417999999997
Error averages by case: (59.048317800000056 11.402 68.43240189999935 11.944 134.2917607999966 12.207 122.4279433000016 11.457 69.35864959999935 12.232 113.21500979999765 10.261 106.3947421000003 11.723 67.53091159999927 11.96 84.33084359999948 11.952 57.63835969999946 11.834 57.55819640000102 10.37 56.755195600000505 11.22 85.33236980000002 12.144 53.3952800999995 11.209 95.40000610000044 13.786 143.56889969999924 13.077 101.97627189999876 12.259 81.30249809999808 11.298 77.00224849999903 11.934 101.40042260000095 13.004 103.56228750000189 12.271 87.35272849999888 13.055 70.27367210000129 12.228 141.73083959999752 12.884 109.19753970000215 11.97)
Error minima by case: (0.1443 11 2.4612 11 69.1077 4 33.4016 4 6.9433 11 0.3207 9 0.841 5 5.8843 10 0.2633 4 0.0876 3 0.2613 4 0.4263 2 6.8463 4 0.4747 2 31.3276 4 81.6614 3 14.6536 4 12.3956 4 10.6934 11 29.1971 3 43.3638 3 22.4726 4 0.781 11 19.8853 4 12.2388 10)
Average genome size in population (length): 57.872
Average program size in population (points): 58.872
Average percent parens in population: 0.017
Minimum age in population: 47.10112846270204
Maximum age in population: 51.54886097111739
Average age in population: 49.72645587628509
Median age in population: 49.75510698196013
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.81
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.81
Total error diversity:				 0.083
Error (vector) diversity:			 0.1
Behavioral diversity:				 0.1
--- Run Statistics ---
Number of program evaluations used so far: 35000
Number of point (instruction) evaluations so far: 50172875
--- Timings ---
Current time: 1529614967953 milliseconds
Total Time:         112.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        53.6 seconds, 47.6%
Fitness Testing:     46.2 seconds, 41.1%
Report:              12.5 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 34
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 35
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 35
;;******************************
;; -*- Number IO problem report - generation 35
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_stackdepth} {:instruction integer_inc} {:instruction tagged_660} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction integer_mult} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction print_float} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (integer_stackdepth integer_inc tagged_660 float_min integer_stackdepth integer_dup integer_mult tag_integer_484 integer_flush tag_float_527 float_pop in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_min integer_inc print_float float_mod float_pop integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 61
Size: 62
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2700.114601199995
Median total errors in population: 1232.0417999999997
Error averages by case: (66.17782840000005 11.421 75.51071840000027 11.981 138.66591489999666 12.23 126.65964000000149 11.496 76.91770199999934 12.249 120.0644958999977 10.257 112.20775800000028 11.726 72.67529149999987 11.988 90.39730139999935 11.964 64.29094119999944 11.842 62.63067890000107 10.374 62.149574100000514 11.24 92.2225220000005 12.195 60.841321299999535 11.215 100.13296120000037 13.805 150.35536160000012 13.112 108.41130879999865 12.29 86.59155319999812 11.293 83.51929559999961 11.929 106.02968270000103 12.991 108.20188060000187 12.297 94.53718919999864 13.077 77.03079200000126 12.242 148.4622966999975 12.861 115.39059160000214 11.965)
Error minima by case: (0.1443 10 6.4612 11 10.8923 11 16.4016 11 0.9433 10 1.3207 9 0.841 10 0.1157 10 2.2633 10 0.0876 10 0.2613 9 0.4263 10 5.1537 11 0.4747 10 30.3276 11 3.6614 11 26.6536 12 13.3956 10 6.6934 11 25.8029 11 43.3638 11 16.4726 11 3.219 11 23.8853 11 15.7612 10)
Average genome size in population (length): 57.687
Average program size in population (points): 58.687
Average percent parens in population: 0.017
Minimum age in population: 48.50244557112455
Maximum age in population: 53.10857251717243
Average age in population: 51.14623998268245
Median age in population: 51.19591529277386
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.796
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.796
Total error diversity:				 0.072
Error (vector) diversity:			 0.085
Behavioral diversity:				 0.086
--- Run Statistics ---
Number of program evaluations used so far: 36000
Number of point (instruction) evaluations so far: 51615125
--- Timings ---
Current time: 1529614971032 milliseconds
Total Time:         115.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        55.1 seconds, 47.7%
Fitness Testing:     47.4 seconds, 41.1%
Report:              12.8 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 35
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 36
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 36
;;******************************
;; -*- Number IO problem report - generation 36
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_rot} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_add} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_dup} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (integer_min integer_div tagged_824 integer_flush in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_inc integer_inc integer_min float_rot integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min integer_add float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_dup integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 56
Size: 57
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2695.2978648999947
Median total errors in population: 1232.0417999999997
Error averages by case: (64.18237530000006 11.434 73.39586919999954 11.983 140.05781489999657 12.207 124.72104160000161 11.488 74.2595885999993 12.255 122.1281971999976 10.272 110.46728100000028 11.699 74.61947589999964 11.982 88.51903809999953 11.972 66.10214289999938 11.83 64.35697480000113 10.359 63.94042310000048 11.232 90.32875350000013 12.178 58.879979099999446 11.215 101.71667420000051 13.797 148.49502299999926 13.086 106.61465519999858 12.29 88.35243469999808 11.285 81.59014939999915 11.922 107.65616520000123 12.987 109.73376680000226 12.27 92.51060699999879 13.05 75.0358210000013 12.241 150.32269139999735 12.86 117.45592180000247 11.961)
Error minima by case: (0.1443 11 4.4612 11 10.8923 3 14.4016 2 1.9433 11 3.3207 8 1.159 2 6.8843 10 3.2633 2 0.0876 2 0.2613 2 0.4263 1 16.8463 2 0.4747 2 31.3276 3 76.6614 2 4.6536 2 13.3956 2 14.3066 10 29.1971 3 42.3638 3 17.4726 2 7.781 11 13.8853 2 15.7612 9)
Average genome size in population (length): 58.167
Average program size in population (points): 59.167
Average percent parens in population: 0.017
Minimum age in population: 50.20556960720569
Maximum age in population: 54.47578244356555
Average age in population: 52.56660824629402
Median age in population: 52.58905901150138
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.795
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.795
Total error diversity:				 0.076
Error (vector) diversity:			 0.092
Behavioral diversity:				 0.092
--- Run Statistics ---
Number of program evaluations used so far: 37000
Number of point (instruction) evaluations so far: 53069375
--- Timings ---
Current time: 1529614974031 milliseconds
Total Time:         118.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        56.6 seconds, 47.7%
Fitness Testing:     48.6 seconds, 41.1%
Report:              13.1 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 36
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 37
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 37
;;******************************
;; -*- Number IO problem report - generation 37
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_dup_items} {:instruction integer_div} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_cos} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer})
Best program: (integer_dup_items integer_div tagged_824 integer_flush in2 integer_max integer_rot float_sub float_cos float_div float_mod float_pop integer_inc integer_inc float_pop integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 53
Size: 54
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2716.284891499996
Median total errors in population: 1232.0417999999997
Error averages by case: (66.84137530000005 11.401 76.22194679999994 11.991 139.6871302999967 12.211 127.90781280000166 11.457 77.39198549999928 12.235 120.31185449999761 10.23 113.16196300000028 11.746 73.55575429999988 11.974 90.95093169999924 11.974 64.21916759999931 11.856 63.57472410000117 10.357 62.80875330000051 11.23 92.79229050000053 12.167 61.87379599999935 11.193 101.03161640000047 13.815 150.86173179999957 13.104 108.55557679999883 12.286 87.05301479999808 11.281 84.12676259999922 11.957 106.90607690000105 12.991 109.15260820000192 12.276 95.33782619999863 13.071 77.61025900000129 12.233 148.4712966999975 12.886 115.9746364000021 11.982)
Error minima by case: (0.1443 11 5.4612 11 68.1077 11 5.4016 10 7.9433 10 0.3207 9 0.841 10 5.8843 10 1.2633 10 0.0876 10 0.2613 8 0.4263 10 10.1537 11 0.4747 10 30.3276 11 2.3386 11 22.6536 11 6.3956 10 11.3066 11 28.1971 11 42.3638 11 21.4726 11 8.781 11 0.8853 11 8.7612 10)
Average genome size in population (length): 57.986
Average program size in population (points): 58.986
Average percent parens in population: 0.017
Minimum age in population: 51.28469820448663
Maximum age in population: 55.95108707230247
Average age in population: 53.98518805267347
Median age in population: 54.01849408840644
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.779
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.779
Total error diversity:				 0.079
Error (vector) diversity:			 0.091
Behavioral diversity:				 0.092
--- Run Statistics ---
Number of program evaluations used so far: 38000
Number of point (instruction) evaluations so far: 54519150
--- Timings ---
Current time: 1529614977264 milliseconds
Total Time:         121.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        58.1 seconds, 47.7%
Fitness Testing:     50.0 seconds, 41.1%
Report:              13.5 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 37
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 38
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 38
;;******************************
;; -*- Number IO problem report - generation 38
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction print_float} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (integer_min integer_div tagged_824 print_float in2 integer_max integer_rot float_sub float_pop float_div float_pop integer_inc integer_inc integer_min float_div float_mod float_pop integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_fromfloat in1 print_integer integer_yank integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2761.4501451999936
Median total errors in population: 1232.0417999999997
Error averages by case: (68.48298280000006 11.45 77.74117520000037 11.955 141.39991489999696 12.244 130.63600160000166 11.519 79.45992879999929 12.263 121.10157169999768 10.278 115.08089600000028 11.714 75.41983690000026 11.953 93.30908859999917 11.976 65.91183879999939 11.831 65.60233710000115 10.429 64.78651050000052 11.248 94.50482940000072 12.188 64.43123209999945 11.242 102.8919612000007 13.786 152.24171599999988 13.115 110.91323039999848 12.306 89.00784999999821 11.331 86.13961639999984 11.935 108.79768270000126 13.009 110.96488060000198 12.318 96.55724399999855 13.094 79.53372600000098 12.255 149.38775549999787 12.866 116.88033800000201 11.961)
Error minima by case: (0.1443 11 5.4612 11 18.8923 11 16.4016 10 6.9433 11 0.3207 9 0.841 10 5.8843 10 2.2633 11 0.0876 10 0.2613 9 0.4263 10 0.1537 11 0.4747 10 32.3276 12 81.6614 11 1.6536 12 16.3956 10 10.3066 11 30.1971 11 42.3638 11 22.4726 11 8.781 11 19.1147 11 11.7612 11)
Average genome size in population (length): 57.893
Average program size in population (points): 58.893
Average percent parens in population: 0.017
Minimum age in population: 53.08935264259344
Maximum age in population: 57.70072937842633
Average age in population: 55.44217939443819
Median age in population: 55.4900697166122
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.799
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.799
Total error diversity:				 0.082
Error (vector) diversity:			 0.098
Behavioral diversity:				 0.098
--- Run Statistics ---
Number of program evaluations used so far: 39000
Number of point (instruction) evaluations so far: 55966600
--- Timings ---
Current time: 1529614980308 milliseconds
Total Time:         124.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        59.6 seconds, 47.8%
Fitness Testing:     51.2 seconds, 41.0%
Report:              13.8 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 38
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 39
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 39
;;******************************
;; -*- Number IO problem report - generation 39
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in2} {:instruction integer_inc} {:instruction tagged_824} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_dup} {:instruction integer_mult} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_mod} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction print_float} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (in2 integer_inc tagged_824 float_min integer_stackdepth integer_dup integer_mult tag_integer_484 integer_flush tag_float_527 float_pop in2 float_mod float_pop integer_inc integer_inc integer_min float_pop integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_mod integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times print_float float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2668.765265599994
Median total errors in population: 1232.0417999999997
Error averages by case: (64.85372450000006 11.419 74.22902440000031 11.974 138.01913029999665 12.223 126.66521440000157 11.478 74.52464529999929 12.214 118.47245799999769 10.269 111.56248600000028 11.714 71.91079560000004 11.947 88.99140509999881 11.954 62.31013799999947 11.834 61.901176100001024 10.406 61.1176579000005 11.222 90.8340609000009 12.158 58.341181499999514 11.207 99.56594400000094 13.782 149.1907002 13.1 106.72065519999828 12.28 85.21822359999808 11.317 82.10976259999993 11.964 105.17807690000146 13.016 107.74197200000242 12.284 93.31466179999818 13.07 75.60669700000123 12.257 146.5488378999975 12.881 113.87063640000248 11.996)
Error minima by case: (0.1443 11 6.4612 11 18.8923 4 4.5984 4 0.9433 10 0.3207 9 1.841 5 0.8843 9 2.7367 4 0.0876 3 0.2613 4 0.4263 2 15.8463 4 0.4747 2 30.3276 4 75.6614 3 22.6536 4 11.3956 4 3.6934 11 28.1971 3 43.3638 3 16.4726 4 6.219 11 26.8853 4 13.7612 10)
Average genome size in population (length): 57.88
Average program size in population (points): 58.88
Average percent parens in population: 0.017
Minimum age in population: 54.08935264259344
Maximum age in population: 59.09936839427246
Average age in population: 56.89724269089029
Median age in population: 56.91950022948186
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.805
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.805
Total error diversity:				 0.098
Error (vector) diversity:			 0.118
Behavioral diversity:				 0.118
--- Run Statistics ---
Number of program evaluations used so far: 40000
Number of point (instruction) evaluations so far: 57413700
--- Timings ---
Current time: 1529614983275 milliseconds
Total Time:         127.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        61.0 seconds, 47.8%
Fitness Testing:     52.4 seconds, 41.0%
Report:              14.2 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 39
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 40
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 40
;;******************************
;; -*- Number IO problem report - generation 40
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_div} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_cos} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_add} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (integer_min integer_div tagged_824 integer_flush in2 integer_max integer_rot integer_div tagged_824 integer_flush in2 integer_max integer_rot float_sub float_pop integer_inc integer_inc integer_min float_cos integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan integer_add integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 62
Size: 63
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2723.9769446999944
Median total errors in population: 1232.0417999999997
Error averages by case: (67.26544600000005 11.431 76.91433040000024 11.958 140.658807199997 12.243 127.57942720000156 11.497 77.27326899999936 12.239 120.4468923999977 10.273 113.91148600000028 11.696 74.74567989999993 11.929 91.08472159999904 11.958 63.75066359999948 11.821 64.84277920000102 10.427 63.73682120000048 11.242 92.99044420000075 12.183 60.06720079999948 11.219 101.73563360000055 13.79 151.39474759999993 13.111 107.6104983999987 12.294 87.04615759999844 11.313 84.47184279999972 11.925 107.36448560000098 12.986 110.13251680000187 12.335 96.03440839999847 13.089 77.96160200000106 12.226 148.4206407999978 12.854 116.53744240000191 11.96)
Error minima by case: (0.1443 10 4.4612 10 72.1077 11 26.4016 10 5.9433 10 0.3207 9 1.841 10 0.8843 9 2.2633 9 0.0876 10 0.2613 8 0.4263 10 0.8463 11 0.4747 10 31.3276 11 2.3386 11 5.6536 12 5.3956 10 10.3066 10 29.1971 11 43.3638 11 21.4726 11 7.781 11 0.8853 11 8.7612 10)
Average genome size in population (length): 57.981
Average program size in population (points): 58.981
Average percent parens in population: 0.017
Minimum age in population: 55.66857744748995
Maximum age in population: 60.43917829649763
Average age in population: 58.31535496405702
Median age in population: 58.34355535739178
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.818
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.818
Total error diversity:				 0.092
Error (vector) diversity:			 0.107
Behavioral diversity:				 0.108
--- Run Statistics ---
Number of program evaluations used so far: 41000
Number of point (instruction) evaluations so far: 58863400
--- Timings ---
Current time: 1529614986418 milliseconds
Total Time:         130.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        62.6 seconds, 47.9%
Fitness Testing:     53.6 seconds, 41.0%
Report:              14.5 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 40
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 41
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 41
;;******************************
;; -*- Number IO problem report - generation 41
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction float_mult} {:instruction in2} {:instruction integer_rot} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_max} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction float_swap} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (integer_min integer_div tagged_824 float_mult in2 integer_rot integer_rot float_sub float_pop float_div float_mod float_pop integer_inc integer_inc integer_min float_div float_mod float_pop integer_min integer_inc float_dup_times integer_max float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_dup_times float_tan integer_fromfloat integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup float_swap print_integer integer_yank integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2541.4499973999964
Median total errors in population: 1232.0417999999997
Error averages by case: (60.021106900000056 11.373 69.7770155999997 11.95 133.2429230999969 12.188 123.84237920000166 11.4 69.79198549999933 12.192 112.11732179999774 10.258 108.1893980000003 11.731 66.56075209999966 11.936 85.18455929999936 11.954 55.395262999999446 11.838 56.53630290000103 10.361 55.24040570000053 11.172 86.03436830000038 12.142 52.633429799999405 11.172 94.26405620000021 13.79 144.3687001999995 13.066 101.89296239999871 12.216 79.22624939999818 11.236 78.00340419999932 11.947 99.77940610000107 12.977 102.56730140000184 12.258 88.49266179999876 13.04 71.29600300000133 12.196 139.79969129999776 12.863 107.98035020000184 11.956)
Error minima by case: (0.1443 10 6.4612 10 73.1077 4 16.4016 4 0.0567 10 0.3207 8 0.841 5 3.1157 10 2.2633 4 0.0876 3 0.2613 4 0.4263 2 11.1537 4 0.4747 2 31.3276 4 5.3386 3 11.3464 4 3.3956 4 11.3066 10 29.1971 3 44.3638 3 15.4726 4 9.781 10 2.1147 4 3.2388 11)
Average genome size in population (length): 57.546
Average program size in population (points): 58.546
Average percent parens in population: 0.017
Minimum age in population: 57.13788903741079
Maximum age in population: 61.79345110966187
Average age in population: 59.72673572132115
Median age in population: 59.77984429838898
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.778
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.778
Total error diversity:				 0.088
Error (vector) diversity:			 0.103
Behavioral diversity:				 0.104
--- Run Statistics ---
Number of program evaluations used so far: 42000
Number of point (instruction) evaluations so far: 60302275
--- Timings ---
Current time: 1529614989484 milliseconds
Total Time:         133.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        64.1 seconds, 47.9%
Fitness Testing:     54.8 seconds, 40.9%
Report:              14.8 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 41
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 42
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 42
;;******************************
;; -*- Number IO problem report - generation 42
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_yank} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_add} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction float_max} {:instruction integer_dec})
Best program: (integer_min integer_div tagged_824 integer_flush in2 integer_max integer_rot float_sub float_mod float_pop integer_inc integer_inc integer_min float_pop integer_min integer_inc integer_yank float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_yank integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times integer_fromfloat float_inc integer_inc integer_inc integer_inc integer_inc float_add integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer float_max integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 54
Size: 55
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2408.466180299995
Median total errors in population: 1232.0417999999997
Error averages by case: (55.29448060000006 11.394 64.7514950999993 11.938 126.90440579999687 12.242 117.67969680000157 11.467 66.21141859999935 12.218 106.10832709999778 10.254 102.32173650000028 11.715 59.553937799999304 11.934 80.19009309999932 11.95 50.25351679999947 11.826 49.60069420000098 10.434 48.877136000000476 11.218 81.5895356000003 12.165 50.361630299999526 11.204 87.68459240000018 13.788 140.36488289999912 13.093 98.04429429999853 12.273 73.51875929999822 11.291 73.04624159999896 11.914 93.65621250000106 12.977 95.87471900000196 12.293 83.84610019999897 13.062 66.4256426000012 12.215 134.9456876999977 12.869 101.67794350000203 11.949)
Error minima by case: (0.1443 10 5.4612 11 66.1077 11 35.4016 9 0.0567 10 0.3207 9 0.841 10 5.8843 10 0.2633 10 0.0876 11 0.2613 9 0.4263 9 0.8463 10 0.4747 10 26.3276 10 74.6614 11 12.6536 11 14.3956 10 10.1582 10 24.1971 11 40.3638 11 15.4726 11 8.781 11 30.1147 11 1.7612 10)
Average genome size in population (length): 57.677
Average program size in population (points): 58.677
Average percent parens in population: 0.017
Minimum age in population: 58.62652619115852
Maximum age in population: 63.42895357847738
Average age in population: 61.1586354263688
Median age in population: 61.20822992562535
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.821
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.821
Total error diversity:				 0.09
Error (vector) diversity:			 0.109
Behavioral diversity:				 0.11
--- Run Statistics ---
Number of program evaluations used so far: 43000
Number of point (instruction) evaluations so far: 61744300
--- Timings ---
Current time: 1529614992632 milliseconds
Total Time:         137.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        65.6 seconds, 47.9%
Fitness Testing:     56.1 seconds, 40.9%
Report:              15.2 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 42
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 43
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 43
;;******************************
;; -*- Number IO problem report - generation 43
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_yank} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_add} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_swap} {:instruction print_integer} {:instruction integer_dec})
Best program: (integer_min integer_div tagged_824 integer_flush in2 integer_max integer_rot float_sub float_yank integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc float_pop integer_inc integer_inc integer_min integer_inc integer_add float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup integer_swap print_integer integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2782.312701299995
Median total errors in population: 1232.0417999999997
Error averages by case: (70.97757270000007 11.454 80.16849260000029 11.995 141.1349551999969 12.241 131.22543270000153 11.501 80.8089879999993 12.255 121.4076845999977 10.276 116.51155050000027 11.702 74.85173620000006 11.953 94.8495621999992 11.969 66.32331329999947 11.817 64.90920720000102 10.411 64.49192510000049 11.244 96.94467820000061 12.197 64.01497659999946 11.213 102.48944150000044 13.772 154.93505710000002 13.119 112.87827209999864 12.312 88.68258689999823 11.299 88.02305759999962 11.947 108.345902000001 12.977 110.63843310000188 12.306 99.29977399999875 13.081 81.60732750000105 12.266 149.86970099999775 12.853 116.79207340000188 11.971)
Error minima by case: (0.1443 10 3.4612 11 71.1077 4 27.5984 4 0.9433 10 0.3207 8 0.159 5 1.8843 9 3.2633 4 0.0876 3 0.2613 4 0.4263 2 15.8463 5 0.4747 3 31.3276 4 75.6614 4 7.3464 5 12.3956 3 11.3066 10 29.1971 4 44.3638 3 16.4726 4 6.781 11 10.1147 4 0.7612 11)
Average genome size in population (length): 57.604
Average program size in population (points): 58.604
Average percent parens in population: 0.017
Minimum age in population: 60.02987375233397
Maximum age in population: 64.47999543160086
Average age in population: 62.57752100897519
Median age in population: 62.62416705486498
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.807
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.807
Total error diversity:				 0.092
Error (vector) diversity:			 0.108
Behavioral diversity:				 0.108
--- Run Statistics ---
Number of program evaluations used so far: 44000
Number of point (instruction) evaluations so far: 63184450
--- Timings ---
Current time: 1529614995856 milliseconds
Total Time:         140.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        67.1 seconds, 47.9%
Fitness Testing:     57.5 seconds, 41.0%
Report:              15.5 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 43
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 44
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 44
;;******************************
;; -*- Number IO problem report - generation 44
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_yank} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_yank} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction integer_dup_times} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (integer_min integer_div tagged_824 integer_flush in2 integer_max integer_rot float_sub float_mod float_pop integer_inc integer_inc integer_min float_pop integer_min integer_inc integer_yank float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_yank integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min float_shove integer_dup_times 92 integer_inc integer_min integer_inc float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 57
Size: 58
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2647.4313085999956
Median total errors in population: 1232.0417999999997
Error averages by case: (64.30772830000006 11.415 73.60258160000005 11.961 136.49026629999693 12.199 127.02502710000157 11.457 74.66252679999936 12.235 116.59661469999777 10.275 111.67459030000028 11.711 70.05322179999997 11.923 89.59984979999942 11.979 60.864275899999456 11.838 60.007147600001 10.38 59.375416500000455 11.207 90.48458700000027 12.161 59.26562219999949 11.205 97.66081530000011 13.784 148.2782283999998 13.08 107.1804975999989 12.265 83.81598729999827 11.28 82.28361109999955 11.915 103.6360933000008 12.996 105.8118396000015 12.249 92.36233459999889 13.028 75.54819930000109 12.229 145.07322659999778 12.855 112.20001960000187 11.944)
Error minima by case: (0.1443 10 5.4612 11 71.1077 4 39.4016 4 4.9433 10 0.8828 9 0.7435 5 0.1157 9 1.2633 4 0.0876 3 0.2613 4 0.4263 2 17.8463 4 0.4747 2 31.3276 4 79.6614 3 3.6536 4 18.3956 4 9.0153 9 29.1971 3 44.3638 3 20.4726 4 8.781 10 21.1147 4 3.2388 8)
Average genome size in population (length): 57.749
Average program size in population (points): 58.749
Average percent parens in population: 0.017
Minimum age in population: 61.31804489823844
Maximum age in population: 66.04839545877974
Average age in population: 63.91353185305112
Median age in population: 63.96026827117663
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.796
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.796
Total error diversity:				 0.087
Error (vector) diversity:			 0.1
Behavioral diversity:				 0.1
--- Run Statistics ---
Number of program evaluations used so far: 45000
Number of point (instruction) evaluations so far: 64628225
--- Timings ---
Current time: 1529614998723 milliseconds
Total Time:         143.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        68.5 seconds, 47.8%
Fitness Testing:     58.7 seconds, 41.0%
Report:              15.8 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 44
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 45
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 45
;;******************************
;; -*- Number IO problem report - generation 45
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction float_mult} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_max} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction float_swap} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (integer_min integer_div tagged_824 float_mult in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_inc integer_inc integer_min float_div float_mod float_pop integer_min integer_inc float_dup_times integer_max float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_dup_times float_tan integer_fromfloat integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup float_swap print_integer integer_yank integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2790.7832149999954
Median total errors in population: 1232.0417999999997
Error averages by case: (71.49899290000006 11.414 80.25490959999996 11.995 141.52591489999648 12.198 131.6323616000016 11.415 78.1714367999994 12.217 122.72293029999771 10.282 117.6699630000003 11.698 75.69475429999974 11.959 95.12063649999895 11.954 67.3067147999995 11.813 65.23649480000103 10.362 65.18972150000054 11.191 97.27698310000082 12.135 63.75222009999949 11.159 103.05696120000077 13.767 154.97473180000011 13.067 112.4502232999984 12.237 89.4825531999981 11.266 88.21759789999965 11.972 108.63450360000132 12.945 111.16488060000212 12.257 99.1522631999982 13.048 82.33569700000146 12.216 150.90398489999743 12.84 117.96578410000231 11.983)
Error minima by case: (0.1443 10 2.4612 10 54.1077 3 32.4016 2 0.0567 11 0.6793 9 2.159 2 4.8843 9 1.2633 2 0.0876 2 0.2613 2 0.4263 1 6.8463 2 0.4747 2 13.3276 3 74.6614 2 14.6536 2 0.3956 2 4.3066 11 20.1971 3 21.3638 3 15.4726 2 2.219 11 0.1147 2 15.7612 10)
Average genome size in population (length): 57.285
Average program size in population (points): 58.285
Average percent parens in population: 0.017
Minimum age in population: 62.31804489823844
Maximum age in population: 67.40184690492492
Average age in population: 65.32870544983516
Median age in population: 65.35718214183956
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.781
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.781
Total error diversity:				 0.091
Error (vector) diversity:			 0.11
Behavioral diversity:				 0.111
--- Run Statistics ---
Number of program evaluations used so far: 46000
Number of point (instruction) evaluations so far: 66060400
--- Timings ---
Current time: 1529615001813 milliseconds
Total Time:         146.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        69.9 seconds, 47.8%
Fitness Testing:     60.0 seconds, 41.1%
Report:              16.1 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 45
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 46
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 46
;;******************************
;; -*- Number IO problem report - generation 46
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_dec} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction tag_float_743} {:instruction float_sub} {:instruction float_pop} {:instruction float_swap} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_cos} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction tagged_793} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_min} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction float_add} {:instruction print_integer})
Best program: (integer_min float_dec tagged_824 integer_flush in2 integer_max tag_float_743 float_sub float_pop float_swap float_mod float_pop integer_inc integer_inc integer_min float_pop integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_min integer_inc float_cos float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times tagged_793 float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_min float_tan float_inc integer_inc float_yankdup float_add print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 54
Size: 55
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2505.1221435999946
Median total errors in population: 1232.0417999999997
Error averages by case: (58.663181900000055 11.426 67.96073229999965 11.97 131.52045419999712 12.22 119.28532720000143 11.47 69.3184752999994 12.252 110.9327082999979 10.274 104.64175750000027 11.699 64.56832659999957 11.951 82.64356919999962 11.963 55.54738659999955 11.832 54.65034360000088 10.392 53.95568330000042 11.23 84.87261150000018 12.185 53.825459199999564 11.198 92.4923215000003 13.794 143.48057589999937 13.1 100.87825509999882 12.288 78.37099229999839 11.292 75.7920669999992 11.925 98.38672460000095 12.99 100.68923080000165 12.289 87.32479199999891 13.06 69.34180360000094 12.235 139.64268119999795 12.858 106.4696829000017 11.974)
Error minima by case: (0.1443 11 6.4612 11 73.1077 3 32.4016 2 0.0567 11 0.3207 9 0.159 2 4.8843 10 0.2633 2 0.0876 2 0.2613 2 0.4263 1 14.8463 2 0.4747 2 30.3276 3 12.3386 2 24.0 2 11.3956 2 10.1582 10 28.1971 3 44.3638 3 15.4726 2 9.781 12 9.1147 2 10.7612 10)
Average genome size in population (length): 57.174
Average program size in population (points): 58.174
Average percent parens in population: 0.017
Minimum age in population: 63.31804489823844
Maximum age in population: 68.64511791836674
Average age in population: 66.73367985544839
Median age in population: 66.79963877423786
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.786
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.786
Total error diversity:				 0.085
Error (vector) diversity:			 0.102
Behavioral diversity:				 0.102
--- Run Statistics ---
Number of program evaluations used so far: 47000
Number of point (instruction) evaluations so far: 67489875
--- Timings ---
Current time: 1529615004857 milliseconds
Total Time:         149.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        71.3 seconds, 47.8%
Fitness Testing:     61.3 seconds, 41.0%
Report:              16.5 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 46
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 47
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 47
;;******************************
;; -*- Number IO problem report - generation 47
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction -12} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction float_shove} {:instruction integer_div} {:instruction tagged_824} {:instruction integer_sub} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_max} {:instruction print_float} {:instruction float_sub} {:instruction integer_div} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_sub} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction float_inc} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_pop} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction float_rot})
Best program: (integer_min -12 tagged_824 integer_flush in2 float_shove integer_div tagged_824 integer_sub integer_flush tag_float_527 float_pop in2 integer_max print_float float_sub integer_div float_div float_mod float_pop integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_sub integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min float_inc integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_pop integer_inc float_yankdup in1 print_integer integer_yank float_rot)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 62
Size: 63
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2828.6592532999957
Median total errors in population: 1232.0417999999997
Error averages by case: (72.92784860000006 11.466 82.06026160000035 12.01 142.60246719999705 12.231 132.12026240000148 11.519 83.38526899999923 12.271 123.91083729999781 10.277 118.10298400000029 11.704 76.67840060000047 11.962 96.46998759999919 11.987 68.68569199999942 11.845 66.73451340000099 10.405 66.21092500000047 11.251 98.71244420000056 12.214 66.75286399999953 11.223 103.98469560000026 13.794 156.6010704 13.116 114.47153759999857 12.313 90.41137449999827 11.294 89.78458799999952 11.942 109.80466470000104 12.994 112.18817060000175 12.308 101.18140839999869 13.073 83.4268580000011 12.257 152.20275229999785 12.859 118.970376300002 11.962)
Error minima by case: (0.1443 11 2.4612 11 72.1077 11 15.4016 11 0.9433 10 0.6793 9 0.841 10 5.8843 9 0.7367 11 0.0876 9 0.2613 8 0.4263 10 5.8463 9 0.4747 10 31.3276 10 6.3386 12 1.6536 11 7.3956 10 0.6934 11 29.1971 10 44.3638 11 16.4726 11 5.781 11 5.1147 11 8.2388 9)
Average genome size in population (length): 57.241
Average program size in population (points): 58.241
Average percent parens in population: 0.017
Minimum age in population: 64.31804489823844
Maximum age in population: 70.26329728148846
Average age in population: 68.10601849755437
Median age in population: 68.13094630704997
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.8
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.8
Total error diversity:				 0.084
Error (vector) diversity:			 0.096
Behavioral diversity:				 0.097
--- Run Statistics ---
Number of program evaluations used so far: 48000
Number of point (instruction) evaluations so far: 68921000
--- Timings ---
Current time: 1529615007848 milliseconds
Total Time:         152.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        72.8 seconds, 47.8%
Fitness Testing:     62.5 seconds, 41.0%
Report:              16.9 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 47
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 48
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 48
;;******************************
;; -*- Number IO problem report - generation 48
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_724} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_yank} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction integer_min} {:instruction float_add} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_add} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_swap} {:instruction print_integer} {:instruction integer_dec})
Best program: (integer_min integer_div tagged_724 integer_flush in2 integer_max integer_rot float_sub float_yank integer_max integer_rot float_sub float_pop float_div float_mod integer_min float_add float_sub float_pop float_div float_mod float_pop integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc float_pop integer_inc integer_inc integer_min integer_inc integer_add float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup integer_swap print_integer integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 64
Size: 65
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 3029.0897128999945
Median total errors in population: 1232.0417999999997
Error averages by case: (79.82152970000006 11.479 88.6559556000004 12.025 151.49539019999668 12.278 138.57346720000083 11.521 90.2225524999993 12.265 133.55034749999808 10.272 124.63114300000028 11.72 86.45263200000049 11.971 103.11525089999883 11.994 78.65226879999938 11.85 76.5682620000011 10.454 76.17738740000014 11.261 105.52821270000084 12.206 72.70097719999974 11.219 113.30576440000081 13.788 163.01844060000028 13.124 121.08580559999845 12.314 100.00474809999811 11.325 96.39550779999988 11.956 119.09829950000127 13.025 121.3658050000022 12.311 107.97204539999827 13.086 90.03907700000127 12.274 161.31889929999755 12.873 128.77394350000236 11.975)
Error minima by case: (0.1443 10 5.4612 11 3.1077 11 5.5984 9 0.9433 11 0.6793 9 0.841 10 6.8843 9 0.2633 10 0.0876 10 0.2613 9 0.4263 11 15.8463 11 0.4747 10 11.3276 10 75.6614 11 6.3464 11 2.3956 9 6.3066 11 18.1971 11 19.3638 11 16.4726 11 0.781 10 0.8853 11 0.2388 10)
Average genome size in population (length): 57.199
Average program size in population (points): 58.199
Average percent parens in population: 0.017
Minimum age in population: 65.31804489823844
Maximum age in population: 71.64148885506204
Average age in population: 69.51659988911383
Median age in population: 69.52601256870571
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.809
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.809
Total error diversity:				 0.083
Error (vector) diversity:			 0.098
Behavioral diversity:				 0.098
--- Run Statistics ---
Number of program evaluations used so far: 49000
Number of point (instruction) evaluations so far: 70351125
--- Timings ---
Current time: 1529615010835 milliseconds
Total Time:         155.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        74.3 seconds, 47.9%
Fitness Testing:     63.6 seconds, 41.0%
Report:              17.2 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 48
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 49
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 49
;;******************************
;; -*- Number IO problem report - generation 49
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction integer_div} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction integer_flush} {:instruction integer_div} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_dec} {:instruction integer_min} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_min} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction float_add} {:instruction print_integer})
Best program: (integer_min integer_min integer_div in2 integer_max integer_rot integer_min integer_div tagged_824 integer_flush integer_div tagged_824 integer_flush in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_inc integer_inc integer_min float_dec integer_min float_pop integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_min float_tan float_inc integer_inc float_yankdup float_add print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 64
Size: 65
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2988.084449199994
Median total errors in population: 1232.0417999999997
Error averages by case: (77.64150070000005 11.46 86.77858700000056 11.984 150.12872019999693 12.247 138.83484680000083 11.498 87.33093939999935 12.269 131.77241259999795 10.308 124.03908600000027 11.684 85.15534280000051 11.95 102.45131139999899 11.98 75.95612919999944 11.825 75.01446740000098 10.439 74.38338080000007 11.228 103.27467550000065 12.18 71.5762053999998 11.227 112.04434760000063 13.784 160.54701500000033 13.089 118.97231719999856 12.281 98.22846909999828 11.304 95.45869239999999 11.957 117.96450460000123 12.992 120.08586880000199 12.314 105.62132989999856 13.065 88.29693770000108 12.248 159.07990929999772 12.851 127.31845240000209 11.965)
Error minima by case: (0.1443 10 3.4612 11 72.1077 3 14.4016 2 0.0567 11 3.3207 9 4.159 2 5.8843 10 0.2633 2 0.0876 2 0.2613 2 0.4263 1 14.8463 2 0.4747 2 26.3276 3 8.3386 2 5.3464 2 12.3956 2 3.6934 10 24.1971 3 43.3638 3 15.4726 2 6.219 11 5.1147 2 16.7612 10)
Average genome size in population (length): 57.217
Average program size in population (points): 58.217
Average percent parens in population: 0.017
Minimum age in population: 68.0067836363674
Maximum age in population: 72.90001722855754
Average age in population: 71.02054627205482
Median age in population: 71.062342103016
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.809
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.809
Total error diversity:				 0.085
Error (vector) diversity:			 0.1
Behavioral diversity:				 0.101
--- Run Statistics ---
Number of program evaluations used so far: 50000
Number of point (instruction) evaluations so far: 71781600
--- Timings ---
Current time: 1529615014170 milliseconds
Total Time:         158.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        75.7 seconds, 47.8%
Fitness Testing:     65.1 seconds, 41.1%
Report:              17.5 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 49
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 50
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 50
;;******************************
;; -*- Number IO problem report - generation 50
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction integer_div} {:instruction tagged_824} {:instruction float_rot} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction tagged_547} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_dup_times} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_shove} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer})
Best program: (float_shove integer_div tagged_824 float_rot in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_inc integer_inc float_pop integer_min integer_inc float_dup_times tagged_547 float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min integer_dup_times float_mod 92 integer_inc integer_min integer_inc float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan integer_shove integer_inc float_yankdup in1 print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 52
Size: 53
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2809.2074015999947
Median total errors in population: 1232.0417999999997
Error averages by case: (70.77348640000005 11.41 80.40001120000008 11.941 142.53170979999686 12.26 135.139379200001 11.507 81.8452689999994 12.222 122.80558199999788 10.281 119.1460800000003 11.712 76.73822740000004 11.922 97.15724279999874 11.955 66.0863962999995 11.818 66.83861860000086 10.466 66.15128970000012 11.233 96.40675160000086 12.181 63.76438219999953 11.239 104.34431640000061 13.781 153.05042479999986 13.112 112.70253759999851 12.279 90.84853069999825 11.323 89.53941839999999 11.954 110.41629890000132 13.025 112.27216330000196 12.329 97.85846319999844 13.097 82.66415600000123 12.25 150.85597449999773 12.884 118.7166916000021 11.973)
Error minima by case: (0.1443 10 4.4612 10 16.8923 11 14.4016 11 0.0567 11 0.3207 9 0.159 10 5.8843 10 3.2633 9 0.0876 9 0.2613 8 0.4263 10 14.8463 11 0.4747 9 32.3276 11 9.3386 11 34.3464 12 12.3956 10 10.3066 10 30.1971 11 42.6362 11 15.4726 11 7.781 11 6.1147 11 16.7612 10)
Average genome size in population (length): 56.832
Average program size in population (points): 57.832
Average percent parens in population: 0.018
Minimum age in population: 69.19725170048184
Maximum age in population: 74.40855754594281
Average age in population: 72.43515462498473
Median age in population: 72.46062661694538
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.82
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.82
Total error diversity:				 0.096
Error (vector) diversity:			 0.119
Behavioral diversity:				 0.12
--- Run Statistics ---
Number of program evaluations used so far: 51000
Number of point (instruction) evaluations so far: 73202625
--- Timings ---
Current time: 1529615017290 milliseconds
Total Time:         161.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        77.2 seconds, 47.7%
Fitness Testing:     66.5 seconds, 41.1%
Report:              18.0 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 50
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 51
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 51
;;******************************
;; -*- Number IO problem report - generation 51
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction print_float} {:instruction float_yank} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_yank} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction print_float} {:instruction float_inc} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_add} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer} {:instruction float_add} {:instruction integer_dec})
Best program: (integer_min integer_div tagged_824 print_float float_yank integer_max integer_rot float_sub float_yank integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc float_pop integer_inc integer_inc print_float float_inc integer_flush tag_float_527 float_pop in2 integer_max integer_rot float_sub float_pop float_div integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_yankdup integer_min integer_inc integer_add float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc print_integer float_add integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 82
Size: 83
Percent parens: 0.012
--- Population Statistics ---
Average total errors in population: 2712.3959537999954
Median total errors in population: 1232.0417999999997
Error averages by case: (66.07977930000006 11.407 75.37426669999999 11.976 140.46679029999655 12.263 127.76050800000154 11.453 76.80692889999936 12.201 120.17108219999774 10.262 112.64512150000029 11.73 74.03744189999983 11.933 90.6539893999989 11.982 64.82907879999946 11.853 64.216045900001 10.442 63.5072675000005 11.214 92.03953370000075 12.172 59.43588329999952 11.215 101.73467840000097 13.781 149.92528469999982 13.096 108.33086949999822 12.251 87.83552849999806 11.276 83.60877459999959 11.944 107.65725600000162 13.011 109.92426200000239 12.315 94.17795639999837 13.057 77.03617560000127 12.225 148.5061787999975 12.885 115.73027190000252 11.961)
Error minima by case: (0.1443 10 3.4612 10 68.1077 11 6.5984 9 0.0567 10 3.2277 9 2.159 10 6.8843 10 0.7367 10 0.0876 10 0.2613 9 0.4263 9 14.8463 10 0.4747 10 31.3276 11 6.3386 11 6.3464 11 7.3956 9 2.6934 10 29.1971 11 42.3638 11 15.4726 11 6.781 10 7.8853 10 9.7612 10)
Average genome size in population (length): 56.821
Average program size in population (points): 57.821
Average percent parens in population: 0.018
Minimum age in population: 70.19725170048184
Maximum age in population: 75.89887979218437
Average age in population: 73.82768008075784
Median age in population: 73.87442488207456
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.787
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.787
Total error diversity:				 0.1
Error (vector) diversity:			 0.118
Behavioral diversity:				 0.118
--- Run Statistics ---
Number of program evaluations used so far: 52000
Number of point (instruction) evaluations so far: 74623325
--- Timings ---
Current time: 1529615020257 milliseconds
Total Time:         164.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        78.6 seconds, 47.7%
Fitness Testing:     67.7 seconds, 41.1%
Report:              18.2 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 51
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 52
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 52
;;******************************
;; -*- Number IO problem report - generation 52
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction integer_add} {:instruction integer_yankdup} {:instruction integer_max} {:instruction integer_inc} {:instruction float_shove} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_min} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction float_frominteger} {:instruction integer_dec})
Best program: (integer_min integer_div tagged_824 integer_add integer_yankdup integer_max integer_inc float_shove tagged_824 integer_flush in2 integer_max integer_min float_sub float_pop integer_inc integer_inc integer_min integer_mod integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc float_shove integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer float_frominteger integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2184.050461399994
Median total errors in population: 1232.0417999999997
Error averages by case: (46.05379810000006 11.394 55.55078279999964 11.914 118.08228429999744 12.213 109.44078080000152 11.46 57.151851499999424 12.201 98.11890989999787 10.233 93.9098750000003 11.716 50.71763039999994 11.899 71.5650859000003 11.953 40.92669319999968 11.797 40.45694020000074 10.388 38.97365790000041 11.197 72.56198689999972 12.143 40.69787789999967 11.206 77.84116839999969 13.781 131.6849281999982 13.079 89.36519759999926 12.245 63.98789399999873 11.273 64.2225645999987 11.886 83.93401890000032 12.985 86.96088420000099 12.255 74.63911379999969 13.045 57.432689000000785 12.229 127.05800269999817 12.834 93.45584520000106 11.934)
Error minima by case: (0.1443 11 6.4612 9 10.8923 11 8.4016 11 0.0567 11 0.3207 9 1.841 10 5.8843 9 2.2633 10 0.0876 10 0.2613 9 0.4263 10 10.8463 11 0.4747 10 29.3276 12 74.6614 12 4.6536 11 12.3956 9 10.3066 11 27.1971 10 36.6362 11 15.4726 12 9.781 12 7.1147 10 13.7612 11)
Average genome size in population (length): 56.648
Average program size in population (points): 57.648
Average percent parens in population: 0.018
Minimum age in population: 71.19725170048184
Maximum age in population: 77.33965385973976
Average age in population: 75.2375077928156
Median age in population: 75.27904327383249
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.803
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.803
Total error diversity:				 0.083
Error (vector) diversity:			 0.1
Behavioral diversity:				 0.1
--- Run Statistics ---
Number of program evaluations used so far: 53000
Number of point (instruction) evaluations so far: 76039700
--- Timings ---
Current time: 1529615023187 milliseconds
Total Time:         167.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        80.0 seconds, 47.7%
Fitness Testing:     68.8 seconds, 41.1%
Report:              18.6 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 52
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 53
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 53
;;******************************
;; -*- Number IO problem report - generation 53
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_inc} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction float_mod} {:instruction float_yankdup} {:instruction integer_inc} {:instruction integer_inc} {:instruction -79.46067950493989} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_mult} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_add} {:instruction integer_inc} {:instruction integer_shove} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (integer_min integer_inc tagged_824 integer_flush in2 float_mod float_yankdup integer_inc integer_inc -79.46067950493989 integer_inc integer_inc float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_mod float_inc integer_inc integer_swap integer_inc integer_mult float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan integer_add integer_inc integer_shove in1 print_integer integer_yank integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2771.618017799997
Median total errors in population: 1232.0417999999997
Error averages by case: (69.23350880000005 11.429 78.68828010000014 11.982 141.9970127999964 12.246 130.0284360000015 11.469 79.65017679999934 12.233 121.87740409999772 10.276 115.64091640000028 11.703 75.84946400000005 11.953 93.52104259999875 11.96 66.54483279999951 11.842 66.006894400001 10.448 65.18082740000055 11.217 94.954931200001 12.186 64.07055909999951 11.206 103.24483920000081 13.798 152.94018760000006 13.104 110.70463919999834 12.271 89.15678079999815 11.27 86.6578635999998 11.954 109.02769120000141 12.986 111.49572240000218 12.313 97.45114809999824 13.077 80.1412724000013 12.231 149.93589399999738 12.874 117.62369280000223 11.966)
Error minima by case: (0.1443 10 1.4612 10 74.1077 6 13.4016 5 0.0567 10 0.3207 9 1.841 5 4.1157 10 0.2633 5 0.0876 4 0.2613 5 0.4263 5 0.8463 5 0.4747 5 28.3276 6 8.6614 5 11.3464 5 7.6044 5 11.3066 10 26.1971 6 43.3638 5 15.4726 5 4.781 11 6.1147 5 15.7612 9)
Average genome size in population (length): 56.555
Average program size in population (points): 57.555
Average percent parens in population: 0.018
Minimum age in population: 73.1501679821796
Maximum age in population: 78.76094665234197
Average age in population: 76.62241075325429
Median age in population: 76.67394115543993
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.773
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.773
Total error diversity:				 0.1
Error (vector) diversity:			 0.119
Behavioral diversity:				 0.119
--- Run Statistics ---
Number of program evaluations used so far: 54000
Number of point (instruction) evaluations so far: 77453750
--- Timings ---
Current time: 1529615026265 milliseconds
Total Time:         170.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        81.6 seconds, 47.8%
Fitness Testing:     70.1 seconds, 41.0%
Report:              18.9 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 53
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 54
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 54
;;******************************
;; -*- Number IO problem report - generation 54
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction float_yankdup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_rot} {:instruction integer_flush} {:instruction in2} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_sub} {:instruction integer_yankdup} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_yankdup} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction float_sub} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (integer_min integer_div tagged_824 integer_flush in2 float_yankdup integer_rot float_sub float_pop float_rot integer_flush in2 integer_sub integer_rot float_sub integer_yankdup float_mod float_pop integer_inc integer_inc integer_min float_pop integer_min integer_inc float_dup_times float_mod float_yankdup integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer float_sub in1 print_integer integer_yank integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 65
Size: 66
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2665.2745984999956
Median total errors in population: 1232.0417999999997
Error averages by case: (64.53611700000006 11.416 73.79856320000026 12.006 137.65223799999706 12.238 125.09583680000154 11.475 75.0690421999993 12.22 119.19089239999771 10.257 110.64948600000028 11.717 71.57094440000029 11.943 88.74672159999919 11.973 63.50920399999943 11.858 61.52546280000106 10.418 61.1691478000005 11.228 90.35382940000048 12.197 59.10311889999947 11.201 99.09694400000042 13.815 148.27039319999975 13.099 106.4176159999989 12.291 85.59494879999826 11.276 81.81368239999951 11.949 105.01427400000091 12.997 107.17697200000173 12.305 92.6952987999987 13.055 75.30891600000095 12.235 147.4726407999979 12.884 114.40830800000185 11.981)
Error minima by case: (0.1443 11 1.4612 11 17.8923 11 15.4016 10 0.0567 10 0.3207 9 0.159 10 5.8843 10 1.2633 11 0.0876 11 0.2613 8 0.4263 10 7.8463 11 0.4747 10 27.3276 11 1.3386 11 13.6536 11 2.3956 10 8.3066 11 25.1971 11 43.3638 11 15.4726 11 4.781 11 1.8853 11 13.7612 11)
Average genome size in population (length): 56.742
Average program size in population (points): 57.742
Average percent parens in population: 0.018
Minimum age in population: 75.31392912646719
Maximum age in population: 80.1013758858951
Average age in population: 78.01465130008589
Median age in population: 78.07150602620557
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.768
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.768
Total error diversity:				 0.088
Error (vector) diversity:			 0.103
Behavioral diversity:				 0.104
--- Run Statistics ---
Number of program evaluations used so far: 55000
Number of point (instruction) evaluations so far: 78872500
--- Timings ---
Current time: 1529615029563 milliseconds
Total Time:         173.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        83.1 seconds, 47.8%
Fitness Testing:     71.5 seconds, 41.1%
Report:              19.2 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 54
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 55
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 55
;;******************************
;; -*- Number IO problem report - generation 55
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction float_yankdup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_rot} {:instruction integer_flush} {:instruction in2} {:instruction integer_sub} {:instruction integer_rot} {:instruction float_sub} {:instruction integer_yankdup} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_yankdup} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction float_sub} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (integer_min integer_div tagged_824 integer_flush in2 float_yankdup integer_rot float_sub float_pop float_rot integer_flush in2 integer_sub integer_rot float_sub integer_yankdup float_mod float_pop integer_inc integer_inc integer_min float_pop integer_min integer_inc float_dup_times float_mod float_yankdup integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer float_sub in1 print_integer integer_yank integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 65
Size: 66
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2826.6101875999943
Median total errors in population: 1232.0417999999997
Error averages by case: (73.04563500000005 11.443 81.61688750000042 11.991 143.13459179999694 12.239 132.3664592000014 11.492 82.72949589999929 12.229 124.9949302999978 10.28 118.90703000000028 11.7 77.56598570000027 11.923 95.9321399999991 11.976 68.3304895999995 11.83 66.58293480000094 10.444 66.15817980000044 11.247 98.19576330000083 12.175 65.54565079999955 11.188 104.5459784000007 13.761 156.4496549000002 13.105 113.4447518999983 12.309 90.35899549999831 11.303 89.31868019999986 11.938 109.31091230000128 12.975 112.93615300000197 12.291 100.80217559999845 13.054 82.88924160000106 12.252 152.40509639999777 12.86 119.06237410000216 11.975)
Error minima by case: (0.1443 10 2.4612 11 69.1077 3 5.5984 10 0.0567 9 4.3207 9 14.159 10 4.8843 10 4.2633 9 0.0876 2 0.2613 2 0.4263 1 14.8463 10 0.4747 2 28.3276 3 11.3386 10 0.3464 11 12.6044 2 8.6934 10 26.1971 3 43.3638 3 15.4726 11 0.781 11 7.1147 2 13.7612 11)
Average genome size in population (length): 56.947
Average program size in population (points): 57.947
Average percent parens in population: 0.017
Minimum age in population: 77.24589260784686
Maximum age in population: 81.44559091406028
Average age in population: 79.40299521667832
Median age in population: 79.43594683658858
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.797
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.797
Total error diversity:				 0.1
Error (vector) diversity:			 0.118
Behavioral diversity:				 0.118
--- Run Statistics ---
Number of program evaluations used so far: 56000
Number of point (instruction) evaluations so far: 80296400
--- Timings ---
Current time: 1529615032921 milliseconds
Total Time:         177.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        84.6 seconds, 47.7%
Fitness Testing:     72.9 seconds, 41.1%
Report:              19.6 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 55
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 56
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 56
;;******************************
;; -*- Number IO problem report - generation 56
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_max} {:instruction float_add} {:instruction float_yankdup} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction float_min} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_mult} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_rot} {:instruction float_rot} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (integer_min integer_div tagged_824 tag_float_527 float_pop in2 integer_max float_add float_yankdup float_pop float_div float_mod float_pop integer_min integer_inc float_dup_times float_mod float_pop float_min integer_inc integer_inc integer_inc float_mult integer_inc integer_inc float_tan float_inc integer_inc integer_inc integer_inc integer_min float_rot float_rot 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc print_integer integer_yank integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 53
Size: 54
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2576.077279299994
Median total errors in population: 1232.0417999999997
Error averages by case: (60.88201320000005 11.416 70.15015529999968 11.953 134.53786399999674 12.239 122.15272870000152 11.487 71.63828639999933 12.228 114.87585749999768 10.272 107.29925060000028 11.688 68.00871449999956 11.909 85.32180049999931 11.969 59.05512159999942 11.823 57.98515320000109 10.437 57.27893630000051 11.22 86.94673000000027 12.186 55.62420039999951 11.214 95.64118440000041 13.797 145.2574419999994 13.087 103.22302699999875 12.283 81.93748829999808 11.287 78.31881199999948 11.925 101.65040130000104 13.0 103.76619530000185 12.299 89.1519809999989 13.057 71.77142470000118 12.233 143.3476042999976 12.858 110.42590680000212 11.962)
Error minima by case: (0.1443 10 3.4612 11 72.1077 11 3.5984 9 1.9433 10 0.0022 8 0.159 9 6.8843 9 2.2633 10 0.0876 10 0.2613 8 0.4263 9 14.9648 10 0.4747 10 29.3276 10 13.3386 11 36.3464 12 13.3956 9 10.3066 9 27.1971 10 44.3638 9 16.6616 11 6.781 10 10.1147 10 12.7612 10)
Average genome size in population (length): 57.134
Average program size in population (points): 58.134
Average percent parens in population: 0.017
Minimum age in population: 78.24589260784686
Maximum age in population: 82.69437698656117
Average age in population: 80.80366438221519
Median age in population: 80.86299026480737
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.819
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.819
Total error diversity:				 0.097
Error (vector) diversity:			 0.115
Behavioral diversity:				 0.116
--- Run Statistics ---
Number of program evaluations used so far: 57000
Number of point (instruction) evaluations so far: 81724900
--- Timings ---
Current time: 1529615035905 milliseconds
Total Time:         180.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        86.1 seconds, 47.7%
Fitness Testing:     74.1 seconds, 41.1%
Report:              20.1 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 56
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 57
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 57
;;******************************
;; -*- Number IO problem report - generation 57
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction in2} {:instruction integer_max} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction tag_float_761} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_sub} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_mod} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dup_times} {:instruction print_float} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (integer_min integer_div tagged_824 integer_flush in2 integer_max integer_rot in2 integer_max in2 integer_max integer_rot float_sub tag_float_761 float_pop float_div float_mod float_pop float_mod float_pop integer_inc integer_inc integer_min float_pop integer_min integer_inc integer_sub float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_mod integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc float_pop integer_inc float_dup_times print_float float_inc integer_inc float_yankdup in1 print_integer integer_yank integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 64
Size: 65
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2748.132664999994
Median total errors in population: 1232.0417999999997
Error averages by case: (69.06802320000006 11.425 77.84937080000032 11.955 140.20937639999624 12.204 129.0549600000017 11.502 78.88920999999921 12.214 121.15996819999746 10.257 115.2094400000003 11.687 74.86956420000013 11.911 92.58689979999839 11.944 65.88534959999934 11.811 64.84497220000121 10.425 64.2581998000005 11.218 94.73975160000127 12.133 61.9408585999994 11.211 101.96432320000135 13.752 152.41674760000018 13.068 109.74949129999777 12.276 88.20215759999779 11.297 85.77090450000006 11.942 107.45051810000206 12.969 110.014061600003 12.301 96.79084539999768 13.058 79.8814780000014 12.234 149.1325583999972 12.828 116.58963490000305 11.982)
Error minima by case: (0.1443 10 1.5388 10 13.8923 3 7.5984 5 0.9433 11 1.3207 9 0.159 5 5.8843 10 1.7367 5 0.0876 2 0.2613 2 0.4263 1 0.1537 5 0.4747 3 29.3276 3 3.3386 5 0.3464 4 12.3956 2 9.6934 10 27.1971 3 39.6362 3 16.4726 5 1.781 11 0.1147 2 3.7612 10)
Average genome size in population (length): 56.98
Average program size in population (points): 57.98
Average percent parens in population: 0.017
Minimum age in population: 79.9683285570967
Maximum age in population: 83.99044683454848
Average age in population: 82.23320609438446
Median age in population: 82.25717540856606
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.803
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.803
Total error diversity:				 0.101
Error (vector) diversity:			 0.124
Behavioral diversity:				 0.125
--- Run Statistics ---
Number of program evaluations used so far: 58000
Number of point (instruction) evaluations so far: 83149675
--- Timings ---
Current time: 1529615038836 milliseconds
Total Time:         183.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        87.4 seconds, 47.7%
Fitness Testing:     75.3 seconds, 41.1%
Report:              20.4 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 57
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 58
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 58
;;******************************
;; -*- Number IO problem report - generation 58
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_flush} {:instruction integer_inc} {:instruction tagged_824} {:instruction float_min} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_yank} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_mod} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_cos} {:instruction integer_fromfloat} {:instruction float_div} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_cos} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction -8})
Best program: (integer_flush integer_inc tagged_824 float_min integer_flush in2 integer_max integer_yank float_sub float_pop float_div float_mod float_pop integer_inc integer_inc float_mod integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_cos integer_fromfloat float_div integer_inc integer_inc integer_inc integer_inc float_cos integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer integer_yank -8)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 55
Size: 56
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2659.760270499993
Median total errors in population: 1232.0417999999997
Error averages by case: (66.11823240000005 11.437 75.50134860000044 11.989 135.76723799999678 12.217 126.6454592000015 11.508 76.1809854999994 12.228 117.43289239999777 10.254 112.72303000000028 11.705 69.84036589999943 11.937 90.18367109999899 11.963 60.71182519999954 11.823 59.52675400000095 10.397 58.936622000000455 11.23 92.02068740000094 12.161 59.69854959999958 11.199 97.21727160000079 13.752 150.72362320000005 13.094 106.93779119999841 12.308 82.60359989999844 11.292 83.57144179999979 11.919 102.72927400000145 12.971 105.39033580000203 12.293 95.00848369999822 13.038 76.5184607000011 12.259 145.23406409999777 12.835 112.74626320000225 11.983)
Error minima by case: (0.1443 10 5.4612 11 71.1077 6 33.4016 5 1.9433 11 0.3207 9 1.841 5 5.8843 10 1.2633 5 0.0876 4 0.2613 5 0.4263 3 12.8463 5 0.4747 4 31.3276 5 10.3386 5 8.3464 5 12.3956 4 11.3066 10 29.1971 5 45.3638 5 17.4726 5 8.781 11 6.8853 4 2.7612 11)
Average genome size in population (length): 56.845
Average program size in population (points): 57.845
Average percent parens in population: 0.018
Minimum age in population: 80.9683285570967
Maximum age in population: 85.6171039935129
Average age in population: 83.64194367249107
Median age in population: 83.66752051700242
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.81
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.81
Total error diversity:				 0.085
Error (vector) diversity:			 0.107
Behavioral diversity:				 0.108
--- Run Statistics ---
Number of program evaluations used so far: 59000
Number of point (instruction) evaluations so far: 84570900
--- Timings ---
Current time: 1529615042090 milliseconds
Total Time:         186.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        89.0 seconds, 47.8%
Fitness Testing:     76.6 seconds, 41.1%
Report:              20.7 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 58
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 59
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 59
;;******************************
;; -*- Number IO problem report - generation 59
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_stackdepth} {:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_rot} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_mod} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_yankdup} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction float_sub} {:instruction in1})
Best program: (integer_min integer_stackdepth integer_min integer_div tagged_824 integer_flush in2 integer_max integer_rot float_sub float_pop float_div float_mod float_pop integer_inc integer_inc integer_min float_rot integer_min integer_inc float_dup_times float_mod float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_mod integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc integer_yankdup float_tan float_inc integer_inc float_yankdup in1 print_integer float_sub in1)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2556.124446899994
Median total errors in population: 1232.0417999999997
Error averages by case: (60.64365380000006 11.409 69.85725279999964 11.989 132.80299189999687 12.228 121.19164000000146 11.451 71.3968153999994 12.218 115.05249589999778 10.239 107.07516800000028 11.737 66.30420889999927 11.945 84.99872159999921 11.991 58.49144519999945 11.86 56.09883990000101 10.407 55.595247500000454 11.212 86.6982146000004 12.165 54.59099839999955 11.196 93.68323720000049 13.813 144.83903879999949 13.099 102.94969439999885 12.265 80.31434439999822 11.263 78.03722959999939 11.935 99.67465370000097 12.986 102.02351860000171 12.276 89.02318919999855 13.05 71.46616400000126 12.229 143.47583789999766 12.864 110.05084520000194 11.962)
Error minima by case: (0.1443 10 4.4612 11 67.1077 11 10.4016 11 5.9433 11 1.6793 9 4.841 10 4.8843 10 10.7367 11 0.0876 11 0.2613 9 0.4263 10 12.8463 9 0.4747 10 31.3276 10 2.3386 11 2.3464 11 7.3956 10 7.3066 11 29.1971 11 41.3638 11 21.4726 11 7.781 11 0.8853 11 8.2388 11)
Average genome size in population (length): 56.861
Average program size in population (points): 57.861
Average percent parens in population: 0.018
Minimum age in population: 81.9683285570967
Maximum age in population: 87.41742162419756
Average age in population: 85.11896437671115
Median age in population: 85.15803225468176
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.768
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.768
Total error diversity:				 0.08
Error (vector) diversity:			 0.099
Behavioral diversity:				 0.099
--- Run Statistics ---
Number of program evaluations used so far: 60000
Number of point (instruction) evaluations so far: 85992600
--- Timings ---
Current time: 1529615045212 milliseconds
Total Time:         189.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        90.6 seconds, 47.8%
Fitness Testing:     77.8 seconds, 41.0%
Report:              21.1 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 59
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 60
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 60
;;******************************
;; -*- Number IO problem report - generation 60
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_swap} {:instruction float_mult} {:instruction tagged_824} {:instruction integer_flush} {:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction float_dup_items} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_mult} {:instruction tag_float_761} {:instruction float_pop} {:instruction integer_max} {:instruction float_mod} {:instruction float_pop} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_sub} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer})
Best program: (integer_swap float_mult tagged_824 integer_flush integer_min integer_div tagged_824 float_dup_items in2 integer_max integer_rot integer_mult tag_float_761 float_pop integer_max float_mod float_pop float_mod float_pop integer_inc integer_inc integer_min integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_sub float_inc integer_inc integer_inc integer_inc float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 54
Size: 55
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2788.565836499995
Median total errors in population: 1232.0417999999997
Error averages by case: (71.96657330000005 11.443 81.20663960000036 11.978 140.9127696999968 12.209 132.40951520000158 11.492 81.34889279999925 12.222 121.86119079999754 10.269 118.06554250000028 11.688 74.88500499999985 11.915 95.53990509999885 11.965 66.07635529999932 11.822 64.7944323000012 10.412 64.2477899000005 11.218 97.46516950000071 12.148 63.78153509999942 11.214 102.18661530000037 13.76 154.93664269999988 13.078 112.89689129999846 12.281 88.07184609999797 11.287 88.8684503999998 11.936 107.76118020000115 12.976 110.42988310000203 12.297 100.11811179999836 13.037 82.44746550000127 12.24 149.58548429999757 12.829 117.03894970000222 11.947)
Error minima by case: (0.1443 10 5.4612 10 70.1077 3 17.4016 2 1.0567 9 0.3207 8 0.159 2 5.8843 9 0.7367 2 0.0876 2 0.2613 2 0.4263 1 4.8463 2 0.0361 2 25.3276 3 1.3386 2 16.6536 2 8.3956 2 11.1571 10 23.1971 3 43.3638 3 14.4726 2 8.781 11 0.8853 2 3.7612 8)
Average genome size in population (length): 57.009
Average program size in population (points): 58.009
Average percent parens in population: 0.018
Minimum age in population: 82.9683285570967
Maximum age in population: 88.44343395764238
Average age in population: 86.51611102525256
Median age in population: 86.54391561853303
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.807
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.807
Total error diversity:				 0.104
Error (vector) diversity:			 0.127
Behavioral diversity:				 0.127
--- Run Statistics ---
Number of program evaluations used so far: 61000
Number of point (instruction) evaluations so far: 87417900
--- Timings ---
Current time: 1529615048134 milliseconds
Total Time:         192.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        92.0 seconds, 47.8%
Fitness Testing:     79.0 seconds, 41.0%
Report:              21.4 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 60
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 61
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 61
;;******************************
;; -*- Number IO problem report - generation 61
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_frominteger} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_div} {:instruction float_mod} {:instruction float_dec} {:instruction float_sub} {:instruction float_dup} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_sub} {:instruction float_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction integer_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction tagged_178} {:instruction float_pop} {:instruction float_div} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer})
Best program: (float_frominteger in2 integer_max integer_rot float_sub float_pop float_div float_mod float_dec float_sub float_dup float_div float_mod float_pop integer_inc integer_inc integer_min float_pop integer_min integer_inc float_dup_times float_mod float_pop integer_inc integer_inc integer_min integer_inc float_dup_times float_sub float_inc integer_inc integer_inc integer_inc integer_min float_shove integer_mod 92 integer_inc integer_min integer_inc float_dup_times integer_inc integer_inc integer_inc integer_inc integer_min integer_inc tagged_178 float_pop float_div integer_inc float_yankdup in1 print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 54
Size: 55
Percent parens: 0.018
--- Population Statistics ---
Average total errors in population: 2874.3283792999946
Median total errors in population: 1232.0417999999997
Error averages by case: (73.79744600000005 11.454 82.98771840000033 11.984 145.26126869999686 12.233 134.64823040000138 11.496 83.46283599999931 12.246 125.74636469999774 10.295 119.80075800000027 11.689 80.00314270000005 11.937 98.10472159999892 11.974 70.74331319999942 11.836 69.98029190000109 10.448 69.25221570000028 11.241 99.27367380000076 12.186 68.79170679999962 11.207 106.95499560000044 13.787 156.771102 13.102 115.14007359999873 12.291 93.1577619999982 11.319 91.11368239999977 11.945 112.77350010000103 13.008 115.11069780000186 12.322 101.66751799999852 13.066 84.59491600000119 12.249 153.51267309999764 12.859 121.50977080000196 11.994)
Error minima by case: (0.1443 11 2.4612 11 14.8923 4 12.4016 4 0.9433 11 2.3207 9 0.159 5 5.8843 10 1.7367 4 0.0876 3 0.2613 4 0.4263 2 2.8463 4 0.4747 2 31.3276 4 1.3386 3 8.6536 4 6.3956 4 5.3066 11 29.1971 3 40.6362 3 16.4726 4 5.781 11 1.8853 4 14.7612 11)
Average genome size in population (length): 57.099
Average program size in population (points): 58.099
Average percent parens in population: 0.018
Minimum age in population: 85.49453596938329
Maximum age in population: 89.94476895119224
Average age in population: 87.9503722625499
Median age in population: 87.97134366869226
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.818
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.818
Total error diversity:				 0.097
Error (vector) diversity:			 0.111
Behavioral diversity:				 0.111
--- Run Statistics ---
Number of program evaluations used so far: 62000
Number of point (instruction) evaluations so far: 88845500
--- Timings ---
Current time: 1529615051173 milliseconds
Total Time:         195.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        93.4 seconds, 47.8%
Fitness Testing:     80.3 seconds, 41.1%
Report:              21.7 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 61
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 62
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 62
;;******************************
;; -*- Number IO problem report - generation 62
Test total error for best: 63020.15049999994
Test mean error for best: 31.51008
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 65            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 90            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 52            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 81            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 53            
Correct output: 32.7611922962  | Program output: 93            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction integer_min} {:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction float_rot} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_min} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer})
Best program: (float_sub integer_min integer_min integer_div tagged_824 integer_flush in2 integer_max integer_rot float_sub float_rot float_div float_mod float_pop integer_min integer_inc integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_min integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 64.3207 10 57.841 12 12.8843 12 33.7367 12 2.0876 12 1.7387 10 0.5737 11 30.8463 12 0.4747 11 42.3276 14 90.6614 13 50.3464 12 28.6044 11 24.6934 12 49.1971 13 50.3638 12 31.4726 13 16.781 12 93.8853 13 60.2388 12]
Total: 1232.0417999999997
Mean: 24.640837
Genome size: 47
Size: 48
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 2776.7460502999947
Median total errors in population: 1232.0417999999997
Error averages by case: (70.51443590000005 11.428 79.7928691999998 11.981 141.52473469999677 12.228 131.71282880000163 11.478 81.19543909999929 12.238 120.50474999999766 10.276 116.88996300000028 11.72 75.48877239999958 11.953 95.13898489999929 11.979 65.6674832999994 11.833 65.69346330000107 10.43 64.14709910000049 11.244 96.19359790000027 12.188 63.72681819999944 11.204 102.13078100000007 13.79 153.80973179999958 13.13 112.46019119999859 12.285 88.26720809999807 11.307 88.10914939999931 11.948 107.98250250000086 12.986 111.13270040000194 12.29 98.29982619999882 13.102 81.54482100000133 12.244 148.61826349999754 12.862 116.09663540000207 11.979)
Error minima by case: (0.1443 10 4.4612 11 70.1077 3 9.4016 10 0.0567 10 0.3207 9 0.159 10 5.8843 9 3.2633 10 0.0876 2 0.2613 2 0.4263 1 5.1537 10 0.4747 10 30.3276 3 8.3386 12 0.3464 11 13.3956 2 11.3066 11 28.1971 3 43.3638 3 15.4726 11 7.781 10 5.1147 2 12.7612 11)
Average genome size in population (length): 56.491
Average program size in population (points): 57.491
Average percent parens in population: 0.018
Minimum age in population: 86.49453596938329
Maximum age in population: 91.29483071068357
Average age in population: 89.31944545489338
Median age in population: 89.36075042443758
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.8
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.8
Total error diversity:				 0.1
Error (vector) diversity:			 0.12
Behavioral diversity:				 0.121
--- Run Statistics ---
Number of program evaluations used so far: 63000
Number of point (instruction) evaluations so far: 90257925
--- Timings ---
Current time: 1529615054400 milliseconds
Total Time:         198.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        95.0 seconds, 47.8%
Fitness Testing:     81.6 seconds, 41.0%
Report:              22.1 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 62
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 63
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 63
;;******************************
;; -*- Number IO problem report - generation 63
Test total error for best: 62993.279299999944
Test mean error for best: 31.49664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction print_float} {:instruction in2} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div tagged_573 print_float in2 tag_integer_484 integer_flush tag_float_527 float_pop in2 float_dup integer_rot float_sub float_dup_times tag_float_527 float_pop in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc float_dec integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_fromfloat integer_inc float_dup_times float_inc integer_inc print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 63.3207 11 57.841 12 12.8843 12 33.7367 12 1.0876 11 1.7387 10 1.5737 11 30.8463 12 0.4747 11 43.3276 14 90.6614 13 50.3464 12 29.6044 11 24.6934 12 50.1971 13 50.3638 12 31.4726 13 16.781 12 92.8853 12 59.2388 11]
Total: 1230.0417999999997
Mean: 24.600836
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2730.3565877999945
Median total errors in population: 1232.0417999999997
Error averages by case: (68.28857860000005 11.444 77.17934810000004 11.993 140.03030219999673 12.264 126.92127120000153 11.49 78.72127739999932 12.23 121.02149529999771 10.263 113.06946300000028 11.69 73.75239699999987 11.951 91.51437649999889 11.971 65.30957939999944 11.848 63.79609480000103 10.435 63.26330560000048 11.243 94.19769450000085 12.178 61.051817199999476 11.195 101.00576520000077 13.785 152.45397069999996 13.09 109.46753849999841 12.306 87.45323809999816 11.292 84.82623829999979 11.939 106.85858730000129 12.981 109.24603620000224 12.334 96.69753779999806 13.049 78.49422360000128 12.239 149.50661149999755 12.867 116.17583980000231 11.977)
Error minima by case: (0.1443 10 2.4612 11 73.1077 11 15.4016 10 0.0567 10 0.6408 9 0.841 9 5.1157 10 3.7367 10 0.0876 10 0.2613 9 0.4263 10 14.8463 10 0.4747 10 25.3276 10 6.3386 10 3.3464 11 7.3956 9 7.3066 10 23.1971 10 43.3638 11 15.4726 11 5.781 8 14.1147 11 13.7612 11)
Average genome size in population (length): 56.857
Average program size in population (points): 57.857
Average percent parens in population: 0.018
Minimum age in population: 87.99312505943966
Maximum age in population: 92.60154988004948
Average age in population: 90.70784153902964
Median age in population: 90.72363852328284
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.818
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.818
Total error diversity:				 0.101
Error (vector) diversity:			 0.115
Behavioral diversity:				 0.115
--- Run Statistics ---
Number of program evaluations used so far: 64000
Number of point (instruction) evaluations so far: 91679475
--- Timings ---
Current time: 1529615057461 milliseconds
Total Time:         201.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        96.5 seconds, 47.8%
Fitness Testing:     82.8 seconds, 41.0%
Report:              22.4 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 63
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 64
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 64
;;******************************
;; -*- Number IO problem report - generation 64
Test total error for best: 62993.279299999944
Test mean error for best: 31.49664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction float_swap} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div float_swap integer_flush in2 integer_max integer_rot float_sub tag_integer_484 integer_flush tag_float_527 float_pop in2 float_dup integer_rot float_sub float_dup_times tag_float_527 float_pop in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc float_dec integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_fromfloat integer_inc float_dup_times float_inc integer_inc print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 63.3207 11 57.841 12 12.8843 12 33.7367 12 1.0876 11 1.7387 10 1.5737 11 30.8463 12 0.4747 11 43.3276 14 90.6614 13 50.3464 12 29.6044 11 24.6934 12 50.1971 13 50.3638 12 31.4726 13 16.781 12 92.8853 12 59.2388 11]
Total: 1230.0417999999997
Mean: 24.600836
Genome size: 61
Size: 62
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2917.556902099994
Median total errors in population: 1232.0417999999997
Error averages by case: (76.02550940000005 11.45 85.08766520000046 12.013 146.61262929999685 12.243 136.04519320000117 11.507 85.69482619999935 12.24 127.06387419999773 10.293 121.36071970000027 11.698 80.97920550000049 11.965 99.80367949999864 11.966 73.3046128999995 11.838 71.08637390000104 10.43 70.52757280000019 11.233 101.60661700000104 12.181 69.76175739999972 11.206 108.15428780000083 13.772 158.81223720000057 13.1 117.48315719999833 12.286 95.53882509999815 11.317 92.95650899999988 11.968 113.99820150000139 13.002 116.40831460000219 12.311 103.89277039999817 13.064 86.55014840000132 12.264 156.03557609999774 12.853 122.56663860000221 12.0)
Error minima by case: (0.1443 10 4.4612 10 70.1077 4 16.4016 4 2.9433 11 0.3207 8 0.159 5 6.8843 10 1.2633 4 0.0876 3 0.2613 2 0.4263 2 17.8463 5 0.4747 3 29.3276 4 5.3386 4 24.0 4 8.3956 4 10.3066 10 27.1971 4 43.3638 4 18.4726 3 7.781 11 8.1147 4 15.2388 11)
Average genome size in population (length): 56.954
Average program size in population (points): 57.954
Average percent parens in population: 0.018
Minimum age in population: 88.99312505943966
Maximum age in population: 93.90439338700419
Average age in population: 92.14245759117445
Median age in population: 92.1773120774517
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 6
Genome diversity (% unique Plush genomes):	 0.824
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 6
Syntactic diversity (% unique Push programs):	 0.824
Total error diversity:				 0.094
Error (vector) diversity:			 0.112
Behavioral diversity:				 0.113
--- Run Statistics ---
Number of program evaluations used so far: 65000
Number of point (instruction) evaluations so far: 93103450
--- Timings ---
Current time: 1529615060396 milliseconds
Total Time:         204.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        97.8 seconds, 47.8%
Fitness Testing:     84.1 seconds, 41.1%
Report:              22.8 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 64
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 65
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 65
;;******************************
;; -*- Number IO problem report - generation 65
Test total error for best: 62993.279299999944
Test mean error for best: 31.49664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction print_float} {:instruction in2} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div tagged_573 print_float in2 tag_integer_484 integer_flush tag_float_527 float_pop in2 float_dup integer_rot float_sub float_dup_times tag_float_527 float_pop in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc float_dec integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_fromfloat integer_inc float_dup_times float_inc integer_inc print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 63.3207 11 57.841 12 12.8843 12 33.7367 12 1.0876 11 1.7387 10 1.5737 11 30.8463 12 0.4747 11 43.3276 14 90.6614 13 50.3464 12 29.6044 11 24.6934 12 50.1971 13 50.3638 12 31.4726 13 16.781 12 92.8853 12 59.2388 11]
Total: 1230.0417999999997
Mean: 24.600836
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2553.9623437999944
Median total errors in population: 1232.0417999999997
Error averages by case: (60.77712710000006 11.422 70.07471399999963 11.947 132.67388419999725 12.231 122.33161600000142 11.493 70.70775869999946 12.22 113.60545799999804 10.271 107.38337300000029 11.685 66.16894439999949 11.936 85.35535189999982 11.963 57.598627199999626 11.778 55.99598540000082 10.398 55.645263400000424 11.215 86.7820609 12.164 55.58420079999965 11.209 93.83590960000011 13.78 144.82370019999928 13.064 103.03034799999897 12.26 80.19461919999853 11.267 78.30192299999912 11.914 99.82145660000073 12.974 102.05615480000131 12.31 89.01466179999919 13.045 71.70994500000089 12.227 142.03895259999797 12.803 108.9363080000017 11.938)
Error minima by case: (0.1443 10 1.4612 11 71.1077 4 15.4016 4 0.9433 9 0.3207 9 0.841 5 6.8843 10 1.2633 4 0.0876 3 0.2613 4 0.4263 2 15.8463 4 0.4747 2 30.3276 4 2.3386 3 3.3464 4 7.3956 4 8.3066 10 28.1971 3 44.3638 3 16.4726 4 4.781 11 0.8853 4 13.7612 10)
Average genome size in population (length): 57.391
Average program size in population (points): 58.391
Average percent parens in population: 0.017
Minimum age in population: 91.23134685995771
Maximum age in population: 95.60546350469613
Average age in population: 93.53388091478517
Median age in population: 93.53827410955769
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.792
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.792
Total error diversity:				 0.105
Error (vector) diversity:			 0.121
Behavioral diversity:				 0.121
--- Run Statistics ---
Number of program evaluations used so far: 66000
Number of point (instruction) evaluations so far: 94538250
--- Timings ---
Current time: 1529615063598 milliseconds
Total Time:         208.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        99.2 seconds, 47.7%
Fitness Testing:     85.5 seconds, 41.1%
Report:              23.1 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 65
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 66
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 66
;;******************************
;; -*- Number IO problem report - generation 66
Test total error for best: 62993.279299999944
Test mean error for best: 31.49664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction tag_float_788} {:instruction in2} {:instruction float_mult} {:instruction -30.767573913910155} {:instruction integer_inc} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_inc} {:instruction integer_inc} {:instruction float_yankdup} {:instruction in1} {:instruction print_integer} {:instruction float_sub} {:instruction in1} {:instruction print_integer} {:instruction integer_yank} {:instruction integer_dec})
Best program: (integer_min tag_float_788 in2 float_mult -30.767573913910155 integer_inc integer_max integer_rot float_sub tag_integer_484 integer_flush tag_float_527 float_pop in2 float_dup integer_rot float_sub float_dup_times tag_float_527 float_pop in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc float_dec integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_min integer_inc float_dup_times float_tan float_inc integer_inc float_yankdup in1 print_integer float_sub in1 print_integer integer_yank integer_dec)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 63.3207 11 57.841 12 12.8843 12 33.7367 12 1.0876 11 1.7387 10 1.5737 11 30.8463 12 0.4747 11 43.3276 14 90.6614 13 50.3464 12 29.6044 11 24.6934 12 50.1971 13 50.3638 12 31.4726 13 16.781 12 92.8853 12 59.2388 11]
Total: 1230.0417999999997
Mean: 24.600836
Genome size: 70
Size: 71
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2484.5500899999915
Median total errors in population: 1232.0417999999997
Error averages by case: (59.41056000000005 11.447 68.50479599999949 11.961 128.85542239999688 12.219 119.05904960000156 11.511 69.99836179999934 12.231 110.0084901999977 10.304 105.14107600000028 11.679 61.880373599999295 11.92 83.16535459999977 11.968 54.00769439999941 11.767 51.76740000000104 10.402 51.481323000000394 11.25 85.50398499999984 12.163 53.27646579999951 11.209 89.61976729999996 13.761 144.30832999999913 13.093 101.61038719999875 12.292 75.85242319999834 11.312 76.38690879999903 11.896 95.5205312000008 12.964 97.91622960000174 12.309 88.01796999999904 13.045 69.92623000000104 12.245 138.80137229999775 12.778 104.90058800000209 11.903)
Error minima by case: (0.1443 10 6.4612 10 70.1077 8 5.5984 10 0.9433 11 0.3207 9 1.841 9 3.8843 10 1.2633 10 0.0876 10 0.2613 9 0.4263 10 2.8463 10 0.4747 10 26.3276 11 6.3386 11 16.6536 11 7.3956 9 4.6934 10 24.1971 11 43.3638 11 16.4726 11 3.219 11 32.8853 11 3.2388 10)
Average genome size in population (length): 57.166
Average program size in population (points): 58.166
Average percent parens in population: 0.017
Minimum age in population: 92.23134685995771
Maximum age in population: 97.22048962328002
Average age in population: 94.94749292254562
Median age in population: 94.96856818670273
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.776
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.776
Total error diversity:				 0.109
Error (vector) diversity:			 0.124
Behavioral diversity:				 0.124
--- Run Statistics ---
Number of program evaluations used so far: 67000
Number of point (instruction) evaluations so far: 95967500
--- Timings ---
Current time: 1529615066627 milliseconds
Total Time:         211.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       100.7 seconds, 47.7%
Fitness Testing:     86.7 seconds, 41.1%
Report:              23.5 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 66
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 67
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 67
;;******************************
;; -*- Number IO problem report - generation 67
Test total error for best: 62993.279299999944
Test mean error for best: 31.49664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction float_swap} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div float_swap integer_flush in2 integer_max integer_rot float_sub tag_integer_484 integer_flush tag_float_527 float_pop in2 float_dup integer_rot float_sub float_dup_times tag_float_527 float_pop in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc float_dec integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_fromfloat integer_inc float_dup_times float_inc integer_inc print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 63.3207 11 57.841 12 12.8843 12 33.7367 12 1.0876 11 1.7387 10 1.5737 11 30.8463 12 0.4747 11 43.3276 14 90.6614 13 50.3464 12 29.6044 11 24.6934 12 50.1971 13 50.3638 12 31.4726 13 16.781 12 92.8853 12 59.2388 11]
Total: 1230.0417999999997
Mean: 24.600836
Genome size: 61
Size: 62
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2832.476487399994
Median total errors in population: 1232.0417999999997
Error averages by case: (71.19552750000005 11.456 80.27280550000017 11.992 144.54410099999677 12.226 131.4669957000016 11.509 80.9936466999994 12.244 125.47412089999773 10.415 117.0969247000003 11.686 78.85201840000016 11.96 95.35799829999931 11.977 70.41256279999946 11.682 68.75031740000111 10.409 68.68230030000021 11.268 96.98099190000016 12.203 65.14804809999949 11.211 106.37688970000036 13.769 154.89411270000028 13.103 112.96286339999875 12.287 92.81447649999797 11.332 88.37860459999945 11.924 112.25511980000108 12.993 114.264292200002 12.313 99.26216199999882 13.056 81.88651630000129 12.271 153.4468205999975 12.726 120.82827040000217 11.866)
Error minima by case: (0.1443 10 3.4612 11 73.1077 4 26.5984 4 1.9433 9 0.6793 8 2.841 5 5.8843 9 1.2633 4 0.0876 3 0.2613 2 0.4263 2 10.8463 5 0.4747 3 26.3276 4 76.6614 4 4.6536 4 7.3956 4 8.4574 11 24.1971 4 43.3638 4 17.4726 3 6.781 10 4.1147 4 0.2388 10)
Average genome size in population (length): 57.587
Average program size in population (points): 58.587
Average percent parens in population: 0.017
Minimum age in population: 93.86112926401945
Maximum age in population: 99.01781402801403
Average age in population: 96.28695707782099
Median age in population: 96.32033435928903
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 51
Genome diversity (% unique Plush genomes):	 0.776
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 51
Syntactic diversity (% unique Push programs):	 0.776
Total error diversity:				 0.111
Error (vector) diversity:			 0.139
Behavioral diversity:				 0.14
--- Run Statistics ---
Number of program evaluations used so far: 68000
Number of point (instruction) evaluations so far: 97407475
--- Timings ---
Current time: 1529615069674 milliseconds
Total Time:         214.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       102.1 seconds, 47.7%
Fitness Testing:     88.0 seconds, 41.1%
Report:              23.8 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 67
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 68
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 68
;;******************************
;; -*- Number IO problem report - generation 68
Test total error for best: 62993.279299999944
Test mean error for best: 31.49664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction float_swap} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div float_swap integer_flush in2 integer_max integer_rot float_sub tag_integer_484 integer_flush tag_float_527 float_pop in2 float_dup integer_rot float_sub float_dup_times tag_float_527 float_pop in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc float_dec integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_fromfloat integer_inc float_dup_times float_inc integer_inc print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 63.3207 11 57.841 12 12.8843 12 33.7367 12 1.0876 11 1.7387 10 1.5737 11 30.8463 12 0.4747 11 43.3276 14 90.6614 13 50.3464 12 29.6044 11 24.6934 12 50.1971 13 50.3638 12 31.4726 13 16.781 12 92.8853 12 59.2388 11]
Total: 1230.0417999999997
Mean: 24.600836
Genome size: 61
Size: 62
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2683.0551092999935
Median total errors in population: 1232.0417999999997
Error averages by case: (66.67267400000006 11.468 75.59488240000012 12.011 137.47223799999708 12.237 124.22308160000141 11.496 76.89470199999941 12.244 119.13653379999785 10.585 110.88221000000027 11.695 71.6204815999998 11.954 89.16867379999937 11.975 63.06826199999959 11.484 61.42684980000087 10.398 61.665442600000475 11.275 92.65721460000059 12.22 60.534333299999545 11.211 99.3889440000006 13.784 150.4247001999998 13.101 108.0800015999986 12.305 85.93506959999847 11.307 82.78671999999952 11.92 105.2272740000013 12.926 107.14297200000183 12.352 95.47818919999862 13.048 76.59280000000106 12.238 147.5226407999978 12.523 114.04521840000196 11.656)
Error minima by case: (0.1443 11 2.4612 11 72.1077 10 16.5984 11 0.0567 10 0.3207 9 0.159 10 6.8843 10 0.7367 10 0.0876 9 0.2613 8 0.4263 9 15.8463 10 0.4747 10 31.3276 11 4.3386 11 17.3464 11 7.3956 10 7.3066 10 29.1971 10 45.3638 11 16.4726 10 6.781 11 0.1147 11 8.2388 11)
Average genome size in population (length): 58.712
Average program size in population (points): 59.712
Average percent parens in population: 0.017
Minimum age in population: 94.86112926401945
Maximum age in population: 99.6564081257432
Average age in population: 97.56146527249922
Median age in population: 97.63797483264571
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 124
Genome diversity (% unique Plush genomes):	 0.714
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 124
Syntactic diversity (% unique Push programs):	 0.714
Total error diversity:				 0.113
Error (vector) diversity:			 0.134
Behavioral diversity:				 0.134
--- Run Statistics ---
Number of program evaluations used so far: 69000
Number of point (instruction) evaluations so far: 98875900
--- Timings ---
Current time: 1529615072778 milliseconds
Total Time:         217.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       103.6 seconds, 47.7%
Fitness Testing:     89.3 seconds, 41.1%
Report:              24.2 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 68
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 69
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 69
;;******************************
;; -*- Number IO problem report - generation 69
Test total error for best: 62993.279299999944
Test mean error for best: 31.49664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_pop} {:instruction integer_inc} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_mod} {:instruction tagged_824} {:instruction print_float} {:instruction in2} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_pop integer_inc tagged_824 integer_flush in2 integer_max integer_yankdup float_div float_mod tagged_824 print_float in2 tag_integer_484 integer_flush tag_float_527 float_pop in2 float_dup integer_rot float_sub float_dup_times tag_float_527 float_pop in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc float_dec integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_fromfloat integer_inc float_dup_times float_inc integer_inc print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 63.3207 11 57.841 12 12.8843 12 33.7367 12 1.0876 11 1.7387 10 1.5737 11 30.8463 12 0.4747 11 43.3276 14 90.6614 13 50.3464 12 29.6044 11 24.6934 12 50.1971 13 50.3638 12 31.4726 13 16.781 12 92.8853 12 59.2388 11]
Total: 1230.0417999999997
Mean: 24.600836
Genome size: 65
Size: 66
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2627.929363799992
Median total errors in population: 1230.0417999999997
Error averages by case: (66.18194240000005 11.471 75.13265840000045 12.025 134.29366879999677 12.183 122.0751136000015 11.481 76.23336179999923 12.275 114.81809939999766 10.799 109.43070800000027 11.688 67.71140719999953 11.99 87.87588659999915 11.969 60.04967039999941 11.295 57.634759400001194 10.307 58.27309580000054 11.287 92.3685998000008 12.211 57.386504399999424 11.173 96.22225440000055 13.772 151.56568440000007 13.096 107.36069439999854 12.307 82.50339919999828 11.278 81.84123879999987 11.894 101.95906240000133 12.908 103.81442720000207 12.313 95.48707959999844 13.017 75.82074200000105 12.248 143.61795259999766 12.301 109.49635280000211 11.487)
Error minima by case: (0.1443 10 7.4612 10 74.1077 6 18.4016 5 0.9433 11 1.3207 9 0.159 5 5.8843 10 2.7367 5 0.0876 4 0.2613 5 0.4263 3 15.8463 5 0.4747 3 27.3276 5 4.3386 5 35.3464 4 2.6044 4 12.3066 10 25.1971 5 45.3638 5 16.4726 5 10.781 11 2.1147 4 4.7612 11)
Average genome size in population (length): 59.697
Average program size in population (points): 60.697
Average percent parens in population: 0.017
Minimum age in population: 95.9388205041062
Maximum age in population: 100.8331702110711
Average age in population: 98.87726750111723
Median age in population: 98.90907760200476
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 156
Genome diversity (% unique Plush genomes):	 0.664
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 156
Syntactic diversity (% unique Push programs):	 0.664
Total error diversity:				 0.097
Error (vector) diversity:			 0.111
Behavioral diversity:				 0.111
--- Run Statistics ---
Number of program evaluations used so far: 70000
Number of point (instruction) evaluations so far: 100368875
--- Timings ---
Current time: 1529615075825 milliseconds
Total Time:         220.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       105.0 seconds, 47.7%
Fitness Testing:     90.6 seconds, 41.1%
Report:              24.5 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 69
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 70
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 70
;;******************************
;; -*- Number IO problem report - generation 70
Test total error for best: 62993.279299999944
Test mean error for best: 31.49664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction print_float} {:instruction in2} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div tagged_573 print_float in2 tag_integer_484 integer_flush tag_float_527 float_pop in2 float_dup integer_rot float_sub float_dup_times tag_float_527 float_pop in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc float_dec integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_fromfloat integer_inc float_dup_times float_inc integer_inc print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 63.3207 11 57.841 12 12.8843 12 33.7367 12 1.0876 11 1.7387 10 1.5737 11 30.8463 12 0.4747 11 43.3276 14 90.6614 13 50.3464 12 29.6044 11 24.6934 12 50.1971 13 50.3638 12 31.4726 13 16.781 12 92.8853 12 59.2388 11]
Total: 1230.0417999999997
Mean: 24.600836
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2340.3171436999914
Median total errors in population: 1230.0417999999997
Error averages by case: (53.526096800000055 11.453 62.7688047999995 11.969 123.98117659999706 12.216 111.17988480000142 11.506 63.92179479999933 12.265 103.02166499999792 10.806 98.07725600000028 11.673 56.4644071999994 11.943 76.18909399999994 11.962 48.08021759999963 11.264 46.384985400000836 10.369 46.89927500000045 11.298 80.00275539999988 12.2 47.69092849999959 11.2 85.51084079999981 13.758 139.86462119999894 13.094 95.45285119999915 12.324 71.31727839999853 11.306 69.84849359999887 11.867 91.29982180000039 12.898 93.16452040000117 12.366 83.08175079999931 13.023 63.640924000000915 12.229 132.26734679999794 12.301 97.9343528000015 11.456)
Error minima by case: (0.1443 11 5.4612 11 70.1077 11 13.4016 11 0.9433 10 0.3207 9 0.841 10 5.8843 10 0.2633 11 0.0876 11 0.2613 9 0.4263 10 15.8463 11 0.4747 10 30.3276 11 6.3386 11 2.6536 11 7.3956 10 10.3066 11 28.1971 11 42.3638 11 16.4726 10 8.781 11 20.1147 10 16.7612 10)
Average genome size in population (length): 59.552
Average program size in population (points): 60.552
Average percent parens in population: 0.017
Minimum age in population: 96.9388205041062
Maximum age in population: 102.3830755152194
Average age in population: 100.3164866433138
Median age in population: 100.3669900806741
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 120
Genome diversity (% unique Plush genomes):	 0.706
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 120
Syntactic diversity (% unique Push programs):	 0.706
Total error diversity:				 0.116
Error (vector) diversity:			 0.132
Behavioral diversity:				 0.132
--- Run Statistics ---
Number of program evaluations used so far: 71000
Number of point (instruction) evaluations so far: 101858125
--- Timings ---
Current time: 1529615079106 milliseconds
Total Time:         223.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       106.4 seconds, 47.6%
Fitness Testing:     92.0 seconds, 41.2%
Report:              24.9 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 70
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 71
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 71
;;******************************
;; -*- Number IO problem report - generation 71
Test total error for best: 62993.279299999944
Test mean error for best: 31.49664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_mult} {:instruction tagged_573} {:instruction print_float} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_mult tagged_573 print_float in2 float_dup integer_rot float_sub float_dup_times tag_float_527 float_pop in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc float_dec integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_fromfloat integer_inc float_dup_times float_inc integer_inc print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 63.3207 11 57.841 12 12.8843 12 33.7367 12 1.0876 11 1.7387 10 1.5737 11 30.8463 12 0.4747 11 43.3276 14 90.6614 13 50.3464 12 29.6044 11 24.6934 12 50.1971 13 50.3638 12 31.4726 13 16.781 12 92.8853 12 59.2388 11]
Total: 1230.0417999999997
Mean: 24.600836
Genome size: 53
Size: 54
Percent parens: 0.019
--- Population Statistics ---
Average total errors in population: 2407.7165047999956
Median total errors in population: 1230.0417999999997
Error averages by case: (54.37502610000006 11.42 63.4973347999995 11.979 128.107190199997 12.22 114.25164800000147 11.422 65.14407829999931 12.24 107.93026339999783 10.817 100.12791700000028 11.724 61.03382759999937 11.975 78.17556469999974 11.992 52.00243109999949 11.215 50.923175200001005 10.346 51.22050070000052 11.275 80.87390910000006 12.186 46.650563599999515 11.186 89.78331520000013 13.806 140.02795979999905 13.079 96.87011919999888 12.253 75.97557349999825 11.285 71.36221539999907 11.894 95.74520970000091 12.916 97.31974130000167 12.309 83.38027819999918 13.033 64.895011000001 12.201 136.4593820999978 12.284 103.13326960000192 11.394)
Error minima by case: (0.1443 11 4.4612 11 17.8923 11 0.4016 10 0.0567 10 0.3207 10 0.841 10 7.8843 10 2.2633 11 0.0876 10 0.2613 8 0.4263 10 8.8463 10 0.4747 10 27.3276 11 74.6614 10 6.6536 11 4.6044 9 3.3066 10 25.1971 9 43.6362 11 15.4726 11 7.781 11 6.8853 11 14.7612 9)
Average genome size in population (length): 60.484
Average program size in population (points): 61.484
Average percent parens in population: 0.016
Minimum age in population: 98.47632209630753
Maximum age in population: 103.970934242566
Average age in population: 101.7513387110874
Median age in population: 101.8090444152409
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 108
Genome diversity (% unique Plush genomes):	 0.717
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 108
Syntactic diversity (% unique Push programs):	 0.717
Total error diversity:				 0.106
Error (vector) diversity:			 0.119
Behavioral diversity:				 0.12
--- Run Statistics ---
Number of program evaluations used so far: 72000
Number of point (instruction) evaluations so far: 103370875
--- Timings ---
Current time: 1529615082245 milliseconds
Total Time:         226.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       107.8 seconds, 47.6%
Fitness Testing:     93.4 seconds, 41.2%
Report:              25.3 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 71
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 72
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 72
;;******************************
;; -*- Number IO problem report - generation 72
Test total error for best: 62993.279299999944
Test mean error for best: 31.49664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction print_float} {:instruction in2} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div tagged_573 print_float in2 tag_integer_484 integer_flush tag_float_527 float_pop in2 float_dup integer_rot float_sub float_dup_times tag_float_527 float_pop in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc float_dec integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_fromfloat integer_inc float_dup_times float_inc integer_inc print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 63.3207 11 57.841 12 12.8843 12 33.7367 12 1.0876 11 1.7387 10 1.5737 11 30.8463 12 0.4747 11 43.3276 14 90.6614 13 50.3464 12 29.6044 11 24.6934 12 50.1971 13 50.3638 12 31.4726 13 16.781 12 92.8853 12 59.2388 11]
Total: 1230.0417999999997
Mean: 24.600836
Genome size: 60
Size: 61
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2491.6655860999917
Median total errors in population: 1230.0417999999997
Error averages by case: (60.28536520000006 11.5 69.18965839999998 11.973 130.15600719999696 12.218 116.5227040000014 11.53 70.28513499999936 12.277 108.73691139999784 10.79 103.62711800000027 11.65 62.821115599999416 11.958 81.99572699999946 11.984 54.63737029999962 11.286 53.0434442000009 10.368 53.4701904000005 11.343 86.62167760000068 12.198 51.155608999999664 11.224 91.67113210000049 13.725 146.31965279999991 13.083 101.42807999999853 12.311 77.23458809999846 11.311 75.81039919999955 11.872 97.26302660000121 12.892 99.52755830000187 12.35 89.93791519999843 12.999 69.76374200000105 12.255 137.71279459999784 12.316 103.53666390000191 11.499)
Error minima by case: (0.1443 11 6.4612 11 74.1077 6 17.4016 5 0.9433 10 1.3207 9 0.841 5 3.8843 10 5.7367 5 0.0876 4 0.2613 5 0.4263 3 15.8463 5 0.4747 3 27.3276 5 75.6614 5 3.6536 4 3.6044 4 1.6934 11 25.1971 5 45.3638 6 16.4726 5 2.219 11 15.8853 4 7.6543 9)
Average genome size in population (length): 60.345
Average program size in population (points): 61.345
Average percent parens in population: 0.016
Minimum age in population: 100.0138236885089
Maximum age in population: 105.1290700943758
Average age in population: 103.1760283992857
Median age in population: 103.2207571212032
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 66
Genome diversity (% unique Plush genomes):	 0.79
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 66
Syntactic diversity (% unique Push programs):	 0.79
Total error diversity:				 0.123
Error (vector) diversity:			 0.14
Behavioral diversity:				 0.14
--- Run Statistics ---
Number of program evaluations used so far: 73000
Number of point (instruction) evaluations so far: 104880625
--- Timings ---
Current time: 1529615085409 milliseconds
Total Time:         229.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       109.3 seconds, 47.6%
Fitness Testing:     94.7 seconds, 41.2%
Report:              25.6 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 72
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 73
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 73
;;******************************
;; -*- Number IO problem report - generation 73
Test total error for best: 62993.279299999944
Test mean error for best: 31.49664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction print_float} {:instruction in2} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div tagged_573 print_float in2 tag_integer_484 integer_flush tag_float_527 float_pop in2 float_dup integer_rot float_sub float_dup_times tag_float_527 float_pop in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc float_dec integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_fromfloat integer_inc float_dup_times float_inc integer_inc print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 63.3207 11 57.841 12 12.8843 12 33.7367 12 1.0876 11 1.7387 10 1.5737 11 30.8463 12 0.4747 11 43.3276 14 90.6614 13 50.3464 12 29.6044 11 24.6934 12 50.1971 13 50.3638 12 31.4726 13 16.781 12 92.8853 12 59.2388 11]
Total: 1230.0417999999997
Mean: 24.600836
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2553.7542373999922
Median total errors in population: 1230.0417999999997
Error averages by case: (59.56297270000006 11.478 68.83580039999966 11.954 134.88577649999672 12.258 118.35386080000139 11.515 69.76041849999943 12.268 113.84857169999788 10.816 104.84150700000028 11.669 68.38721709999948 11.979 82.7821976999997 11.977 59.00895479999959 11.262 58.35863370000094 10.419 58.673079900000516 11.339 85.6014461000001 12.214 52.90202969999963 11.234 96.86892680000044 13.76 144.98899139999963 13.105 101.01434799999879 12.286 82.64150919999835 11.348 76.22728139999917 11.873 102.59086530000117 12.915 104.41606340000172 12.391 88.62344259999907 13.051 69.88163900000112 12.236 142.18706729999766 12.333 109.33763640000188 11.494)
Error minima by case: (0.1443 10 5.4612 10 23.1077 11 16.4016 10 1.9433 10 0.3207 10 0.159 9 5.8843 10 4.2633 10 0.0876 10 0.2613 9 0.4263 10 2.1537 11 0.4747 10 8.6724 11 76.6614 12 18.6536 11 4.6044 9 4.6934 11 1.8029 11 2.6362 11 17.4726 12 5.219 11 8.8853 11 0.2388 10)
Average genome size in population (length): 60.44
Average program size in population (points): 61.44
Average percent parens in population: 0.016
Minimum age in population: 102.3122286526805
Maximum age in population: 106.6053294939173
Average age in population: 104.6113802392535
Median age in population: 104.6602951947236
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 58
Genome diversity (% unique Plush genomes):	 0.779
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 58
Syntactic diversity (% unique Push programs):	 0.779
Total error diversity:				 0.126
Error (vector) diversity:			 0.143
Behavioral diversity:				 0.144
--- Run Statistics ---
Number of program evaluations used so far: 74000
Number of point (instruction) evaluations so far: 106392425
--- Timings ---
Current time: 1529615088556 milliseconds
Total Time:         233.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       110.8 seconds, 47.6%
Fitness Testing:     96.1 seconds, 41.2%
Report:              26.0 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 73
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 74
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 74
;;******************************
;; -*- Number IO problem report - generation 74
Test total error for best: 62993.279299999944
Test mean error for best: 31.49664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction print_float} {:instruction in2} {:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction print_float} {:instruction in2} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_cos} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div tagged_573 print_float in2 integer_min integer_div tagged_573 print_float in2 tag_integer_484 integer_flush tag_float_527 float_pop in2 float_dup integer_rot float_sub float_dup_times tag_float_527 float_pop in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc float_dec integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc float_cos float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_fromfloat integer_inc float_dup_times float_inc integer_inc print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 63.3207 11 57.841 12 12.8843 12 33.7367 12 1.0876 11 1.7387 10 1.5737 11 30.8463 12 0.4747 11 43.3276 14 90.6614 13 50.3464 12 29.6044 11 24.6934 12 50.1971 13 50.3638 12 31.4726 13 16.781 12 92.8853 12 59.2388 11]
Total: 1230.0417999999997
Mean: 24.600836
Genome size: 63
Size: 64
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2392.3655362999925
Median total errors in population: 1230.0417999999997
Error averages by case: (55.22637530000006 11.435 64.27457639999938 11.995 126.43285349999694 12.2 112.13549920000142 11.478 65.51330509999934 12.239 106.36306149999788 10.818 99.25300500000027 11.698 59.093365899999306 11.968 77.53693709999985 11.983 51.25098439999956 11.248 49.021065900000934 10.331 49.60255390000051 11.287 81.67321650000015 12.203 48.83535259999955 11.177 88.01885800000005 13.787 141.43663699999925 13.09 96.86311919999876 12.294 74.14904759999847 11.282 71.26763979999903 11.879 93.84123050000102 12.906 95.6424290000017 12.319 84.83133299999888 13.023 65.11145700000098 12.226 135.20360849999778 12.284 101.20602440000171 11.432)
Error minima by case: (0.1443 10 6.4612 11 74.1077 11 33.4016 11 0.0567 11 0.3207 8 0.159 10 5.8843 10 6.7367 11 0.0876 11 0.2613 9 0.4263 10 14.8463 11 0.4747 10 31.3276 10 2.3386 11 2.3464 11 7.3956 9 11.3066 10 29.1971 11 43.3638 11 15.4726 11 9.781 11 0.1147 11 14.7612 10)
Average genome size in population (length): 60.197
Average program size in population (points): 61.197
Average percent parens in population: 0.016
Minimum age in population: 103.3122286526805
Maximum age in population: 108.0616940278426
Average age in population: 105.9640358814067
Median age in population: 105.9989194699919
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 35
Genome diversity (% unique Plush genomes):	 0.773
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 35
Syntactic diversity (% unique Push programs):	 0.773
Total error diversity:				 0.105
Error (vector) diversity:			 0.117
Behavioral diversity:				 0.118
--- Run Statistics ---
Number of program evaluations used so far: 75000
Number of point (instruction) evaluations so far: 107897850
--- Timings ---
Current time: 1529615091575 milliseconds
Total Time:         236.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       112.2 seconds, 47.5%
Fitness Testing:     97.4 seconds, 41.3%
Report:              26.3 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 74
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 75
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 75
;;******************************
;; -*- Number IO problem report - generation 75
Test total error for best: 62993.279299999944
Test mean error for best: 31.49664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction print_float} {:instruction in2} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction integer_rot} {:instruction float_sub} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_yank} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div tagged_573 print_float in2 tag_integer_484 integer_flush tag_float_527 integer_rot float_sub tag_integer_484 integer_flush tag_float_527 float_pop in2 float_dup integer_rot float_sub float_dup_times tag_float_527 float_pop in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc float_dec integer_min integer_inc float_yank float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_fromfloat integer_inc float_dup_times float_inc integer_inc print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 63.3207 11 57.841 12 12.8843 12 33.7367 12 1.0876 11 1.7387 10 1.5737 11 30.8463 12 0.4747 11 43.3276 14 90.6614 13 50.3464 12 29.6044 11 24.6934 12 50.1971 13 50.3638 12 31.4726 13 16.781 12 92.8853 12 59.2388 11]
Total: 1230.0417999999997
Mean: 24.600836
Genome size: 63
Size: 64
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2403.545490099993
Median total errors in population: 1230.0417999999997
Error averages by case: (54.09607660000006 11.455 63.535028799999424 11.948 127.65742269999684 12.22 113.35006560000143 11.461 64.67890819999931 12.284 108.02770289999772 10.807 99.82666600000027 11.671 60.745903099999346 11.982 77.78693439999994 11.988 51.80379439999956 11.244 50.45297550000103 10.322 51.171617500000565 11.311 80.49006279999986 12.236 48.10039119999951 11.208 89.58254760000004 13.795 139.75729839999897 13.11 96.4178511999992 12.282 75.88050919999822 11.313 71.1763615999988 11.864 95.46944210000065 12.877 97.0139738000014 12.359 83.16480559999924 13.032 64.77854400000103 12.207 136.89614969999778 12.301 102.95345720000162 11.454)
Error minima by case: (0.1443 11 3.4612 11 16.8923 10 15.4016 9 0.9433 10 0.3207 9 1.841 10 6.8843 9 3.2633 11 0.0876 10 0.2613 8 0.4263 10 15.8463 10 0.4747 10 31.3276 12 6.3386 12 2.3464 11 7.3956 9 11.3066 11 29.1971 11 42.6362 11 16.4726 11 6.781 10 15.1147 11 11.7612 10)
Average genome size in population (length): 60.524
Average program size in population (points): 61.524
Average percent parens in population: 0.016
Minimum age in population: 104.3122286526805
Maximum age in population: 109.4270337469113
Average age in population: 107.3817468818341
Median age in population: 107.4187424243371
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.806
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.806
Total error diversity:				 0.106
Error (vector) diversity:			 0.117
Behavioral diversity:				 0.117
--- Run Statistics ---
Number of program evaluations used so far: 76000
Number of point (instruction) evaluations so far: 109411625
--- Timings ---
Current time: 1529615094980 milliseconds
Total Time:         239.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       113.6 seconds, 47.5%
Fitness Testing:     98.8 seconds, 41.3%
Report:              26.7 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 75
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 76
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 76
;;******************************
;; -*- Number IO problem report - generation 76
Test total error for best: 62993.279299999944
Test mean error for best: 31.49664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction print_float} {:instruction float_inc} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div tagged_573 print_float float_inc tag_integer_484 integer_flush tag_float_527 tag_integer_484 integer_flush tag_float_527 float_pop in2 float_dup_times tag_float_527 float_pop in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc float_dec integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_fromfloat integer_inc float_dup_times float_inc integer_inc print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 63.3207 11 57.841 12 12.8843 12 33.7367 12 1.0876 11 1.7387 10 1.5737 11 30.8463 12 0.4747 11 43.3276 14 90.6614 13 50.3464 12 29.6044 11 24.6934 12 50.1971 13 50.3638 12 31.4726 13 16.781 12 92.8853 12 59.2388 11]
Total: 1230.0417999999997
Mean: 24.600836
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2738.723761399994
Median total errors in population: 1230.0417999999997
Error averages by case: (68.70664370000006 11.445 77.80495560000006 12.009 140.52123799999674 12.241 127.33146720000155 11.463 78.30281539999935 12.262 119.8618923999977 10.841 113.59541500000029 11.71 74.16495259999988 11.97 91.785724299999 11.999 65.09750999999946 11.249 64.25781450000106 10.406 64.68024320000055 11.292 94.71267570000079 12.215 61.17104899999945 11.192 102.57394400000068 13.795 152.99505459999992 13.108 110.18926959999841 12.28 88.63265199999823 11.314 85.24773419999964 11.918 108.27727400000131 12.916 110.11197200000211 12.335 97.40777139999837 13.056 78.9429530000013 12.23 148.43864079999761 12.296 114.95809920000224 11.412)
Error minima by case: (0.1443 10 6.4612 10 70.1077 11 34.4016 11 5.9433 11 0.6793 10 0.159 9 4.8843 10 3.2633 10 0.0876 10 0.2613 9 0.4263 9 20.8463 10 0.4747 10 30.3276 11 3.3386 11 10.6536 10 2.3956 9 10.3066 10 28.1971 10 43.3638 10 21.4726 11 9.781 11 1.1147 10 15.7612 10)
Average genome size in population (length): 60.268
Average program size in population (points): 61.268
Average percent parens in population: 0.016
Minimum age in population: 106.5987035472914
Maximum age in population: 110.7499341265265
Average age in population: 108.7959895779771
Median age in population: 108.8410419351109
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.783
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.783
Total error diversity:				 0.121
Error (vector) diversity:			 0.135
Behavioral diversity:				 0.136
--- Run Statistics ---
Number of program evaluations used so far: 77000
Number of point (instruction) evaluations so far: 110919000
--- Timings ---
Current time: 1529615098261 milliseconds
Total Time:         242.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       115.1 seconds, 47.4%
Fitness Testing:    100.2 seconds, 41.3%
Report:              27.2 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 76
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 77
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 77
;;******************************
;; -*- Number IO problem report - generation 77
Test total error for best: 62993.279299999944
Test mean error for best: 31.49664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction print_float} {:instruction float_mult} {:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction print_float} {:instruction in2} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div tagged_573 print_float float_mult integer_min integer_div tagged_573 print_float in2 tag_integer_484 integer_flush tag_float_527 float_pop in2 float_dup integer_rot float_sub float_dup_times tag_float_527 float_pop in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc float_dec integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_fromfloat integer_inc float_dup_times float_inc integer_inc print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 63.3207 11 57.841 12 12.8843 12 33.7367 12 1.0876 11 1.7387 10 1.5737 11 30.8463 12 0.4747 11 43.3276 14 90.6614 13 50.3464 12 29.6044 11 24.6934 12 50.1971 13 50.3638 12 31.4726 13 16.781 12 92.8853 12 59.2388 11]
Total: 1230.0417999999997
Mean: 24.600836
Genome size: 65
Size: 66
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2457.4767595999942
Median total errors in population: 1230.0417999999997
Error averages by case: (56.43764370000006 11.424 65.74417959999971 11.975 129.19420729999734 12.186 116.31464800000147 11.469 67.11307829999942 12.248 110.01377869999784 10.828 102.48091700000028 11.716 62.74967169999965 11.961 80.3130380999998 11.983 54.15798439999954 11.255 52.37727210000097 10.343 52.84525910000049 11.291 82.78383129999985 12.192 51.461523699999596 11.202 91.23889239999998 13.787 141.6543141999995 13.096 98.82811919999907 12.288 77.63392679999853 11.3 73.54760219999936 11.898 97.15604790000063 12.917 98.57324620000134 12.319 85.30144259999939 13.039 67.08657300000083 12.229 138.735149699998 12.294 105.05641240000139 11.438)
Error minima by case: (0.1443 11 4.4612 11 24.8923 11 33.4016 11 1.9433 11 0.3207 9 0.159 10 5.8843 10 2.7367 11 0.0876 11 0.2613 9 0.4263 11 16.8463 11 0.4747 10 29.3276 11 1.6614 11 24.3464 11 6.3956 10 10.3066 11 21.8029 11 43.6362 11 17.4726 11 7.781 11 6.8853 11 14.7612 11)
Average genome size in population (length): 60.33
Average program size in population (points): 61.33
Average percent parens in population: 0.016
Minimum age in population: 107.7275197042852
Maximum age in population: 112.1206750660839
Average age in population: 110.176756385647
Median age in population: 110.2087492574874
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.779
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.779
Total error diversity:				 0.112
Error (vector) diversity:			 0.128
Behavioral diversity:				 0.128
--- Run Statistics ---
Number of program evaluations used so far: 78000
Number of point (instruction) evaluations so far: 112427850
--- Timings ---
Current time: 1529615101403 milliseconds
Total Time:         245.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       116.6 seconds, 47.4%
Fitness Testing:    101.5 seconds, 41.3%
Report:              27.6 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 77
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 78
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 78
;;******************************
;; -*- Number IO problem report - generation 78
Test total error for best: 62993.279299999944
Test mean error for best: 31.49664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_dup_times} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div tagged_824 integer_flush in2 integer_max integer_rot integer_flush tag_float_527 float_pop in2 float_dup integer_rot float_sub float_dup_times float_dup integer_rot float_sub float_dup_times tag_float_527 float_pop in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc float_dec integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_fromfloat integer_inc float_dup_times float_dup_times float_inc integer_inc print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 63.3207 11 57.841 12 12.8843 12 33.7367 12 1.0876 11 1.7387 10 1.5737 11 30.8463 12 0.4747 11 43.3276 14 90.6614 13 50.3464 12 29.6044 11 24.6934 12 50.1971 13 50.3638 12 31.4726 13 16.781 12 92.8853 12 59.2388 11]
Total: 1230.0417999999997
Mean: 24.600836
Genome size: 64
Size: 65
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2652.103228299993
Median total errors in population: 1230.0417999999997
Error averages by case: (67.66664370000007 11.453 76.71126600000039 12.026 134.1601910999966 12.182 125.16669600000155 11.445 78.01364529999924 12.248 114.8196528999976 10.848 112.18236900000026 11.712 67.79639229999965 11.947 90.39346369999888 11.995 59.698900099999406 11.233 57.76180430000122 10.353 58.17265000000059 11.278 93.74906090000084 12.19 60.12888079999942 11.186 96.19477680000068 13.768 152.3387002000003 13.102 109.13465519999833 12.293 82.38696549999806 11.263 84.02518699999962 11.933 101.93858480000132 12.891 103.70094950000217 12.313 96.56966179999816 13.037 77.7797050000013 12.239 143.39011839999756 12.263 109.6013080000022 11.423)
Error minima by case: (0.1443 10 3.4612 11 74.1077 3 16.4016 5 1.9433 10 0.3207 9 1.841 5 0.1157 9 1.2633 5 0.0876 3 0.2613 2 0.4263 2 16.8463 5 0.4747 3 27.3276 3 3.3386 5 8.3464 4 5.6044 3 11.3066 11 25.1971 3 45.3638 3 17.4726 5 7.781 11 0.1147 3 11.7612 10)
Average genome size in population (length): 60.462
Average program size in population (points): 61.462
Average percent parens in population: 0.016
Minimum age in population: 108.8882105072213
Maximum age in population: 113.7177885856067
Average age in population: 111.4925045508029
Median age in population: 111.5477411769505
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.777
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.777
Total error diversity:				 0.11
Error (vector) diversity:			 0.127
Behavioral diversity:				 0.127
--- Run Statistics ---
Number of program evaluations used so far: 79000
Number of point (instruction) evaluations so far: 113939775
--- Timings ---
Current time: 1529615104691 milliseconds
Total Time:         249.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       118.0 seconds, 47.4%
Fitness Testing:    103.0 seconds, 41.3%
Report:              27.9 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 78
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 79
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 79
;;******************************
;; -*- Number IO problem report - generation 79
Test total error for best: 62993.279299999944
Test mean error for best: 31.49664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_yank} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_mod} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div integer_fromfloat integer_flush in2 integer_max integer_rot float_sub tag_integer_484 integer_flush tag_float_527 float_yank in2 float_dup integer_rot float_sub float_dup_times tag_float_527 float_pop in2 integer_dup_items float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_mod integer_inc float_dec integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_fromfloat integer_inc float_dup_times float_inc integer_inc print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 63.3207 11 57.841 12 12.8843 12 33.7367 12 1.0876 11 1.7387 10 1.5737 11 30.8463 12 0.4747 11 43.3276 14 90.6614 13 50.3464 12 29.6044 11 24.6934 12 50.1971 13 50.3638 12 31.4726 13 16.781 12 92.8853 12 59.2388 11]
Total: 1230.0417999999997
Mean: 24.600836
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2838.888497999994
Median total errors in population: 1230.0417999999997
Error averages by case: (74.30825120000006 11.494 83.22112400000054 12.022 143.09091489999645 12.261 129.26414560000146 11.508 83.53698549999928 12.29 123.02528889999769 10.84 117.21861600000025 11.67 77.06853110000021 11.959 95.818099399999 11.984 69.28137799999946 11.271 67.16377920000109 10.433 67.83037470000012 11.345 100.17852200000097 12.248 67.5048778999997 11.207 105.34596120000103 13.757 158.91271600000053 13.122 115.00461599999794 12.326 91.41433319999811 11.342 89.8616915999999 11.911 110.90668270000168 12.9 112.99788060000266 12.398 103.36824399999784 13.066 83.88993200000124 12.243 151.5872142999973 12.316 117.70133800000272 11.474)
Error minima by case: (0.1443 10 3.4612 10 71.1077 11 16.4016 10 0.0567 10 1.3207 9 0.841 10 2.1157 10 3.2633 11 0.0876 10 0.2613 9 0.4263 10 14.8463 11 0.4747 10 26.3276 12 74.6614 11 20.3464 11 4.3956 9 1.6934 11 24.1971 11 44.3638 11 15.4726 11 6.781 10 2.8853 11 12.7612 10)
Average genome size in population (length): 60.279
Average program size in population (points): 61.279
Average percent parens in population: 0.016
Minimum age in population: 109.9781768961605
Maximum age in population: 115.0795908824391
Average age in population: 112.9335441423921
Median age in population: 112.9609550936181
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.8
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.8
Total error diversity:				 0.119
Error (vector) diversity:			 0.135
Behavioral diversity:				 0.136
--- Run Statistics ---
Number of program evaluations used so far: 80000
Number of point (instruction) evaluations so far: 115447425
--- Timings ---
Current time: 1529615107880 milliseconds
Total Time:         252.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       119.4 seconds, 47.3%
Fitness Testing:    104.3 seconds, 41.4%
Report:              28.4 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 79
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 80
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 80
;;******************************
;; -*- Number IO problem report - generation 80
Test total error for best: 62993.279299999944
Test mean error for best: 31.49664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_add} {:instruction integer_div} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction integer_div} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup_times} {:instruction tag_float_543} {:instruction float_pop} {:instruction float_min} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction float_sub} {:instruction float_min} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_add} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer})
Best program: (float_add integer_div integer_fromfloat integer_flush in2 integer_max integer_rot float_sub tag_integer_484 integer_flush tag_float_527 float_pop in2 float_dup integer_rot float_sub integer_div tag_float_527 float_pop in2 float_dup_times tag_float_543 float_pop float_min integer_dup_items integer_swap float_sub float_min integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc float_dec integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_min integer_div float_mod 92 integer_inc integer_min integer_inc float_dup_times integer_add integer_inc integer_inc integer_inc integer_inc integer_fromfloat integer_inc float_dup_times float_inc integer_inc print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 63.3207 11 57.841 12 12.8843 12 33.7367 12 1.0876 11 1.7387 10 1.5737 11 30.8463 12 0.4747 11 43.3276 14 90.6614 13 50.3464 12 29.6044 11 24.6934 12 50.1971 13 50.3638 12 31.4726 13 16.781 12 92.8853 12 59.2388 11]
Total: 1230.0417999999997
Mean: 24.600836
Genome size: 65
Size: 66
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2916.8343421999934
Median total errors in population: 1230.0417999999997
Error averages by case: (76.67853980000005 11.507 85.5863480000004 12.018 146.6104840999969 12.26 133.46190080000122 11.52 86.76938239999934 12.285 126.67900609999775 10.839 120.35680000000026 11.688 80.8210683000004 11.956 98.92683339999907 11.999 72.25296959999949 11.273 71.01590490000105 10.454 71.45378510000023 11.316 102.45075160000066 12.241 69.43038389999975 11.227 109.01865080000066 13.776 160.63974760000048 13.137 117.61053759999847 12.325 95.29400359999828 11.339 92.65517279999982 11.924 114.68489430000123 12.919 116.45642540000205 12.375 105.32846319999832 13.07 86.53055200000107 12.26 154.99844369999778 12.332 121.62529320000209 11.458)
Error minima by case: (0.1443 10 3.4612 11 72.1077 10 7.4016 9 0.0567 11 0.3207 9 0.841 10 5.1157 9 0.2633 11 0.0876 10 0.2613 9 0.4263 11 14.8463 11 0.4747 10 30.3276 12 6.3386 11 3.6536 11 6.3956 10 10.3066 11 28.1971 11 41.3638 11 15.4726 11 6.781 11 0.1147 11 0.2388 10)
Average genome size in population (length): 60.396
Average program size in population (points): 61.396
Average percent parens in population: 0.016
Minimum age in population: 112.0626426854155
Maximum age in population: 116.3530285406993
Average age in population: 114.3626670199084
Median age in population: 114.4395821671411
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.797
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.797
Total error diversity:				 0.117
Error (vector) diversity:			 0.137
Behavioral diversity:				 0.137
--- Run Statistics ---
Number of program evaluations used so far: 81000
Number of point (instruction) evaluations so far: 116957875
--- Timings ---
Current time: 1529615111096 milliseconds
Total Time:         255.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       121.0 seconds, 47.3%
Fitness Testing:    105.7 seconds, 41.4%
Report:              28.7 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 80
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 81
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 81
;;******************************
;; -*- Number IO problem report - generation 81
Test total error for best: 62993.279299999944
Test mean error for best: 31.49664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_yank} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div integer_fromfloat integer_flush in2 integer_max integer_rot float_sub tag_integer_484 integer_flush tag_float_527 float_yank in2 float_dup integer_rot float_sub float_dup_times tag_float_527 float_pop in2 integer_dup_items float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc float_dec integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_fromfloat integer_inc float_dup_times float_inc integer_inc print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 63.3207 11 57.841 12 12.8843 12 33.7367 12 1.0876 11 1.7387 10 1.5737 11 30.8463 12 0.4747 11 43.3276 14 90.6614 13 50.3464 12 29.6044 11 24.6934 12 50.1971 13 50.3638 12 31.4726 13 16.781 12 92.8853 12 59.2388 11]
Total: 1230.0417999999997
Mean: 24.600836
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2605.800265199993
Median total errors in population: 1230.0417999999997
Error averages by case: (63.31839550000006 11.484 72.25557639999965 11.97 136.2196687999969 12.258 121.33927040000155 11.496 73.54787209999935 12.262 114.12360959999769 10.826 107.53232300000025 11.671 69.67506829999967 11.936 85.8968838999999 11.985 59.679567999999506 11.276 59.83251790000104 10.444 59.1390958000005 11.307 89.33513870000002 12.198 55.40631399999952 11.225 97.2842544000002 13.763 148.3796685999996 13.103 104.75134799999871 12.31 83.18153119999825 11.331 79.47402659999902 11.923 103.04506240000123 12.937 105.6664272000022 12.373 92.25049739999893 13.056 73.28101900000114 12.246 142.61464079999774 12.34 109.38248720000219 11.468)
Error minima by case: (0.1443 11 1.5388 11 70.1077 11 11.4016 10 0.0567 11 0.6793 9 0.159 10 6.8843 10 1.2633 11 0.0876 10 0.2613 8 0.4263 11 4.8463 11 0.4747 10 31.3276 11 74.6614 11 14.3464 11 4.6044 10 5.3066 11 29.1971 11 42.3638 11 15.4726 10 1.781 11 3.1147 11 6.2388 10)
Average genome size in population (length): 60.687
Average program size in population (points): 61.687
Average percent parens in population: 0.016
Minimum age in population: 113.3618463920368
Maximum age in population: 117.9304275128009
Average age in population: 115.8322254924683
Median age in population: 115.9032688521603
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.793
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.793
Total error diversity:				 0.126
Error (vector) diversity:			 0.147
Behavioral diversity:				 0.148
--- Run Statistics ---
Number of program evaluations used so far: 82000
Number of point (instruction) evaluations so far: 118475575
--- Timings ---
Current time: 1529615114237 milliseconds
Total Time:         258.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       122.4 seconds, 47.3%
Fitness Testing:    107.0 seconds, 41.4%
Report:              29.1 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 81
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 82
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 82
;;******************************
;; -*- Number IO problem report - generation 82
Test total error for best: 62993.279299999944
Test mean error for best: 31.49664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_swap} {:instruction tag_float_788} {:instruction in2} {:instruction float_mult} {:instruction -30.767573913910155} {:instruction integer_inc} {:instruction integer_max} {:instruction integer_rot} {:instruction float_div} {:instruction tag_integer_410} {:instruction integer_rot} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_dup_times} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer})
Best program: (float_swap tag_float_788 in2 float_mult -30.767573913910155 integer_inc integer_max integer_rot float_div tag_integer_410 integer_rot tag_float_527 float_pop in2 float_dup integer_rot float_sub float_dup_times float_dup integer_rot float_sub float_dup_times tag_float_527 float_pop in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times integer_inc float_dec integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_flush integer_inc integer_inc integer_inc integer_inc integer_fromfloat integer_inc float_dup_times float_inc integer_inc print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 63.3207 11 57.841 12 12.8843 12 33.7367 12 1.0876 11 1.7387 10 1.5737 11 30.8463 12 0.4747 11 43.3276 14 90.6614 13 50.3464 12 29.6044 11 24.6934 12 50.1971 13 50.3638 12 31.4726 13 16.781 12 92.8853 12 59.2388 11]
Total: 1230.0417999999997
Mean: 24.600836
Genome size: 65
Size: 66
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 2841.951336499993
Median total errors in population: 1230.0417999999997
Error averages by case: (73.17213720000005 11.469 82.27403760000038 12.025 144.2035917999968 12.235 130.1340976000015 11.499 83.09004219999933 12.259 124.46025099999774 10.834 117.30416400000027 11.698 78.48910140000034 11.958 95.55020039999899 11.983 69.24695479999951 11.272 68.48655320000107 10.401 68.82491660000031 11.308 98.93413680000094 12.216 65.2538778999995 11.196 106.48297840000062 13.757 157.50007040000037 13.121 113.93023039999831 12.314 92.5813991999984 11.32 89.26233320000007 11.926 112.10409140000128 12.929 113.93678920000195 12.367 102.01635359999831 13.061 83.10923800000108 12.245 152.82487019999763 12.317 119.60592000000216 11.463)
Error minima by case: (0.1443 11 5.4612 11 73.1077 11 12.4016 10 0.9433 10 0.6793 9 0.159 10 5.8843 10 1.7367 10 0.0876 10 0.2613 8 0.4263 10 15.8463 10 0.4747 10 29.3276 11 6.3386 11 5.6536 11 6.3956 9 10.3066 11 27.1971 11 42.3638 11 16.4726 11 8.781 11 23.1147 10 15.7612 10)
Average genome size in population (length): 60.613
Average program size in population (points): 61.613
Average percent parens in population: 0.016
Minimum age in population: 114.3618463920368
Maximum age in population: 119.6417280267501
Average age in population: 117.2331839285766
Median age in population: 117.2726262484727
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 7
Genome diversity (% unique Plush genomes):	 0.797
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 7
Syntactic diversity (% unique Push programs):	 0.797
Total error diversity:				 0.109
Error (vector) diversity:			 0.13
Behavioral diversity:				 0.131
--- Run Statistics ---
Number of program evaluations used so far: 83000
Number of point (instruction) evaluations so far: 119991725
--- Timings ---
Current time: 1529615117493 milliseconds
Total Time:         261.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       123.9 seconds, 47.3%
Fitness Testing:    108.4 seconds, 41.4%
Report:              29.4 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 82
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 83
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 83
;;******************************
;; -*- Number IO problem report - generation 83
Test total error for best: 62993.279299999944
Test mean error for best: 31.49664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction in2} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_dup_times} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_sub} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div in2 tag_integer_484 integer_flush tag_float_527 float_pop in2 float_dup integer_rot float_sub float_dup_times float_dup integer_rot float_sub float_dup_times tag_float_527 float_sub in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc float_dec integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_fromfloat integer_inc float_dup_times float_inc integer_inc print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 63.3207 11 57.841 12 12.8843 12 33.7367 12 1.0876 11 1.7387 10 1.5737 11 30.8463 12 0.4747 11 43.3276 14 90.6614 13 50.3464 12 29.6044 11 24.6934 12 50.1971 13 50.3638 12 31.4726 13 16.781 12 92.8853 12 59.2388 11]
Total: 1230.0417999999997
Mean: 24.600836
Genome size: 60
Size: 61
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2976.138829399995
Median total errors in population: 1230.0417999999997
Error averages by case: (78.70324110000006 11.5 87.42635240000055 12.044 149.34794559999617 12.225 134.23772800000137 11.505 88.65355249999925 12.279 129.79140259999758 10.845 121.65486700000027 11.692 84.12472120000041 11.953 100.37472969999874 11.997 76.05967039999942 11.278 74.24207580000117 10.404 74.69491660000025 11.337 104.36659790000107 12.237 70.92365619999961 11.2 111.99001280000108 13.772 162.7890862000005 13.121 119.20980559999815 12.331 98.35135519999804 11.321 94.2627717999998 11.938 117.60690880000173 12.942 119.39560640000275 12.352 107.54193579999796 13.058 88.26283700000137 12.261 157.8724759999971 12.326 124.88057680000283 11.456)
Error minima by case: (0.1443 10 0.4612 11 9.8923 11 21.4016 10 6.9433 10 0.3207 9 0.159 9 2.8843 10 2.2633 10 0.0876 10 0.2613 9 0.4263 10 8.8463 11 0.4747 10 27.6724 11 10.3386 11 7.3464 11 0.3956 9 11.3066 10 11.8029 11 33.6362 11 22.4726 11 3.781 10 10.1147 11 16.7612 10)
Average genome size in population (length): 60.946
Average program size in population (points): 61.946
Average percent parens in population: 0.016
Minimum age in population: 116.0760553394423
Maximum age in population: 120.7198382564381
Average age in population: 118.7029380878334
Median age in population: 118.7568276813092
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.798
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.798
Total error diversity:				 0.122
Error (vector) diversity:			 0.143
Behavioral diversity:				 0.143
--- Run Statistics ---
Number of program evaluations used so far: 84000
Number of point (instruction) evaluations so far: 121516300
--- Timings ---
Current time: 1529615120588 milliseconds
Total Time:         265.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       125.3 seconds, 47.3%
Fitness Testing:    109.7 seconds, 41.4%
Report:              29.8 seconds, 11.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 83
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 84
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 84
;;******************************
;; -*- Number IO problem report - generation 84
Test total error for best: 62993.279299999944
Test mean error for best: 31.49664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction in2} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dec} {:instruction integer_rot} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div integer_fromfloat integer_flush in2 integer_flush tag_float_527 float_pop in2 float_dec integer_rot float_sub float_dup_times tag_float_527 float_pop in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times integer_rot float_pop integer_inc float_dec integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_fromfloat integer_inc float_dup_times float_inc integer_inc print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 63.3207 11 57.841 12 12.8843 12 33.7367 12 1.0876 11 1.7387 10 1.5737 11 30.8463 12 0.4747 11 43.3276 14 90.6614 13 50.3464 12 29.6044 11 24.6934 12 50.1971 13 50.3638 12 31.4726 13 16.781 12 92.8853 12 59.2388 11]
Total: 1230.0417999999997
Mean: 24.600836
Genome size: 57
Size: 58
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2339.813058999992
Median total errors in population: 1230.0417999999997
Error averages by case: (51.39977790000006 11.423 60.564722799999544 11.964 126.20774579999713 12.188 109.99645920000144 11.466 61.609794799999385 12.239 106.2957407999977 10.793 96.69150700000027 11.695 58.888481599999544 11.939 74.33940779999999 11.973 49.89724719999952 11.211 48.772940200001045 10.322 49.26465360000053 11.271 77.92229430000012 12.182 43.82720079999957 11.198 87.67353040000023 13.751 137.61660539999892 13.07 92.98154399999893 12.272 73.79209159999843 11.291 68.0219747999989 11.86 93.52703340000082 12.887 94.41542900000152 12.312 79.84264119999916 13.011 61.68998200000088 12.203 135.12803499999788 12.266 101.24221840000172 11.417)
Error minima by case: (0.1443 10 4.4612 10 74.1077 3 21.4016 10 0.0567 10 0.3207 9 0.159 10 0.1157 10 2.2633 10 0.0876 2 0.2613 2 0.4263 1 14.8463 11 0.4747 10 31.3276 3 74.6614 11 3.3464 11 6.3956 2 10.3066 10 29.1971 3 44.3638 3 15.4726 10 7.781 10 9.8853 2 16.7612 10)
Average genome size in population (length): 60.838
Average program size in population (points): 61.838
Average percent parens in population: 0.016
Minimum age in population: 117.1301761780478
Maximum age in population: 122.2094458962912
Average age in population: 120.0885467584377
Median age in population: 120.142069551934
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.793
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.793
Total error diversity:				 0.115
Error (vector) diversity:			 0.129
Behavioral diversity:				 0.129
--- Run Statistics ---
Number of program evaluations used so far: 85000
Number of point (instruction) evaluations so far: 123037950
--- Timings ---
Current time: 1529615123817 milliseconds
Total Time:         268.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       126.9 seconds, 47.3%
Fitness Testing:    111.1 seconds, 41.4%
Report:              30.2 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 84
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 85
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 85
;;******************************
;; -*- Number IO problem report - generation 85
Test total error for best: 62993.279299999944
Test mean error for best: 31.49664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction print_integer} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dec} {:instruction integer_rot} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div integer_fromfloat integer_flush print_integer integer_flush tag_float_527 float_pop in2 float_dec integer_rot float_sub float_dup_times tag_float_527 float_pop in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times integer_rot float_pop integer_inc float_dec integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_fromfloat integer_inc float_dup_times float_inc integer_inc print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 63.3207 11 57.841 12 12.8843 12 33.7367 12 1.0876 11 1.7387 10 1.5737 11 30.8463 12 0.4747 11 43.3276 14 90.6614 13 50.3464 12 29.6044 11 24.6934 12 50.1971 13 50.3638 12 31.4726 13 16.781 12 92.8853 12 59.2388 11]
Total: 1230.0417999999997
Mean: 24.600836
Genome size: 57
Size: 58
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2720.734617699993
Median total errors in population: 1230.0417999999997
Error averages by case: (69.48967400000005 11.475 78.65427040000004 12.027 138.33845339999644 12.26 126.28529440000152 11.504 79.31158859999933 12.283 117.75049589999766 10.843 113.52448200000026 11.699 71.80210139999934 11.953 91.57467379999885 11.986 63.00407879999952 11.264 61.853508000001035 10.438 62.498864600000516 11.344 95.48621460000086 12.25 63.22067549999946 11.22 100.51859920000072 13.77 154.45037740000035 13.137 110.25700159999806 12.335 86.33904759999812 11.327 85.4269463999997 11.938 106.27866820000142 12.899 107.96869960000234 12.406 98.67871659999808 13.073 79.30067600000137 12.258 146.20506729999724 12.315 113.04644240000245 11.466)
Error minima by case: (0.1443 10 3.4612 11 74.1077 11 33.4016 10 2.9433 11 0.3207 9 0.159 10 5.8843 10 1.2633 10 0.0876 9 0.2613 8 0.4263 11 17.8463 11 0.4747 10 30.3276 12 7.3386 12 22.3464 11 7.3956 10 10.3066 11 28.1971 11 44.3638 11 18.4726 11 6.781 11 3.8853 11 12.7612 9)
Average genome size in population (length): 61.03
Average program size in population (points): 62.03
Average percent parens in population: 0.016
Minimum age in population: 118.1301761780478
Maximum age in population: 123.6070151952734
Average age in population: 121.5342312335489
Median age in population: 121.583995498629
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.805
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.805
Total error diversity:				 0.117
Error (vector) diversity:			 0.136
Behavioral diversity:				 0.137
--- Run Statistics ---
Number of program evaluations used so far: 86000
Number of point (instruction) evaluations so far: 124564600
--- Timings ---
Current time: 1529615126928 milliseconds
Total Time:         271.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       128.3 seconds, 47.3%
Fitness Testing:    112.4 seconds, 41.4%
Report:              30.5 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 85
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 86
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 86
;;******************************
;; -*- Number IO problem report - generation 86
Test total error for best: 62993.279299999944
Test mean error for best: 31.49664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_rot} {:instruction integer_div} {:instruction print_float} {:instruction print_float} {:instruction in2} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_shove} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_rot integer_div print_float print_float in2 tag_integer_484 integer_flush tag_float_527 float_pop in2 float_dup integer_rot float_sub float_dup_times tag_float_527 float_pop in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc float_dec integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc float_shove integer_inc float_dup_times float_inc integer_inc print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 63.3207 11 57.841 12 12.8843 12 33.7367 12 1.0876 11 1.7387 10 1.5737 11 30.8463 12 0.4747 11 43.3276 14 90.6614 13 50.3464 12 29.6044 11 24.6934 12 50.1971 13 50.3638 12 31.4726 13 16.781 12 92.8853 12 59.2388 11]
Total: 1230.0417999999997
Mean: 24.600836
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2298.0981176999917
Median total errors in population: 1230.0417999999997
Error averages by case: (52.41150950000006 11.45 61.5220331999995 11.974 121.40717659999724 12.202 110.24468000000145 11.477 62.70896489999938 12.246 101.88723059999789 10.8 97.15941500000027 11.679 54.01255599999961 11.912 75.16883069999999 11.982 45.97364879999957 11.23 43.76884980000068 10.362 44.31550620000047 11.293 78.7509091000002 12.19 46.16502969999959 11.207 82.7838408000001 13.79 138.42595979999888 13.089 94.41919759999877 12.283 68.85865199999873 11.305 68.78134739999886 11.885 88.61682180000082 12.89 90.43252040000137 12.31 81.70627819999913 13.015 62.512391000000896 12.219 131.13511739999817 12.287 96.41265120000166 11.44)
Error minima by case: (0.1443 10 1.4612 11 10.8923 11 9.4016 10 0.0567 11 0.3207 9 0.159 10 5.8843 10 0.7367 10 0.0876 9 0.2613 8 0.4263 11 14.8463 11 0.4747 10 27.3276 12 2.3386 11 4.6536 11 2.3956 11 6.3066 11 25.1971 11 36.6362 11 15.4726 10 4.781 11 22.1147 12 0.7612 9)
Average genome size in population (length): 60.745
Average program size in population (points): 61.745
Average percent parens in population: 0.016
Minimum age in population: 119.1301761780478
Maximum age in population: 125.2724738059339
Average age in population: 122.8973205870648
Median age in population: 122.9553662060928
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.797
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.797
Total error diversity:				 0.113
Error (vector) diversity:			 0.135
Behavioral diversity:				 0.135
--- Run Statistics ---
Number of program evaluations used so far: 87000
Number of point (instruction) evaluations so far: 126084225
--- Timings ---
Current time: 1529615129963 milliseconds
Total Time:         274.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       129.7 seconds, 47.3%
Fitness Testing:    113.7 seconds, 41.4%
Report:              30.8 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 86
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 87
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 87
;;******************************
;; -*- Number IO problem report - generation 87
Test total error for best: 62993.279299999944
Test mean error for best: 31.49664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction float_sub} {:instruction integer_min} {:instruction integer_div} {:instruction tagged_824} {:instruction print_float} {:instruction in2} {:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction print_float} {:instruction in2} {:instruction integer_flush} {:instruction tag_float_527} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_sin} {:instruction integer_rot} {:instruction float_sub} {:instruction float_rot} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_sub} {:instruction integer_rot} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_add} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_add} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div tagged_573 float_sub integer_min integer_div tagged_824 print_float in2 integer_min integer_div tagged_573 print_float in2 integer_flush tag_float_527 tag_integer_484 integer_flush tag_integer_484 integer_flush tag_float_527 float_pop in2 float_sin integer_rot float_sub float_rot tag_float_527 float_pop in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc float_dec integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc float_sub integer_rot float_mod 92 integer_inc integer_min integer_inc float_dup_times float_add integer_inc integer_inc integer_inc integer_inc integer_add integer_inc float_dup_times float_inc integer_inc print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 63.3207 11 57.841 12 12.8843 12 33.7367 12 1.0876 11 1.7387 10 1.5737 11 30.8463 12 0.4747 11 43.3276 14 90.6614 13 50.3464 12 29.6044 11 24.6934 12 50.1971 13 50.3638 12 31.4726 13 16.781 12 92.8853 12 59.2388 11]
Total: 1230.0417999999997
Mean: 24.600836
Genome size: 71
Size: 72
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2396.691919799993
Median total errors in population: 1230.0417999999997
Error averages by case: (56.63778800000006 11.407 65.7094167999995 12.007 125.199628099997 12.186 114.86547520000146 11.444 67.13179479999938 12.231 105.15504969999772 10.846 101.53225600000027 11.711 58.12360729999941 11.933 79.57856739999961 11.967 49.499948399999475 11.206 47.97814630000103 10.352 48.41317410000052 11.258 83.04506280000027 12.172 47.517493099999506 11.156 86.82511380000025 13.778 142.40829839999918 13.08 98.79615839999879 12.274 72.88566699999846 11.271 73.1124275999992 11.899 92.67175630000085 12.922 94.37869140000161 12.298 85.81380559999884 13.032 66.80573400000101 12.21 134.2107428999979 12.247 100.12211640000177 11.387)
Error minima by case: (0.1443 10 1.4612 11 15.8923 6 14.4016 5 0.9433 10 1.3207 10 0.159 5 6.8843 10 0.2633 5 0.0876 4 0.2613 5 0.4263 3 15.8463 5 0.4747 3 31.3276 5 75.6614 5 26.3464 4 13.3956 4 11.3066 10 29.1971 5 41.6362 6 16.4726 5 4.781 11 28.8853 4 10.2388 10)
Average genome size in population (length): 60.535
Average program size in population (points): 61.535
Average percent parens in population: 0.016
Minimum age in population: 121.408467133929
Maximum age in population: 126.5551581016676
Average age in population: 124.3103173580073
Median age in population: 124.3526436411959
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.788
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.788
Total error diversity:				 0.118
Error (vector) diversity:			 0.135
Behavioral diversity:				 0.136
--- Run Statistics ---
Number of program evaluations used so far: 88000
Number of point (instruction) evaluations so far: 127598500
--- Timings ---
Current time: 1529615133308 milliseconds
Total Time:         277.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       131.2 seconds, 47.2%
Fitness Testing:    115.2 seconds, 41.5%
Report:              31.1 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 87
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 88
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 88
;;******************************
;; -*- Number IO problem report - generation 88
Test total error for best: 62993.279299999944
Test mean error for best: 31.49664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction print_float} {:instruction integer_shove} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction print_float} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div tagged_573 print_float integer_shove integer_max integer_rot float_sub tag_integer_484 integer_flush tag_float_527 float_pop in2 float_dup integer_rot float_sub float_dup_times tag_float_527 float_pop in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc float_dec integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_fromfloat integer_inc print_float float_inc integer_inc print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 63.3207 11 57.841 12 12.8843 12 33.7367 12 1.0876 11 1.7387 10 1.5737 11 30.8463 12 0.4747 11 43.3276 14 90.6614 13 50.3464 12 29.6044 11 24.6934 12 50.1971 13 50.3638 12 31.4726 13 16.781 12 92.8853 12 59.2388 11]
Total: 1230.0417999999997
Mean: 24.600836
Genome size: 61
Size: 62
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2570.7762466999916
Median total errors in population: 1230.0417999999997
Error averages by case: (64.38295330000005 11.459 73.42687149999979 11.986 131.341692399997 12.208 122.64397140000146 11.471 74.76900149999935 12.252 110.59943679999783 10.813 109.03450950000025 11.69 64.48874799999935 11.919 87.2888667999996 11.982 55.97753189999954 11.258 54.53837940000096 10.397 55.048642300000495 11.303 90.45020670000004 12.189 57.31143039999952 11.188 93.2199377999998 13.749 149.15466109999957 13.085 105.96160819999862 12.28 79.15776469999828 11.304 80.83995349999911 11.896 98.96835430000067 12.907 100.79021910000152 12.327 93.21143389999902 13.031 74.56290940000113 12.231 139.27213729999784 12.315 105.62402550000175 11.471)
Error minima by case: (0.1443 10 5.4612 11 14.8923 6 35.4016 5 2.9433 10 1.3207 9 1.159 5 6.8843 10 0.7367 5 0.0876 4 0.2613 5 0.4263 3 5.8463 5 0.4747 3 27.6724 5 1.3386 5 4.3464 4 1.3956 4 14.3066 11 11.8029 5 33.6362 6 18.4726 5 8.781 11 0.1147 4 11.7612 11)
Average genome size in population (length): 60.631
Average program size in population (points): 61.631
Average percent parens in population: 0.016
Minimum age in population: 123.2804938410199
Maximum age in population: 127.6663667987866
Average age in population: 125.7446184741535
Median age in population: 125.7437879933855
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.822
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.822
Total error diversity:				 0.124
Error (vector) diversity:			 0.143
Behavioral diversity:				 0.143
--- Run Statistics ---
Number of program evaluations used so far: 89000
Number of point (instruction) evaluations so far: 129115225
--- Timings ---
Current time: 1529615136463 milliseconds
Total Time:         280.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       132.7 seconds, 47.2%
Fitness Testing:    116.6 seconds, 41.5%
Report:              31.5 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 88
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 89
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 89
;;******************************
;; -*- Number IO problem report - generation 89
Test total error for best: 62993.279299999944
Test mean error for best: 31.49664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction in2} {:instruction integer_max} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_inc} {:instruction integer_yankdup} {:instruction float_div} {:instruction float_mod} {:instruction float_pop} {:instruction float_mult} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction integer_sub} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div in2 integer_max integer_flush in2 integer_max integer_rot float_inc integer_yankdup float_div float_mod float_pop float_mult float_pop in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc float_dec integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove integer_sub float_mod 92 integer_inc integer_min integer_inc float_dup_times float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_fromfloat integer_inc float_dup_times float_inc integer_inc print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 63.3207 11 57.841 12 12.8843 12 33.7367 12 1.0876 11 1.7387 10 1.5737 11 30.8463 12 0.4747 11 43.3276 14 90.6614 13 50.3464 12 29.6044 11 24.6934 12 50.1971 13 50.3638 12 31.4726 13 16.781 12 92.8853 12 59.2388 11]
Total: 1230.0417999999997
Mean: 24.600836
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2787.0948941999936
Median total errors in population: 1230.0417999999997
Error averages by case: (73.40451960000006 11.5 82.06151200000043 12.053 140.07821469999698 12.238 126.82735040000136 11.498 83.12092879999936 12.277 120.65327599999782 10.845 115.47888800000025 11.689 74.41693989999987 11.928 93.96646909999885 11.984 66.54550519999954 11.276 64.51745470000093 10.446 64.87535240000052 11.311 99.23113680000108 12.217 64.10025569999962 11.165 102.29067420000067 13.741 158.09707040000026 13.11 113.18596239999835 12.329 88.42907659999851 11.31 88.39075759999987 11.916 108.71979070000114 12.909 109.82012460000185 12.366 102.60735359999822 13.031 82.52068400000098 12.253 149.19712989999795 12.29 115.42846690000187 11.448)
Error minima by case: (0.1443 11 1.5388 10 9.8923 6 15.4016 5 0.9433 10 0.2143 8 0.159 5 1.8843 10 2.2633 5 0.0876 4 0.2613 5 0.4263 3 15.8463 5 0.4747 3 25.6724 5 1.3386 5 25.3464 4 1.3956 4 9.6934 11 9.8029 5 31.6362 6 16.4726 5 1.781 11 0.8853 4 2.2388 9)
Average genome size in population (length): 60.545
Average program size in population (points): 61.545
Average percent parens in population: 0.016
Minimum age in population: 124.2804938410199
Maximum age in population: 129.2363445512286
Average age in population: 127.1812710861796
Median age in population: 127.2638062836674
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.81
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.81
Total error diversity:				 0.129
Error (vector) diversity:			 0.148
Behavioral diversity:				 0.149
--- Run Statistics ---
Number of program evaluations used so far: 90000
Number of point (instruction) evaluations so far: 130629650
--- Timings ---
Current time: 1529615139526 milliseconds
Total Time:         283.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       134.1 seconds, 47.2%
Fitness Testing:    117.9 seconds, 41.5%
Report:              31.9 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 89
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 90
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 90
;;******************************
;; -*- Number IO problem report - generation 90
Test total error for best: 62993.279299999944
Test mean error for best: 31.49664
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -60           
Correct output: 183.1076678776 | Program output: 100           
Correct output: 59.5983956317  | Program output: -17           
Correct output: -40.9433158552 | Program output: -25           
Correct output: 0.6792530208   | Program output: 64            
Correct output: 2.8409776764   | Program output: -55           
Correct output: 87.1156693118  | Program output: 100           
Correct output: 12.7367383479  | Program output: -21           
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 100           
Correct output: 86.5736990631  | Program output: 85            
Correct output: -79.8463167321 | Program output: -49           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 89            
Correct output: -171.6614203645 | Program output: -81           
Correct output: -58.3463633692 | Program output: -8            
Correct output: 80.6043645122  | Program output: 51            
Correct output: -10.3066391796 | Program output: -35           
Correct output: 130.1971143918 | Program output: 80            
Correct output: 150.3637736344 | Program output: 100           
Correct output: -111.4726490012 | Program output: -80           
Correct output: -20.2189788792 | Program output: -37           
Correct output: -40.8852589809 | Program output: 52            
Correct output: 32.7611922962  | Program output: 92            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction print_float} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_inc} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div integer_fromfloat integer_flush in2 integer_max integer_rot float_sub tag_integer_484 integer_flush tag_float_527 float_pop in2 float_dup integer_rot float_sub float_dup_times tag_float_527 float_pop in2 integer_dup_items integer_rot float_sub print_float integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc float_dec integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_fromfloat integer_inc float_dup_times float_inc integer_inc print_integer)
Errors: [2.8557 11 13.4612 12 83.1077 12 76.5984 11 15.9433 12 63.3207 11 57.841 12 12.8843 12 33.7367 12 1.0876 11 1.7387 10 1.5737 11 30.8463 12 0.4747 11 43.3276 14 90.6614 13 50.3464 12 29.6044 11 24.6934 12 50.1971 13 50.3638 12 31.4726 13 16.781 12 92.8853 12 59.2388 11]
Total: 1230.0417999999997
Mean: 24.600836
Genome size: 62
Size: 63
Percent parens: 0.016
--- Population Statistics ---
Average total errors in population: 2662.818769899993
Median total errors in population: 1230.0417999999997
Error averages by case: (67.39401340000005 11.477 76.40887090000007 12.0 135.8275468999968 12.218 123.43460870000138 11.498 77.18866519999936 12.26 116.10366519999782 10.819 111.13468850000025 11.675 70.2751204999999 11.897 89.30419029999923 11.986 60.83178549999958 11.271 59.58678230000095 10.422 59.9045997000005 11.331 93.33696740000089 12.212 59.69427499999956 11.211 97.7686927000006 13.751 152.6859295 13.127 108.04686879999846 12.326 83.36344869999844 11.323 83.20057289999966 11.933 103.3167617000013 12.893 105.45479310000201 12.359 96.66151349999838 13.055 77.10886450000109 12.252 144.5542030999977 12.321 111.13334190000202 11.481)
Error minima by case: (0.1443 11 4.4612 11 14.8923 11 2.4016 11 0.9433 10 0.6793 9 0.159 10 2.8843 10 3.2633 11 0.0876 10 0.2613 8 0.4263 11 0.1537 10 0.4747 10 26.3276 11 75.6614 11 13.3464 11 3.3956 10 12.3066 11 24.1971 11 40.6362 11 16.4726 11 7.781 11 4.1147 11 15.7612 10)
Average genome size in population (length): 60.735
Average program size in population (points): 61.735
Average percent parens in population: 0.016
Minimum age in population: 126.1206032563616
Maximum age in population: 130.7970818620661
Average age in population: 128.5879306094814
Median age in population: 128.6465605142231
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.807
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.807
Total error diversity:				 0.135
Error (vector) diversity:			 0.156
Behavioral diversity:				 0.156
--- Run Statistics ---
Number of program evaluations used so far: 91000
Number of point (instruction) evaluations so far: 132148950
--- Timings ---
Current time: 1529615142599 milliseconds
Total Time:         287.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       135.5 seconds, 47.2%
Fitness Testing:    119.2 seconds, 41.5%
Report:              32.2 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 90
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 91
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 91
;;******************************
;; -*- Number IO problem report - generation 91
Test total error for best: 25511.126300000018
Test mean error for best: 12.75556
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -38           
Correct output: -46.5388439821 | Program output: -32           
Correct output: 183.1076678776 | Program output: 189           
Correct output: 59.5983956317  | Program output: 74            
Correct output: -40.9433158552 | Program output: -26           
Correct output: 0.6792530208   | Program output: 15            
Correct output: 2.8409776764   | Program output: 17            
Correct output: 87.1156693118  | Program output: 89            
Correct output: 12.7367383479  | Program output: 27            
Correct output: 34.9123643533  | Program output: 48            
Correct output: 98.2612616006  | Program output: 102           
Correct output: 86.5736990631  | Program output: 100           
Correct output: -79.8463167321 | Program output: -64           
Correct output: 2.4746909642   | Program output: 17            
Correct output: 132.3276241331 | Program output: 146           
Correct output: -171.6614203645 | Program output: -156          
Correct output: -58.3463633692 | Program output: -43           
Correct output: 80.6043645122  | Program output: 94            
Correct output: -10.3066391796 | Program output: 4             
Correct output: 130.1971143918 | Program output: 144           
Correct output: 150.3637736344 | Program output: 163           
Correct output: -111.4726490012 | Program output: -96           
Correct output: -20.2189788792 | Program output: -6            
Correct output: -40.8852589809 | Program output: -26           
Correct output: 32.7611922962  | Program output: 47            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction float_dec} {:instruction integer_div} {:instruction float_swap} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_mult} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_mod} {:instruction float_pop} {:instruction float_mult} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_cos} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_add} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div tagged_573 float_dec integer_div float_swap integer_flush in2 integer_max integer_mult float_sub float_dup_times tag_float_527 float_mod float_pop float_mult float_pop in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc float_dec integer_min integer_inc float_cos float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc in1 integer_fromfloat integer_inc float_dup_times integer_add integer_inc print_integer)
Errors: [14.8557 12 14.5388 11 5.8923 12 14.4016 13 14.9433 13 14.3207 11 14.159 11 1.8843 11 14.2633 11 13.0876 12 3.7387 11 13.4263 12 15.8463 12 14.5253 11 13.6724 12 15.6614 12 15.3464 11 13.3956 12 14.3066 14 13.8029 12 12.6362 11 15.4726 13 14.219 13 14.8853 12 14.2388 12]
Total: 624.5204000000001
Mean: 12.490408
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2634.475774499993
Median total errors in population: 1230.0417999999997
Error averages by case: (66.40267400000006 11.464 75.41364960000027 12.0 133.89232569999717 12.202 124.2198848000014 11.494 76.74258859999932 12.258 114.80375869999797 10.824 110.97989200000025 11.675 67.66480869999958 11.917 89.23614719999966 11.977 59.6210883999996 11.235 57.54591030000085 10.398 58.14888070000046 11.293 92.39921460000045 12.202 58.59870679999962 11.19 96.02725160000031 13.753 150.86103879999985 13.085 108.01300159999877 12.291 82.38081879999861 11.3 82.80026719999964 11.906 101.823451100001 12.912 103.48831580000164 12.331 95.0961891999989 13.033 76.53504800000083 12.237 143.50685789999795 12.284 109.56600440000166 11.447)
Error minima by case: (0.1443 10 6.4612 11 5.8923 6 4.4016 5 0.9433 11 0.6593 8 0.841 5 1.8843 10 2.2633 5 0.0876 4 0.2613 5 0.4263 3 15.8463 5 0.4747 3 13.6724 5 2.3386 5 15.3464 4 6.3956 4 12.3066 11 13.8029 5 12.6362 6 15.4726 5 9.781 11 0.1147 4 11.2388 10)
Average genome size in population (length): 60.611
Average program size in population (points): 61.611
Average percent parens in population: 0.016
Minimum age in population: 127.3185142816303
Maximum age in population: 131.8503901024597
Average age in population: 129.9915145333239
Median age in population: 130.0076863872177
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.813
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.813
Total error diversity:				 0.114
Error (vector) diversity:			 0.134
Behavioral diversity:				 0.134
--- Run Statistics ---
Number of program evaluations used so far: 92000
Number of point (instruction) evaluations so far: 133665125
--- Timings ---
Current time: 1529615145624 milliseconds
Total Time:         290.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       136.8 seconds, 47.2%
Fitness Testing:    120.5 seconds, 41.6%
Report:              32.5 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 91
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 92
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 92
;;******************************
;; -*- Number IO problem report - generation 92
Test total error for best: 24566.211100000022
Test mean error for best: 12.28311
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -39           
Correct output: -46.5388439821 | Program output: -33           
Correct output: 183.1076678776 | Program output: 188           
Correct output: 59.5983956317  | Program output: 73            
Correct output: -40.9433158552 | Program output: -27           
Correct output: 0.6792530208   | Program output: 14            
Correct output: 2.8409776764   | Program output: 16            
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 26            
Correct output: 34.9123643533  | Program output: 47            
Correct output: 98.2612616006  | Program output: 101           
Correct output: 86.5736990631  | Program output: 99            
Correct output: -79.8463167321 | Program output: -65           
Correct output: 2.4746909642   | Program output: 16            
Correct output: 132.3276241331 | Program output: 145           
Correct output: -171.6614203645 | Program output: -157          
Correct output: -58.3463633692 | Program output: -44           
Correct output: 80.6043645122  | Program output: 93            
Correct output: -10.3066391796 | Program output: 3             
Correct output: 130.1971143918 | Program output: 143           
Correct output: 150.3637736344 | Program output: 162           
Correct output: -111.4726490012 | Program output: -97           
Correct output: -20.2189788792 | Program output: -7            
Correct output: -40.8852589809 | Program output: -27           
Correct output: 32.7611922962  | Program output: 46            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction float_dec} {:instruction integer_div} {:instruction float_swap} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_mult} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_mod} {:instruction float_pop} {:instruction float_mult} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_cos} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_sin} {:instruction integer_inc} {:instruction integer_inc} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_add} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div tagged_573 float_dec integer_div float_swap integer_flush in2 integer_max integer_mult float_sub float_dup_times tag_float_527 float_mod float_pop float_mult float_pop in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc float_dec integer_min integer_inc float_cos float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_sin integer_inc integer_inc in1 integer_fromfloat integer_inc float_dup_times integer_add integer_inc print_integer)
Errors: [13.8557 12 13.5388 11 4.8923 11 13.4016 12 13.9433 13 13.3207 12 13.159 11 0.8843 11 13.2633 11 12.0876 12 2.7387 11 12.4263 11 14.8463 12 13.5253 11 12.6724 12 14.6614 13 14.3464 12 12.3956 12 13.3066 13 12.8029 11 11.6362 12 14.4726 13 13.219 12 13.8853 12 13.2388 12]
Total: 597.5204
Mean: 11.950408
Genome size: 59
Size: 60
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2804.572996899991
Median total errors in population: 1230.0417999999997
Error averages by case: (74.28426130000005 11.52 82.78636120000017 12.036 141.44229939999664 12.254 127.3231616000015 11.55 83.88292879999929 12.271 120.96089239999759 10.817 116.01363700000024 11.68 76.02045670000004 11.912 94.47278559999906 11.977 67.8910207999994 11.301 66.36381450000113 10.487 66.02072580000042 11.329 100.00498310000073 12.215 64.19390189999949 11.203 102.8220472000005 13.72 158.63073180000023 13.11 113.75761599999822 12.341 88.8751791999982 11.344 89.0331301999996 11.906 108.17872620000122 12.893 110.56442360000219 12.336 103.3768261999982 13.044 83.22753100000129 12.278 149.78441139999737 12.341 115.32014400000226 11.476)
Error minima by case: (0.1443 11 2.4612 11 4.8923 10 12.4016 10 0.0567 10 0.6793 9 0.159 10 0.8843 10 3.2633 11 0.0876 10 0.2613 9 0.4263 11 14.8463 11 0.4747 10 12.6724 10 2.3386 11 14.3464 11 5.6044 9 4.3066 11 2.8029 10 11.6362 11 14.4726 10 5.219 11 8.1147 11 6.2388 10)
Average genome size in population (length): 60.567
Average program size in population (points): 61.567
Average percent parens in population: 0.016
Minimum age in population: 128.7821602627354
Maximum age in population: 133.2950352272753
Average age in population: 131.4145148797783
Median age in population: 131.4243248028727
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.832
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.832
Total error diversity:				 0.131
Error (vector) diversity:			 0.155
Behavioral diversity:				 0.156
--- Run Statistics ---
Number of program evaluations used so far: 93000
Number of point (instruction) evaluations so far: 135180325
--- Timings ---
Current time: 1529615148979 milliseconds
Total Time:         293.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       138.5 seconds, 47.2%
Fitness Testing:    121.8 seconds, 41.5%
Report:              32.9 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 92
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 93
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 93
;;******************************
;; -*- Number IO problem report - generation 93
Test total error for best: 22206.21110000003
Test mean error for best: 11.10311
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -41           
Correct output: -46.5388439821 | Program output: -35           
Correct output: 183.1076678776 | Program output: 188           
Correct output: 59.5983956317  | Program output: 71            
Correct output: -40.9433158552 | Program output: -29           
Correct output: 0.6792530208   | Program output: 11            
Correct output: 2.8409776764   | Program output: 14            
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 24            
Correct output: 34.9123643533  | Program output: 44            
Correct output: 98.2612616006  | Program output: 101           
Correct output: 86.5736990631  | Program output: 96            
Correct output: -79.8463167321 | Program output: -67           
Correct output: 2.4746909642   | Program output: 14            
Correct output: 132.3276241331 | Program output: 142           
Correct output: -171.6614203645 | Program output: -159          
Correct output: -58.3463633692 | Program output: -46           
Correct output: 80.6043645122  | Program output: 90            
Correct output: -10.3066391796 | Program output: 1             
Correct output: 130.1971143918 | Program output: 140           
Correct output: 150.3637736344 | Program output: 160           
Correct output: -111.4726490012 | Program output: -99           
Correct output: -20.2189788792 | Program output: -9            
Correct output: -40.8852589809 | Program output: -30           
Correct output: 32.7611922962  | Program output: 43            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction integer_add} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction tag_integer_484} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction integer_swap} {:instruction tag_float_527} {:instruction float_flush} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_cos} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction float_sin} {:instruction integer_inc} {:instruction integer_inc} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_add} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div integer_fromfloat integer_flush integer_add integer_max integer_rot float_sub tag_integer_484 tag_integer_484 integer_flush tag_float_527 float_pop in2 float_dup integer_rot float_sub integer_swap tag_float_527 float_flush in2 integer_dup_items integer_rot float_sub float_pop integer_inc float_dup_times float_mod float_pop integer_inc float_dec integer_min integer_inc float_cos float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan float_sin integer_inc integer_inc in1 integer_fromfloat integer_inc float_dup_times integer_add integer_inc print_integer)
Errors: [11.8557 12 11.5388 12 4.8923 11 11.4016 12 11.9433 12 10.3207 12 11.159 11 0.8843 11 11.2633 11 9.0876 11 2.7387 11 9.4263 11 12.8463 11 11.5253 11 9.6724 12 12.6614 13 12.3464 11 9.3956 12 11.3066 13 9.8029 12 9.6362 12 12.4726 13 11.219 12 10.8853 12 10.2388 13]
Total: 544.5204
Mean: 10.890408
Genome size: 58
Size: 59
Percent parens: 0.017
--- Population Statistics ---
Average total errors in population: 2510.9761941999936
Median total errors in population: 1230.0417999999997
Error averages by case: (61.63582840000006 11.483 70.45751199999977 11.961 127.93356059999734 12.219 118.9403584000013 11.52 71.61847519999938 12.265 108.91889239999783 10.849 105.58420600000025 11.662 63.89463859999939 11.88 84.38878559999972 11.976 55.65014479999956 11.264 54.272462800000966 10.467 54.90219980000047 11.313 86.70359980000003 12.184 56.77992119999962 11.22 91.63763280000009 13.721 143.06168439999925 13.081 101.83242639999895 12.263 78.22484959999855 11.35 77.86237079999935 11.983 97.22205380000065 12.889 98.80841640000132 12.31 89.24507959999903 13.057 71.67256000000094 12.253 136.48518199999785 12.298 104.28835280000158 11.487)
Error minima by case: (0.1443 10 1.4612 11 4.8923 11 0.5984 11 2.9433 10 0.3207 9 0.159 10 0.8843 10 2.2633 11 0.0876 10 0.2613 8 0.4263 10 12.8463 11 0.4747 10 9.6724 12 4.3386 11 10.3464 11 2.6044 10 0.6934 11 5.8029 11 9.6362 11 12.4726 11 6.781 11 7.1147 11 10.2388 11)
Average genome size in population (length): 60.632
Average program size in population (points): 61.632
Average percent parens in population: 0.016
Minimum age in population: 130.2520823047273
Maximum age in population: 134.8183164226043
Average age in population: 132.8728160704142
Median age in population: 132.9066189057565
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.79
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.79
Total error diversity:				 0.14
Error (vector) diversity:			 0.167
Behavioral diversity:				 0.168
--- Run Statistics ---
Number of program evaluations used so far: 94000
Number of point (instruction) evaluations so far: 136696875
--- Timings ---
Current time: 1529615152302 milliseconds
Total Time:         296.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       140.0 seconds, 47.2%
Fitness Testing:    123.3 seconds, 41.6%
Report:              33.2 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 93
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 94
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 94
;;******************************
;; -*- Number IO problem report - generation 94
Test total error for best: 17115.9701
Test mean error for best: 8.55799
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: 
-48          
Correct output: -46.5388439821 | Program output: 
-42          
Correct output: 183.1076678776 | Program output: 
188          
Correct output: 59.5983956317  | Program output: 
64           
Correct output: -40.9433158552 | Program output: 
-36          
Correct output: 0.6792530208   | Program output: 
6            
Correct output: 2.8409776764   | Program output: 
7            
Correct output: 87.1156693118  | Program output: 
93           
Correct output: 12.7367383479  | Program output: 
17           
Correct output: 34.9123643533  | Program output: 
39           
Correct output: 98.2612616006  | Program output: 
103          
Correct output: 86.5736990631  | Program output: 
91           
Correct output: -79.8463167321 | Program output: 
-74          
Correct output: 2.4746909642   | Program output: 
7            
Correct output: 132.3276241331 | Program output: 
137          
Correct output: -171.6614203645 | Program output: 
-166         
Correct output: -58.3463633692 | Program output: 
-53          
Correct output: 80.6043645122  | Program output: 
85           
Correct output: -10.3066391796 | Program output: 
-6           
Correct output: 130.1971143918 | Program output: 
135          
Correct output: 150.3637736344 | Program output: 
155          
Correct output: -111.4726490012 | Program output: 
-106         
Correct output: -20.2189788792 | Program output: 
-16          
Correct output: -40.8852589809 | Program output: 
-35          
Correct output: 32.7611922962  | Program output: 
38           
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction float_dec} {:instruction integer_div} {:instruction float_swap} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_yank} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_mod} {:instruction float_pop} {:instruction float_mult} {:instruction float_pop} {:instruction in2} {:instruction print_newline} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_flush} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sin} {:instruction integer_inc} {:instruction integer_inc} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_add} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div tagged_573 float_dec integer_div float_swap integer_flush in2 integer_max integer_yank float_sub float_dup_times tag_float_527 float_mod float_pop float_mult float_pop in2 print_newline integer_rot float_sub float_pop float_pop in2 float_dup integer_rot float_flush float_dup_times tag_float_527 float_pop in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min integer_inc float_sin integer_inc integer_inc in1 integer_fromfloat integer_inc float_dup_times integer_add integer_inc print_integer)
Errors: [4.8557 13 4.5388 12 4.8923 12 4.4016 12 4.9433 13 5.3207 11 4.159 11 5.8843 11 4.2633 12 4.0876 12 4.7387 11 4.4263 11 5.8463 12 4.5253 11 4.6724 12 5.6614 12 5.3464 12 4.3956 12 4.3066 13 4.8029 12 4.6362 13 5.4726 13 4.219 13 5.8853 13 5.2388 13]
Total: 423.5204
Mean: 8.470408
Genome size: 48
Size: 49
Percent parens: 0.020
--- Population Statistics ---
Average total errors in population: 2573.026550999996
Median total errors in population: 1230.0417999999997
Error averages by case: (68.64591210000006 11.633 75.82661320000022 11.923 123.95151229999829 12.175 113.54904320000082 11.671 76.55075869999934 12.345 109.38979909999786 10.904 103.81138300000015 11.565 69.93999389999976 11.801 85.90898569999952 11.885 64.5209479999995 11.361 62.14667890000102 10.578 64.04520110000027 11.38 89.84267570000056 12.161 61.59578349999976 11.239 94.46423240000031 13.476 137.94970019999877 13.007 101.19430879999872 12.231 83.30480439999901 11.476 81.11504419999986 12.179 99.10606290000071 12.704 100.3449162000011 12.22 92.68266179999861 13.039 76.15960300000063 12.326 132.55959069999807 12.293 105.19433800000168 11.654)
Error minima by case: (0.1443 11 3.4612 11 1.8923 11 4.4016 10 1.9433 10 0.3207 9 0.159 10 0.1157 10 4.2633 9 0.0876 10 0.2613 9 0.4263 10 4.1537 11 0.4747 10 4.6724 11 5.6614 11 5.3464 11 0.3956 9 4.3066 11 4.8029 11 4.6362 11 5.4726 11 4.219 11 0.8853 11 5.2388 10)
Average genome size in population (length): 60.018
Average program size in population (points): 61.018
Average percent parens in population: 0.017
Minimum age in population: 131.4942103415321
Maximum age in population: 136.3919640806775
Average age in population: 134.3758778630311
Median age in population: 134.4067046054586
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.797
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.797
Total error diversity:				 0.179
Error (vector) diversity:			 0.201
Behavioral diversity:				 0.202
--- Run Statistics ---
Number of program evaluations used so far: 95000
Number of point (instruction) evaluations so far: 138197925
--- Timings ---
Current time: 1529615155435 milliseconds
Total Time:         299.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       141.5 seconds, 47.2%
Fitness Testing:    124.6 seconds, 41.6%
Report:              33.6 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 94
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 95
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 95
;;******************************
;; -*- Number IO problem report - generation 95
Test total error for best: 14404.970099999986
Test mean error for best: 7.20249
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -44           
Correct output: 183.1076678776 | Program output: 186           
Correct output: 59.5983956317  | Program output: 62            
Correct output: -40.9433158552 | Program output: -38           
Correct output: 0.6792530208   | Program output: 4             
Correct output: 2.8409776764   | Program output: 5             
Correct output: 87.1156693118  | Program output: 91            
Correct output: 12.7367383479  | Program output: 15            
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 101           
Correct output: 86.5736990631  | Program output: 89            
Correct output: -79.8463167321 | Program output: -76           
Correct output: 2.4746909642   | Program output: 5             
Correct output: 132.3276241331 | Program output: 135           
Correct output: -171.6614203645 | Program output: -168          
Correct output: -58.3463633692 | Program output: -55           
Correct output: 80.6043645122  | Program output: 83            
Correct output: -10.3066391796 | Program output: -8            
Correct output: 130.1971143918 | Program output: 133           
Correct output: 150.3637736344 | Program output: 153           
Correct output: -111.4726490012 | Program output: -108          
Correct output: -20.2189788792 | Program output: -18           
Correct output: -40.8852589809 | Program output: -37           
Correct output: 32.7611922962  | Program output: 36            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_swap} {:instruction integer_max} {:instruction integer_flush} {:instruction integer_add} {:instruction tagged_117} {:instruction integer_rot} {:instruction float_sub} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction integer_div} {:instruction float_swap} {:instruction integer_flush} {:instruction in2} {:instruction float_pop} {:instruction integer_rot} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction in2} {:instruction integer_inc} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_add} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_swap integer_max integer_flush integer_add tagged_117 integer_rot float_sub tag_integer_484 integer_flush tag_float_527 integer_div float_swap integer_flush in2 float_pop integer_rot integer_flush tag_float_527 float_pop in2 float_dup integer_rot float_pop in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc float_dec integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan integer_inc in2 integer_inc in1 integer_fromfloat integer_inc float_dup_times integer_add integer_inc print_integer)
Errors: [2.8557 11 2.5388 11 2.8923 11 2.4016 12 2.9433 11 3.3207 12 2.159 12 3.8843 11 2.2633 12 2.0876 12 2.7387 11 2.4263 11 3.8463 11 2.5253 12 2.6724 12 3.6614 12 3.3464 12 2.3956 11 2.3066 13 2.8029 11 2.6362 11 3.4726 12 2.219 11 3.8853 13 3.2388 11]
Total: 360.5204
Mean: 7.210408
Genome size: 72
Size: 73
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2315.229448499999
Median total errors in population: 641.5204000000001
Error averages by case: (73.06500590000006 11.913 76.21852440000005 11.717 88.31035130000058 11.986 88.94864799999934 12.052 75.08487209999932 12.469 89.43710229999805 11.154 86.54703099999986 11.333 68.68477069999948 11.459 78.28316309999992 11.541 70.54399239999938 11.5 64.48646280000108 10.902 69.9268306999998 11.512 83.26167569999994 11.945 69.16511270000025 11.303 81.24756440000017 12.653 102.16005459999838 12.75 85.49119119999959 11.994 77.55539400000079 11.809 76.53231920000056 12.921 83.18157729999997 12.121 81.67140119999978 11.952 85.39177139999909 13.012 75.16844699999939 12.456 98.57080229999897 12.161 87.51038280000103 12.17)
Error minima by case: (0.1443 11 2.5388 10 1.8923 6 2.4016 5 0.0567 9 0.3207 9 0.159 5 0.1157 10 2.2633 5 0.0876 5 0.2613 5 0.4263 4 3.8463 4 0.4747 5 2.6724 6 3.6614 4 2.6536 4 2.3956 5 2.3066 11 2.8029 6 0.3638 6 3.4726 4 2.219 11 3.8853 4 3.2388 11)
Average genome size in population (length): 59.118
Average program size in population (points): 60.118
Average percent parens in population: 0.017
Minimum age in population: 133.7031036019851
Maximum age in population: 138.1634969658953
Average age in population: 136.0435292974948
Median age in population: 136.0884576612924
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 26
Genome diversity (% unique Plush genomes):	 0.744
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 26
Syntactic diversity (% unique Push programs):	 0.744
Total error diversity:				 0.23
Error (vector) diversity:			 0.247
Behavioral diversity:				 0.248
--- Run Statistics ---
Number of program evaluations used so far: 96000
Number of point (instruction) evaluations so far: 139676425
--- Timings ---
Current time: 1529615158594 milliseconds
Total Time:         303.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       143.0 seconds, 47.2%
Fitness Testing:    125.9 seconds, 41.6%
Report:              33.9 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 95
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 96
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 96
;;******************************
;; -*- Number IO problem report - generation 96
Test total error for best: 14404.970099999986
Test mean error for best: 7.20249
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -50           
Correct output: -46.5388439821 | Program output: -44           
Correct output: 183.1076678776 | Program output: 186           
Correct output: 59.5983956317  | Program output: 62            
Correct output: -40.9433158552 | Program output: -38           
Correct output: 0.6792530208   | Program output: 4             
Correct output: 2.8409776764   | Program output: 5             
Correct output: 87.1156693118  | Program output: 91            
Correct output: 12.7367383479  | Program output: 15            
Correct output: 34.9123643533  | Program output: 37            
Correct output: 98.2612616006  | Program output: 101           
Correct output: 86.5736990631  | Program output: 89            
Correct output: -79.8463167321 | Program output: -76           
Correct output: 2.4746909642   | Program output: 5             
Correct output: 132.3276241331 | Program output: 135           
Correct output: -171.6614203645 | Program output: -168          
Correct output: -58.3463633692 | Program output: -55           
Correct output: 80.6043645122  | Program output: 83            
Correct output: -10.3066391796 | Program output: -8            
Correct output: 130.1971143918 | Program output: 133           
Correct output: 150.3637736344 | Program output: 153           
Correct output: -111.4726490012 | Program output: -108          
Correct output: -20.2189788792 | Program output: -18           
Correct output: -40.8852589809 | Program output: -37           
Correct output: 32.7611922962  | Program output: 36            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction float_dec} {:instruction integer_div} {:instruction float_swap} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_mult} {:instruction float_sub} {:instruction integer_inc} {:instruction tag_float_527} {:instruction float_mod} {:instruction float_pop} {:instruction float_mult} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_min} {:instruction float_min} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction float_tan} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_cos} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction in2} {:instruction integer_inc} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_add} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div tagged_573 float_dec integer_div float_swap integer_flush in2 integer_max integer_mult float_sub integer_inc tag_float_527 float_mod float_pop float_mult float_pop in2 integer_dup_items integer_rot float_sub float_pop integer_inc integer_min float_min float_dup_times integer_inc float_dup_times float_mod float_pop float_tan float_dec integer_min integer_inc float_cos float_tan integer_inc integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan integer_inc integer_inc integer_inc in1 integer_fromfloat float_shove float_mod 92 integer_inc integer_min integer_inc float_dup_times float_tan integer_inc in2 integer_inc in1 integer_fromfloat integer_inc float_dup_times integer_add integer_inc print_integer)
Errors: [2.8557 11 2.5388 11 2.8923 11 2.4016 12 2.9433 11 3.3207 12 2.159 12 3.8843 11 2.2633 12 2.0876 12 2.7387 11 2.4263 11 3.8463 11 2.5253 12 2.6724 12 3.6614 12 3.3464 12 2.3956 11 2.3066 13 2.8029 11 2.6362 11 3.4726 12 2.219 11 3.8853 13 3.2388 11]
Total: 360.5204
Mean: 7.210408
Genome size: 72
Size: 73
Percent parens: 0.014
--- Population Statistics ---
Average total errors in population: 2127.0804439999974
Median total errors in population: 565.5204
Error averages by case: (75.12842870000006 12.038 76.56729919999957 11.78 69.09684000000011 11.841 74.25240799999874 12.297 72.16387209999932 12.256 75.09116059999832 11.305 77.01823799999971 11.393 67.45659699999955 11.303 73.09823059999997 11.449 69.99530639999936 11.46 66.0698696000011 11.151 70.31830299999994 11.646 75.86498309999999 11.747 69.16078930000025 11.467 71.30092000000049 12.059 81.21174759999863 12.403 73.01015200000012 11.932 69.8184140000015 11.877 74.22203440000068 13.091 71.51295480000012 11.852 71.27159799999987 11.996 79.52040839999898 12.703 74.10859599999866 12.314 76.94135799999992 12.238 74.79793520000054 12.484)
Error minima by case: (0.1443 10 2.5388 10 0.1077 11 2.4016 10 2.9433 11 0.6793 10 2.159 10 0.1157 10 2.2633 10 0.9124 11 0.2613 10 1.4263 11 0.8463 11 1.4747 10 1.6724 11 3.3386 11 3.3464 11 0.3956 11 2.3066 10 0.8029 11 0.3638 11 0.5274 11 2.219 11 2.8853 11 2.2388 11)
Average genome size in population (length): 55.677
Average program size in population (points): 56.677
Average percent parens in population: 0.018
Minimum age in population: 135.013678093225
Maximum age in population: 139.4717670941486
Average age in population: 137.6584095642982
Median age in population: 137.7013903813222
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.682
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.682
Total error diversity:				 0.21
Error (vector) diversity:			 0.22
Behavioral diversity:				 0.221
--- Run Statistics ---
Number of program evaluations used so far: 97000
Number of point (instruction) evaluations so far: 141069300
--- Timings ---
Current time: 1529615161725 milliseconds
Total Time:         306.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       144.5 seconds, 47.2%
Fitness Testing:    127.2 seconds, 41.5%
Report:              34.3 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 96
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 97
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 97
;;******************************
;; -*- Number IO problem report - generation 97
Test total error for best: 14056.232499999991
Test mean error for best: 7.02812
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: 
-51          
Correct output: -46.5388439821 | Program output: 
-45          
Correct output: 183.1076678776 | Program output: 
185          
Correct output: 59.5983956317  | Program output: 
61           
Correct output: -40.9433158552 | Program output: 
-39          
Correct output: 0.6792530208   | Program output: 
3            
Correct output: 2.8409776764   | Program output: 
4            
Correct output: 87.1156693118  | Program output: 
85           
Correct output: 12.7367383479  | Program output: 
14           
Correct output: 34.9123643533  | Program output: 
36           
Correct output: 98.2612616006  | Program output: 
98           
Correct output: 86.5736990631  | Program output: 
88           
Correct output: -79.8463167321 | Program output: 
-77          
Correct output: 2.4746909642   | Program output: 
4            
Correct output: 132.3276241331 | Program output: 
134          
Correct output: -171.6614203645 | Program output: 
-169         
Correct output: -58.3463633692 | Program output: 
-56          
Correct output: 80.6043645122  | Program output: 
82           
Correct output: -10.3066391796 | Program output: 
-9           
Correct output: 130.1971143918 | Program output: 
132          
Correct output: 150.3637736344 | Program output: 
152          
Correct output: -111.4726490012 | Program output: 
-109         
Correct output: -20.2189788792 | Program output: 
-19          
Correct output: -40.8852589809 | Program output: 
-38          
Correct output: 32.7611922962  | Program output: 
35           
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction float_dec} {:instruction integer_div} {:instruction float_swap} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_yank} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_mod} {:instruction float_pop} {:instruction float_mult} {:instruction float_pop} {:instruction in2} {:instruction print_newline} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_add} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div tagged_573 float_dec integer_div float_swap integer_flush in2 integer_max integer_yank float_sub float_dup_times tag_float_527 float_mod float_pop float_mult float_pop in2 print_newline integer_rot float_sub float_pop float_pop in2 float_dup integer_rot float_flush integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min in1 integer_fromfloat integer_inc float_dup_times integer_add integer_inc print_integer)
Errors: [1.8557 13 1.5388 12 1.8923 12 1.4016 11 1.9433 13 2.3207 11 1.159 11 2.1157 12 1.2633 12 1.0876 11 0.2613 12 1.4263 13 2.8463 12 1.5253 11 1.6724 12 2.6614 13 2.3464 12 1.3956 12 1.3066 13 1.8029 12 1.6362 13 2.4726 13 1.219 12 2.8853 13 2.2388 13]
Total: 348.27439999999996
Mean: 6.965488
Genome size: 43
Size: 44
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2218.9153067999987
Median total errors in population: 451.52040000000005
Error averages by case: (79.17361340000006 12.094 80.17244559999948 11.796 75.5186553000007 11.912 80.18957279999867 12.013 77.43394939999928 11.986 74.40112269999842 11.118 80.42694499999973 11.279 73.14063010000031 11.424 78.36691140000043 11.566 72.00169319999934 11.593 73.0010857000011 11.139 73.6824663000004 11.547 80.07190340000007 11.717 71.87508089999979 11.454 74.7049028000004 11.962 83.5268423999985 11.821 77.7895311999996 11.849 73.43408440000158 11.651 78.25398260000057 12.913 74.78496930000001 11.876 75.14605139999958 11.893 81.67790159999906 12.371 78.59077799999866 12.248 78.4300138999997 12.861 76.91617400000074 12.121)
Error minima by case: (1.1443 10 1.5388 9 0.1077 10 1.4016 10 0.0567 11 0.3207 10 1.159 10 0.1157 10 1.2633 10 0.0876 10 0.2613 9 1.4263 9 0.8463 10 1.4747 10 1.6724 10 2.6614 10 0.3464 11 0.6044 11 1.3066 11 0.8029 11 1.6362 11 0.5274 11 1.219 11 2.8853 11 2.2388 9)
Average genome size in population (length): 51.641
Average program size in population (points): 52.641
Average percent parens in population: 0.020
Minimum age in population: 136.6209759807363
Maximum age in population: 141.0950129185767
Average age in population: 139.1779007368002
Median age in population: 139.1912527660263
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 26
Genome diversity (% unique Plush genomes):	 0.663
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 26
Syntactic diversity (% unique Push programs):	 0.663
Total error diversity:				 0.204
Error (vector) diversity:			 0.222
Behavioral diversity:				 0.223
--- Run Statistics ---
Number of program evaluations used so far: 98000
Number of point (instruction) evaluations so far: 142361412
--- Timings ---
Current time: 1529615164996 milliseconds
Total Time:         309.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       146.0 seconds, 47.2%
Fitness Testing:    128.6 seconds, 41.6%
Report:              34.7 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 97
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 98
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 98
;;******************************
;; -*- Number IO problem report - generation 98
Test total error for best: 13348.232499999998
Test mean error for best: 6.67412
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -51           
Correct output: -46.5388439821 | Program output: -45           
Correct output: 183.1076678776 | Program output: 185           
Correct output: 59.5983956317  | Program output: 61            
Correct output: -40.9433158552 | Program output: -39           
Correct output: 0.6792530208   | Program output: 3             
Correct output: 2.8409776764   | Program output: 4             
Correct output: 87.1156693118  | Program output: 85            
Correct output: 12.7367383479  | Program output: 14            
Correct output: 34.9123643533  | Program output: 36            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 88            
Correct output: -79.8463167321 | Program output: -77           
Correct output: 2.4746909642   | Program output: 4             
Correct output: 132.3276241331 | Program output: 134           
Correct output: -171.6614203645 | Program output: -169          
Correct output: -58.3463633692 | Program output: -56           
Correct output: 80.6043645122  | Program output: 82            
Correct output: -10.3066391796 | Program output: -9            
Correct output: 130.1971143918 | Program output: 132           
Correct output: 150.3637736344 | Program output: 152           
Correct output: -111.4726490012 | Program output: -109          
Correct output: -20.2189788792 | Program output: -19           
Correct output: -40.8852589809 | Program output: -38           
Correct output: 32.7611922962  | Program output: 35            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction integer_min} {:instruction integer_flush} {:instruction integer_stackdepth} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_mult} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_mod} {:instruction float_pop} {:instruction float_mult} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_add} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div integer_min integer_flush integer_stackdepth integer_flush tag_float_527 float_pop in2 float_dup integer_mult float_sub float_dup_times tag_float_527 float_mod float_pop float_mult float_pop in2 integer_dup_items float_pop in2 float_dup integer_rot float_flush integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min in1 integer_fromfloat integer_inc float_dup_times integer_add integer_inc print_integer)
Errors: [1.8557 12 1.5388 11 1.8923 12 1.4016 11 1.9433 12 2.3207 11 1.159 11 2.1157 11 1.2633 11 1.0876 11 0.2613 11 1.4263 12 2.8463 11 1.5253 11 1.6724 11 2.6614 12 2.3464 11 1.3956 11 1.3066 12 1.8029 12 1.6362 12 2.4726 12 1.219 11 2.8853 12 2.2388 12]
Total: 330.27439999999996
Mean: 6.605488
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2295.7776619999986
Median total errors in population: 406.5204
Error averages by case: (80.27108670000005 12.247 81.3126651999996 11.583 80.79565530000045 11.658 82.06992639999878 11.769 76.95982049999937 12.109 80.3231226999983 11.194 82.32181099999974 11.192 81.13124169999982 11.511 79.94827570000018 11.577 75.59713119999937 11.807 79.87548260000104 11.203 78.86172930000012 11.387 80.91005330000009 11.765 73.78252430000023 11.38 79.45862680000076 11.835 84.10863019999866 12.06 78.88876000000023 11.733 77.60908440000154 11.445 80.27717140000077 12.735 79.24557510000035 11.846 80.07059619999986 11.903 82.24608659999915 12.525 79.91855099999871 12.057 82.06835800000016 12.989 82.40869640000038 11.807)
Error minima by case: (0.1443 11 1.5388 10 0.1077 10 1.4016 10 0.0567 10 0.3207 9 1.159 10 0.1157 10 1.2633 9 0.9124 10 0.2613 10 0.4263 10 2.8463 10 0.5253 10 1.6724 10 2.6614 11 1.6536 11 0.3956 10 1.3066 11 0.8029 11 1.6362 11 2.4726 11 1.219 11 2.8853 11 0.2388 10)
Average genome size in population (length): 52.409
Average program size in population (points): 53.409
Average percent parens in population: 0.020
Minimum age in population: 138.3991619830233
Maximum age in population: 142.7782974338525
Average age in population: 140.8691209083283
Median age in population: 140.9027048178896
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 28
Genome diversity (% unique Plush genomes):	 0.698
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 28
Syntactic diversity (% unique Push programs):	 0.698
Total error diversity:				 0.148
Error (vector) diversity:			 0.155
Behavioral diversity:				 0.157
--- Run Statistics ---
Number of program evaluations used so far: 99000
Number of point (instruction) evaluations so far: 143672587
--- Timings ---
Current time: 1529615167945 milliseconds
Total Time:         312.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       147.4 seconds, 47.2%
Fitness Testing:    129.8 seconds, 41.5%
Report:              35.1 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 98
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 99
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 99
;;******************************
;; -*- Number IO problem report - generation 99
Test total error for best: 12333.418699999998
Test mean error for best: 6.16671
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -52           
Correct output: -46.5388439821 | Program output: -46           
Correct output: 183.1076678776 | Program output: 184           
Correct output: 59.5983956317  | Program output: 60            
Correct output: -40.9433158552 | Program output: -40           
Correct output: 0.6792530208   | Program output: 2             
Correct output: 2.8409776764   | Program output: 3             
Correct output: 87.1156693118  | Program output: 84            
Correct output: 12.7367383479  | Program output: 13            
Correct output: 34.9123643533  | Program output: 35            
Correct output: 98.2612616006  | Program output: 97            
Correct output: 86.5736990631  | Program output: 87            
Correct output: -79.8463167321 | Program output: -78           
Correct output: 2.4746909642   | Program output: 3             
Correct output: 132.3276241331 | Program output: 133           
Correct output: -171.6614203645 | Program output: -170          
Correct output: -58.3463633692 | Program output: -57           
Correct output: 80.6043645122  | Program output: 81            
Correct output: -10.3066391796 | Program output: -10           
Correct output: 130.1971143918 | Program output: 131           
Correct output: 150.3637736344 | Program output: 151           
Correct output: -111.4726490012 | Program output: -110          
Correct output: -20.2189788792 | Program output: -20           
Correct output: -40.8852589809 | Program output: -39           
Correct output: 32.7611922962  | Program output: 34            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction float_dec} {:instruction integer_div} {:instruction float_swap} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_sub} {:instruction float_pop} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction float_inc} {:instruction float_flush} {:instruction integer_rot} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_yankdup} {:instruction print_integer})
Best program: (integer_min integer_div tagged_573 float_dec integer_div float_swap integer_flush in2 integer_max integer_yank integer_rot float_sub float_pop float_pop in2 float_dup float_inc float_flush integer_rot float_flush integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min in1 integer_fromfloat integer_inc float_dup_times integer_add float_yankdup print_integer)
Errors: [0.8557 11 0.5388 11 0.8923 12 0.4016 12 0.9433 11 1.3207 11 0.159 12 3.1157 12 0.2633 11 0.0876 11 1.2613 12 0.4263 11 1.8463 11 0.5253 12 0.6724 11 1.6614 11 1.3464 12 0.3956 11 0.3066 11 0.8029 11 0.6362 12 1.4726 11 0.219 11 1.8853 12 1.2388 12]
Total: 308.2744
Mean: 6.165488
Genome size: 36
Size: 37
Percent parens: 0.027
--- Population Statistics ---
Average total errors in population: 2349.9348185999997
Median total errors in population: 360.5204
Error averages by case: (80.57306650000005 11.831 81.55166959999933 11.419 85.21243990000107 11.522 81.83214719999889 11.7 77.92796999999946 11.821 83.98297109999837 11.493 82.32271899999974 11.513 85.25534070000059 11.532 80.30469860000045 11.771 78.76865679999948 11.848 82.99616060000095 11.139 82.79787670000073 11.446 81.68290150000027 11.62 76.61935319999952 11.56 83.77962679999992 11.879 84.38690559999887 12.321 80.07226319999948 11.857 81.99287560000151 11.315 80.63815720000038 12.766 83.6603634999996 11.555 84.32541339999922 11.641 82.75623039999905 12.385 80.35839799999887 11.522 86.45209629999961 13.005 85.72251720000085 11.501)
Error minima by case: (0.1443 11 0.5388 10 0.8923 10 0.4016 11 0.0567 10 1.3207 10 0.159 10 0.1157 10 0.2633 10 0.0876 10 0.2613 10 0.4263 11 1.8463 11 0.4747 10 0.6724 10 1.6614 11 0.3464 10 0.3956 10 0.3066 10 0.8029 11 0.6362 11 1.4726 11 0.219 10 1.8853 11 1.2388 10)
Average genome size in population (length): 59.273
Average program size in population (points): 60.273
Average percent parens in population: 0.018
Minimum age in population: 140.1546046513142
Maximum age in population: 144.6551219661472
Average age in population: 142.4578430803844
Median age in population: 142.4991516936494
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.751
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.751
Total error diversity:				 0.114
Error (vector) diversity:			 0.114
Behavioral diversity:				 0.115
--- Run Statistics ---
Number of program evaluations used so far: 100000
Number of point (instruction) evaluations so far: 145155162
--- Timings ---
Current time: 1529615171024 milliseconds
Total Time:         315.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       148.9 seconds, 47.2%
Fitness Testing:    131.1 seconds, 41.6%
Report:              35.3 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 99
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 100
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 100
;;******************************
;; -*- Number IO problem report - generation 100
Test total error for best: 12237.970099999991
Test mean error for best: 6.11899
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -52           
Correct output: -46.5388439821 | Program output: -46           
Correct output: 183.1076678776 | Program output: 184           
Correct output: 59.5983956317  | Program output: 60            
Correct output: -40.9433158552 | Program output: -40           
Correct output: 0.6792530208   | Program output: 2             
Correct output: 2.8409776764   | Program output: 3             
Correct output: 87.1156693118  | Program output: 89            
Correct output: 12.7367383479  | Program output: 13            
Correct output: 34.9123643533  | Program output: 35            
Correct output: 98.2612616006  | Program output: 99            
Correct output: 86.5736990631  | Program output: 87            
Correct output: -79.8463167321 | Program output: -78           
Correct output: 2.4746909642   | Program output: 3             
Correct output: 132.3276241331 | Program output: 133           
Correct output: -171.6614203645 | Program output: -170          
Correct output: -58.3463633692 | Program output: -57           
Correct output: 80.6043645122  | Program output: 81            
Correct output: -10.3066391796 | Program output: -10           
Correct output: 130.1971143918 | Program output: 131           
Correct output: 150.3637736344 | Program output: 151           
Correct output: -111.4726490012 | Program output: -110          
Correct output: -20.2189788792 | Program output: -20           
Correct output: -40.8852589809 | Program output: -39           
Correct output: 32.7611922962  | Program output: 34            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_yankdup} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_yankdup integer_fromfloat integer_flush in2 integer_max integer_rot float_sub tag_integer_484 integer_flush tag_float_527 integer_flush tag_float_527 float_tan integer_inc integer_min integer_inc float_dup_times integer_inc float_mod 92 integer_inc integer_min in1 integer_fromfloat in2 float_dup_times integer_add integer_inc print_integer)
Errors: [0.8557 11 0.5388 11 0.8923 12 0.4016 12 0.9433 11 1.3207 11 0.159 12 1.8843 11 0.2633 11 0.0876 11 0.7387 12 0.4263 11 1.8463 11 0.5253 12 0.6724 11 1.6614 11 1.3464 12 0.3956 11 0.3066 11 0.8029 11 0.6362 12 1.4726 11 0.219 11 1.8853 12 1.2388 12]
Total: 305.5204
Mean: 6.110408
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 2504.6749675000005
Median total errors in population: 360.5204
Error averages by case: (88.79862350000006 12.017 89.4316739999991 11.554 89.58412850000151 11.882 89.20422919999868 11.589 87.72202669999935 12.02 86.86637179999835 11.381 88.16976299999975 11.422 89.23599690000046 11.598 87.63535060000083 11.791 85.92005379999934 11.512 87.10181130000055 11.022 87.32389930000107 11.907 89.48143850000052 11.53 81.58301909999935 11.469 88.3666816999999 11.856 91.36795299999856 12.452 88.0730279999993 11.934 87.17849180000174 11.43 88.7745298000002 12.768 88.42419619999949 11.859 88.75875969999893 12.103 90.27797699999871 12.488 88.47980699999866 11.595 91.17555509999927 12.784 89.80960200000128 11.967)
Error minima by case: (0.8557 10 0.5388 10 0.1077 10 0.4016 10 0.9433 9 1.3207 9 0.159 9 0.1157 10 0.2633 10 0.0876 10 0.2613 9 0.4263 10 1.8463 10 0.5253 9 0.6724 10 1.6614 9 1.3464 10 0.3956 10 0.3066 11 0.8029 11 0.6362 11 1.4726 11 0.219 11 1.8853 11 0.7612 10)
Average genome size in population (length): 55.587
Average program size in population (points): 56.587
Average percent parens in population: 0.019
Minimum age in population: 141.5600711187935
Maximum age in population: 146.0500374654902
Average age in population: 143.8251003075279
Median age in population: 143.8609156517449
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 48
Genome diversity (% unique Plush genomes):	 0.719
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 48
Syntactic diversity (% unique Push programs):	 0.719
Total error diversity:				 0.1
Error (vector) diversity:			 0.101
Behavioral diversity:				 0.102
--- Run Statistics ---
Number of program evaluations used so far: 101000
Number of point (instruction) evaluations so far: 146545887
--- Timings ---
Current time: 1529615174194 milliseconds
Total Time:         318.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       150.3 seconds, 47.2%
Fitness Testing:    132.6 seconds, 41.6%
Report:              35.6 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 100
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 101
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 101
;;******************************
;; -*- Number IO problem report - generation 101
Test total error for best: 12301.232499999998
Test mean error for best: 6.15062
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -52           
Correct output: -46.5388439821 | Program output: -46           
Correct output: 183.1076678776 | Program output: 184           
Correct output: 59.5983956317  | Program output: 60            
Correct output: -40.9433158552 | Program output: -40           
Correct output: 0.6792530208   | Program output: 2             
Correct output: 2.8409776764   | Program output: 3             
Correct output: 87.1156693118  | Program output: 85            
Correct output: 12.7367383479  | Program output: 13            
Correct output: 34.9123643533  | Program output: 35            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 87            
Correct output: -79.8463167321 | Program output: -78           
Correct output: 2.4746909642   | Program output: 3             
Correct output: 132.3276241331 | Program output: 133           
Correct output: -171.6614203645 | Program output: -170          
Correct output: -58.3463633692 | Program output: -57           
Correct output: 80.6043645122  | Program output: 81            
Correct output: -10.3066391796 | Program output: -10           
Correct output: 130.1971143918 | Program output: 131           
Correct output: 150.3637736344 | Program output: 151           
Correct output: -111.4726490012 | Program output: -110          
Correct output: -20.2189788792 | Program output: -20           
Correct output: -40.8852589809 | Program output: -39           
Correct output: 32.7611922962  | Program output: 34            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction integer_min} {:instruction integer_flush} {:instruction integer_stackdepth} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_mult} {:instruction float_sub} {:instruction float_dup_times} {:instruction integer_dec} {:instruction float_mod} {:instruction float_pop} {:instruction float_mult} {:instruction float_pop} {:instruction in2} {:instruction integer_min} {:instruction print_float} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_add} {:instruction integer_inc} {:instruction print_integer})
Best program: (integer_min integer_div integer_min integer_flush integer_stackdepth integer_flush tag_float_527 float_pop in2 float_dup integer_mult float_sub float_dup_times integer_dec float_mod float_pop float_mult float_pop in2 integer_min print_float in2 float_dup integer_rot float_flush integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min in1 integer_fromfloat integer_inc float_dup_times integer_add integer_inc print_integer)
Errors: [0.8557 11 0.5388 11 0.8923 12 0.4016 12 0.9433 11 1.3207 11 0.159 12 2.1157 11 0.2633 11 0.0876 11 0.2613 11 0.4263 11 1.8463 11 0.5253 12 0.6724 11 1.6614 11 1.3464 12 0.3956 11 0.3066 11 0.8029 11 0.6362 12 1.4726 11 0.219 11 1.8853 12 1.2388 12]
Total: 304.2744
Mean: 6.085488
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2116.4211187
Median total errors in population: 332.52039999999994
Error averages by case: (74.40289190000006 12.144 75.09767839999967 11.437 72.11839360000042 12.138 73.96798239999914 11.316 72.08068649999933 12.121 71.83506439999863 11.044 74.23073999999971 11.156 73.25611509999982 11.598 73.1184911999999 11.328 69.19837239999947 11.186 70.03246059999968 11.166 71.07464980000006 11.992 75.42628669999996 11.388 67.28218210000038 11.213 71.39712640000027 11.415 78.50255119999902 12.249 73.41926319999972 11.553 70.5505128000012 11.296 73.71712880000067 12.194 71.33867660000004 12.03 71.70259079999985 12.256 76.85912079999966 12.283 73.61109199999906 11.475 75.60991700000025 12.373 74.09514400000022 12.145)
Error minima by case: (0.8557 11 0.5388 11 0.1077 11 0.4016 10 0.0567 11 0.6793 8 0.159 10 0.1157 10 0.2633 10 0.0876 10 0.2613 9 0.4263 11 1.8463 10 0.4747 10 0.3276 10 1.6614 11 1.3464 10 0.3956 10 0.3066 10 0.8029 11 0.6362 11 1.4726 11 0.219 10 1.8853 11 1.2388 10)
Average genome size in population (length): 44.583
Average program size in population (points): 45.583
Average percent parens in population: 0.023
Minimum age in population: 142.6380468915429
Maximum age in population: 147.1570841576084
Average age in population: 145.1406463437841
Median age in population: 145.1652528824215
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 63
Genome diversity (% unique Plush genomes):	 0.601
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 63
Syntactic diversity (% unique Push programs):	 0.601
Total error diversity:				 0.107
Error (vector) diversity:			 0.108
Behavioral diversity:				 0.109
--- Run Statistics ---
Number of program evaluations used so far: 102000
Number of point (instruction) evaluations so far: 147661462
--- Timings ---
Current time: 1529615176939 milliseconds
Total Time:         321.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       151.8 seconds, 47.2%
Fitness Testing:    133.6 seconds, 41.6%
Report:              35.9 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 101
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 102
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 102
;;******************************
;; -*- Number IO problem report - generation 102
Test total error for best: 11644.180300000013
Test mean error for best: 5.82209
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 83            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 96            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_div} {:instruction tagged_573} {:instruction print_float} {:instruction in2} {:instruction float_dup} {:instruction float_mod} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_pop} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_cos} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction float_inc} {:instruction float_flush} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction float_shove} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_yankdup} {:instruction print_integer})
Best program: (print_integer integer_div tagged_573 print_float in2 float_dup float_mod float_sub float_dup_times tag_float_527 float_pop float_dup_times tag_float_527 float_pop in2 integer_dup_items integer_rot float_sub float_cos float_pop in2 float_dup float_inc float_flush float_pop in2 float_dup integer_rot float_flush integer_inc integer_inc integer_inc integer_min float_shove float_mod 92 integer_inc integer_min in1 integer_fromfloat float_inc float_dup_times integer_add float_yankdup print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 4.1157 11 0.7367 11 0.9124 11 2.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 296.0226
Mean: 5.920452
Genome size: 45
Size: 46
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 1707.7006659999972
Median total errors in population: 330.27439999999996
Error averages by case: (58.73072740000006 11.821 59.643299200000364 11.384 54.95677809999969 12.116 58.014407999999335 11.588 56.672232899999536 11.798 55.71159209999921 11.033 59.51091999999972 11.457 56.594990300000035 11.643 57.005703999999334 11.276 51.39329959999949 11.153 53.57256389999938 11.775 54.19145469999941 11.642 59.729981199999315 11.361 52.09116280000053 11.506 54.299591600000575 11.267 62.20381079999931 11.869 56.72715200000022 11.818 53.449864400000735 11.28 58.44642120000106 11.813 54.14950850000031 11.613 54.65167860000058 12.223 61.095737200000464 11.888 58.28115799999925 11.43 58.27742590000103 12.321 57.05620359999939 12.168)
Error minima by case: (0.1443 10 0.4612 10 0.1077 6 0.4016 3 0.0567 11 0.3207 8 0.159 6 1.1157 10 0.2633 4 0.0876 5 0.2613 5 0.4263 5 0.8463 6 0.4747 5 0.3276 6 0.6614 6 0.3464 5 0.3956 5 0.3066 10 0.1971 6 0.3638 6 0.4726 6 0.219 10 0.8853 5 0.2388 11)
Average genome size in population (length): 40.506
Average program size in population (points): 41.506
Average percent parens in population: 0.025
Minimum age in population: 143.6380468915429
Maximum age in population: 148.7090999177885
Average age in population: 146.6221102473204
Median age in population: 146.6783233133264
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 68
Genome diversity (% unique Plush genomes):	 0.592
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 68
Syntactic diversity (% unique Push programs):	 0.592
Total error diversity:				 0.099
Error (vector) diversity:			 0.099
Behavioral diversity:				 0.1
--- Run Statistics ---
Number of program evaluations used so far: 103000
Number of point (instruction) evaluations so far: 148674162
--- Timings ---
Current time: 1529615179575 milliseconds
Total Time:         324.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       153.1 seconds, 47.3%
Fitness Testing:    134.6 seconds, 41.5%
Report:              36.2 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 102
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 103
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 103
;;******************************
;; -*- Number IO problem report - generation 103
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction print_float} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction 71} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_cos} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (integer_min integer_div tagged_573 print_float in2 float_dup integer_rot float_sub float_tan integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop 71 float_dec integer_min integer_inc float_cos float_tan integer_inc integer_inc integer_inc tag_integer_484 integer_flush tag_float_527 float_pop in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 1767.7879161999974
Median total errors in population: 308.2744
Error averages by case: (61.644881800000064 11.366 62.1679112000004 11.328 57.99610169999971 12.095 60.585391999999295 11.931 60.2476503999994 11.346 56.730309299998815 11.049 61.36317099999972 11.811 58.374966600000036 11.593 60.04259759999918 11.199 56.08402199999941 11.157 57.510727499999746 11.988 56.73637089999942 11.226 60.719288599999246 11.272 55.93143510000067 11.849 57.28376440000091 11.282 63.55913359999912 11.44 58.498844800000505 12.082 56.588743600001116 11.187 60.72996840000125 11.371 57.38842150000057 11.305 57.51840980000057 12.14 62.20468240000059 11.447 60.64540599999921 11.35 59.87722880000111 12.244 58.21048719999939 12.09)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 11 0.0567 11 0.3207 10 0.159 10 0.8843 10 0.2633 10 0.0876 10 0.2613 10 0.4263 11 0.8463 11 0.4747 10 0.3276 9 0.6614 11 0.3464 11 0.3956 10 0.3066 10 0.1971 11 0.3638 11 0.4726 11 0.219 11 0.8853 11 0.2388 10)
Average genome size in population (length): 37.831
Average program size in population (points): 38.831
Average percent parens in population: 0.026
Minimum age in population: 144.6380468915429
Maximum age in population: 150.2267777501446
Average age in population: 148.1621484953042
Median age in population: 148.2012351921858
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 91
Genome diversity (% unique Plush genomes):	 0.534
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 91
Syntactic diversity (% unique Push programs):	 0.534
Total error diversity:				 0.072
Error (vector) diversity:			 0.075
Behavioral diversity:				 0.077
--- Run Statistics ---
Number of program evaluations used so far: 104000
Number of point (instruction) evaluations so far: 149620112
--- Timings ---
Current time: 1529615182251 milliseconds
Total Time:         326.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       154.6 seconds, 47.3%
Fitness Testing:    135.5 seconds, 41.5%
Report:              36.5 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 103
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 104
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 104
;;******************************
;; -*- Number IO problem report - generation 104
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction print_float} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction integer_add} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction 71} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_cos} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (integer_min integer_div tagged_573 print_float in2 float_dup integer_rot integer_add float_tan integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop 71 float_dec integer_min integer_inc float_cos float_tan integer_inc integer_inc integer_inc tag_integer_484 integer_flush tag_float_527 float_pop in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 1646.986608900002
Median total errors in population: 305.5204
Error averages by case: (56.35437240000005 11.286 57.247940400000246 11.326 52.45464959999974 12.024 55.599303799999454 11.867 54.070248199999526 11.259 53.07354199999886 11.116 56.201711999999766 11.761 54.131918999999826 11.173 54.53219499999934 11.139 49.030151699999514 11.127 50.17075230000024 11.733 50.83978389999951 11.168 58.28813489999924 11.198 50.18985310000055 11.798 51.48688120000068 11.249 61.8298107999991 11.356 56.20949840000045 11.972 50.477368500000885 11.129 56.04173780000099 11.295 51.4137094000004 11.275 51.85268410000048 12.021 60.48473720000058 11.361 55.889526999999376 11.29 57.700978700001116 12.103 54.339117499999375 12.05)
Error minima by case: (0.1443 11 0.4612 11 0.1077 6 0.4016 4 0.0567 10 0.3207 9 0.159 4 0.8843 10 0.2633 4 0.0876 5 0.2613 5 0.4263 4 0.8463 4 0.4747 4 0.3276 6 0.6614 4 0.3464 4 0.3956 5 0.3066 10 0.1971 6 0.3638 6 0.4726 4 0.219 11 0.8853 5 0.2388 11)
Average genome size in population (length): 37.533
Average program size in population (points): 38.533
Average percent parens in population: 0.027
Minimum age in population: 146.2908185516362
Maximum age in population: 151.5937533367603
Average age in population: 149.8177742525978
Median age in population: 149.8788845355912
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 104
Genome diversity (% unique Plush genomes):	 0.536
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 104
Syntactic diversity (% unique Push programs):	 0.536
Total error diversity:				 0.083
Error (vector) diversity:			 0.086
Behavioral diversity:				 0.086
--- Run Statistics ---
Number of program evaluations used so far: 105000
Number of point (instruction) evaluations so far: 150558687
--- Timings ---
Current time: 1529615184986 milliseconds
Total Time:         329.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       156.1 seconds, 47.4%
Fitness Testing:    136.5 seconds, 41.4%
Report:              36.8 seconds, 11.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 104
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 105
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 105
;;******************************
;; -*- Number IO problem report - generation 105
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction print_float} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction 71} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_cos} {:instruction float_tan} {:instruction integer_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (integer_min integer_div tagged_573 print_float in2 float_dup integer_rot float_sub float_tan integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop 71 float_dec integer_min integer_inc float_cos float_tan integer_pop integer_inc integer_inc tag_integer_484 integer_flush tag_float_527 float_pop in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 1440.749614099998
Median total errors in population: 304.2744
Error averages by case: (47.46578790000001 11.285 48.22020360000011 11.594 47.358999499999975 11.741 47.43703519999983 11.548 43.34658779999991 11.24 43.132895299999014 11.397 47.322736999999954 11.464 46.25295750000018 11.169 46.74470509999989 11.143 44.502336799999924 11.115 45.62761339999924 11.305 45.93287709999992 11.182 46.53213489999923 11.179 39.91564320000009 11.497 46.51160200000011 11.238 49.867472199999284 11.358 44.46438080000042 11.63 45.66391160000017 11.125 47.23007020000022 11.336 46.414304500000085 11.318 46.83780100000007 11.729 47.669209800000445 11.38 47.15119299999982 11.26 48.194637500001 11.809 45.8915171999994 12.019)
Error minima by case: (0.1443 11 0.4612 11 0.1077 6 0.4016 10 0.0567 10 0.3207 9 0.159 10 0.1157 10 0.2633 10 0.0876 4 0.2613 4 0.4263 3 0.1537 11 0.4747 10 0.3276 6 0.3386 11 0.3464 11 0.3956 4 0.3066 10 0.1971 6 0.3638 6 0.4726 11 0.219 11 0.1147 5 0.2388 11)
Average genome size in population (length): 38.721
Average program size in population (points): 39.721
Average percent parens in population: 0.026
Minimum age in population: 149.0752103066517
Maximum age in population: 153.3797718342195
Average age in population: 151.3815227120544
Median age in population: 151.4576945402775
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 154
Genome diversity (% unique Plush genomes):	 0.534
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 154
Syntactic diversity (% unique Push programs):	 0.534
Total error diversity:				 0.096
Error (vector) diversity:			 0.097
Behavioral diversity:				 0.097
--- Run Statistics ---
Number of program evaluations used so far: 106000
Number of point (instruction) evaluations so far: 151526812
--- Timings ---
Current time: 1529615187739 milliseconds
Total Time:         332.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       157.6 seconds, 47.4%
Fitness Testing:    137.5 seconds, 41.4%
Report:              37.0 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 105
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 106
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 106
;;******************************
;; -*- Number IO problem report - generation 106
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_yankdup} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_pop} {:instruction float_yankdup} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_mod} {:instruction print_integer})
Best program: (integer_min integer_yankdup integer_fromfloat integer_flush in2 integer_max integer_rot float_sub tag_integer_484 integer_flush tag_float_527 integer_flush tag_float_527 float_tan integer_inc integer_min integer_inc integer_pop float_yankdup float_mod 92 integer_inc integer_min in1 integer_fromfloat in2 float_dup_times integer_add float_mod print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 1570.0819628000008
Median total errors in population: 292.0226
Error averages by case: (51.57631879999995 11.249 52.66229679999955 12.053 52.23306790000029 11.303 52.364044800000734 11.175 49.437200300000484 11.219 49.45910229999861 11.846 52.47752000000023 11.079 53.034694499999844 11.177 51.43189740000069 11.117 50.08563560000058 11.125 50.85770249999887 11.23 50.87432270000051 11.148 52.29413679999905 11.196 45.87973339999943 11.101 51.38916599999892 11.272 55.10239319999898 11.331 50.35361600000072 11.252 50.672618799998745 11.123 51.82847439999882 11.273 51.1989350999993 11.309 51.86758299999948 11.298 53.575298800000624 11.352 51.81319600000079 11.274 52.80249050000113 11.387 51.86351719999942 12.058)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 10 0.0567 10 0.3207 10 0.159 10 0.8843 10 0.2633 11 0.0876 10 0.2613 10 0.4263 10 0.8463 10 0.4747 10 0.3276 10 0.6614 11 0.3464 11 0.3956 10 0.3066 10 0.1971 11 0.3638 11 0.4726 11 0.219 10 0.1147 11 0.2388 10)
Average genome size in population (length): 36.719
Average program size in population (points): 37.719
Average percent parens in population: 0.027
Minimum age in population: 150.0752103066517
Maximum age in population: 155.0621397567311
Average age in population: 152.9253731756675
Median age in population: 152.937505071486
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 94
Genome diversity (% unique Plush genomes):	 0.531
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 94
Syntactic diversity (% unique Push programs):	 0.531
Total error diversity:				 0.069
Error (vector) diversity:			 0.072
Behavioral diversity:				 0.072
--- Run Statistics ---
Number of program evaluations used so far: 107000
Number of point (instruction) evaluations so far: 152444812
--- Timings ---
Current time: 1529615190426 milliseconds
Total Time:         334.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       159.1 seconds, 47.5%
Fitness Testing:    138.4 seconds, 41.3%
Report:              37.3 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 106
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 107
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 107
;;******************************
;; -*- Number IO problem report - generation 107
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction integer_min} {:instruction integer_flush} {:instruction integer_stackdepth} {:instruction integer_flush} {:instruction float_sin} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_mult} {:instruction float_sub} {:instruction float_dup_times} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_dec} {:instruction print_integer})
Best program: (integer_min integer_div integer_min integer_flush integer_stackdepth integer_flush float_sin float_pop in2 float_dup integer_mult float_sub float_dup_times integer_min integer_inc float_dup_times integer_inc float_mod 92 integer_inc integer_min in1 integer_fromfloat in2 float_dup_times integer_add float_dec print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 1383.9808355000043
Median total errors in population: 290.7912
Error averages by case: (43.539138399999935 11.197 44.542545599999904 12.086 44.07751480000035 11.219 45.27196960000045 11.114 43.35072590000048 11.176 44.32225099999919 11.923 45.62933100000028 11.036 44.13521709999989 11.116 44.21766300000072 11.106 42.38551040000052 11.11 42.47744119999899 11.145 42.44503520000062 11.124 45.11075349999952 11.178 41.540957699999446 11.047 43.05708159999942 11.208 47.43334579999952 11.27 44.21596240000016 11.192 42.55895999999919 11.118 44.32073919999913 11.208 42.884937799999705 11.226 43.53424079999937 11.22 45.62060700000047 11.283 44.2405280000005 11.224 46.557443700001066 11.272 44.67193479999936 12.041)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 11 0.0567 9 0.3207 10 0.159 10 0.1157 10 0.2633 11 0.0876 10 0.2613 10 0.4263 11 0.1537 11 0.4747 10 0.3276 11 0.3386 11 0.3464 11 0.3956 11 0.3066 10 0.1971 11 0.3638 11 0.4726 11 0.219 11 0.1147 11 0.2388 11)
Average genome size in population (length): 35.353
Average program size in population (points): 36.353
Average percent parens in population: 0.028
Minimum age in population: 151.0752103066517
Maximum age in population: 156.8925363675519
Average age in population: 154.3980575964596
Median age in population: 154.4607888465743
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 124
Genome diversity (% unique Plush genomes):	 0.582
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 124
Syntactic diversity (% unique Push programs):	 0.582
Total error diversity:				 0.044
Error (vector) diversity:			 0.044
Behavioral diversity:				 0.044
--- Run Statistics ---
Number of program evaluations used so far: 108000
Number of point (instruction) evaluations so far: 153328662
--- Timings ---
Current time: 1529615192868 milliseconds
Total Time:         337.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       160.4 seconds, 47.6%
Fitness Testing:    139.3 seconds, 41.3%
Report:              37.5 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 107
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 108
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 108
;;******************************
;; -*- Number IO problem report - generation 108
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction integer_div} {:instruction float_inc} {:instruction print_float} {:instruction integer_div} {:instruction float_dup} {:instruction in2} {:instruction integer_max} {:instruction integer_flush} {:instruction float_sin} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction float_mod} {:instruction float_pop} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction integer_swap} {:instruction tag_float_527} {:instruction float_flush} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_dec} {:instruction print_integer})
Best program: (float_stackdepth integer_div float_inc print_float integer_div float_dup in2 integer_max integer_flush float_sin float_pop in2 float_dup float_mod float_pop float_pop in2 float_dup integer_rot float_sub integer_swap tag_float_527 float_flush in2 integer_dup_items integer_inc float_dup_times integer_inc float_mod 92 integer_inc integer_min in1 integer_fromfloat in2 float_dup_times integer_add float_dec print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 1513.6845750000043
Median total errors in population: 290.7912
Error averages by case: (48.249447199999935 11.19 49.183924799999566 12.098 49.82837640000039 11.223 50.251150400000974 11.117 47.389689800000475 11.173 49.527723299998804 11.932 50.08062800000029 11.04 50.80975429999942 11.118 49.21297680000071 11.099 47.83358320000053 11.109 48.18070249999895 11.155 48.619656600000674 11.119 49.89375349999915 11.172 45.87107819999942 11.054 48.999391999999055 11.216 51.739022999999186 11.254 49.180348000000535 11.186 48.392674399998754 11.102 49.20183359999874 11.202 47.90871169999933 11.245 49.407423599999326 11.223 50.183607000000464 11.262 49.09702400000091 11.217 51.879590700001074 11.258 50.94450199999933 12.054)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 10 0.0567 9 0.3207 10 0.159 10 0.8843 10 0.2633 10 0.0876 10 0.2613 11 0.4263 10 0.8463 11 0.4747 10 0.3276 10 0.6614 11 0.3464 11 0.3956 10 0.3066 10 0.1971 11 0.3638 11 0.4726 11 0.219 11 0.8853 11 0.2388 11)
Average genome size in population (length): 35.379
Average program size in population (points): 36.379
Average percent parens in population: 0.028
Minimum age in population: 153.6202847194742
Maximum age in population: 157.8925363675519
Average age in population: 155.8925398688498
Median age in population: 155.8996379541527
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 89
Genome diversity (% unique Plush genomes):	 0.654
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 89
Syntactic diversity (% unique Push programs):	 0.654
Total error diversity:				 0.039
Error (vector) diversity:			 0.039
Behavioral diversity:				 0.039
--- Run Statistics ---
Number of program evaluations used so far: 109000
Number of point (instruction) evaluations so far: 154213137
--- Timings ---
Current time: 1529615195464 milliseconds
Total Time:         340.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       161.9 seconds, 47.6%
Fitness Testing:    140.1 seconds, 41.2%
Report:              37.8 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 108
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 109
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 109
;;******************************
;; -*- Number IO problem report - generation 109
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction integer_min} {:instruction integer_flush} {:instruction integer_stackdepth} {:instruction integer_flush} {:instruction float_sin} {:instruction float_pop} {:instruction float_dup_items} {:instruction float_dup} {:instruction integer_mult} {:instruction float_sub} {:instruction float_dup_times} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_mod} {:instruction 92} {:instruction float_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_dec} {:instruction print_integer})
Best program: (integer_min integer_div integer_min integer_flush integer_stackdepth integer_flush float_sin float_pop float_dup_items float_dup integer_mult float_sub float_dup_times integer_min integer_inc float_dup_times integer_inc float_mod 92 float_inc integer_min in1 integer_fromfloat in2 float_dup_times integer_add float_dec print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 1515.0427078000046
Median total errors in population: 290.7912
Error averages by case: (48.37383969999994 11.21 49.19539479999993 12.104 50.739161000000344 11.237 48.99078080000041 11.117 47.348158900000335 11.192 49.1724404999992 11.924 48.83196700000027 11.048 51.06614269999978 11.119 48.51003270000061 11.112 47.83854680000045 11.101 49.319963799999094 11.167 49.001919600000605 11.127 50.138521999999476 11.184 44.237160099999535 11.045 49.6130471999994 11.232 52.518361599999636 11.264 49.09008000000015 11.194 48.70983919999926 11.111 48.77149859999925 11.218 48.51092329999969 11.252 50.150423599999385 11.225 50.7341344000004 11.286 48.782499000000485 11.228 52.25927890000095 11.265 51.12259159999939 12.054)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 11 0.0567 9 0.3207 10 0.159 10 0.8843 10 0.2633 11 0.0876 10 0.2613 10 0.4263 11 0.8463 11 0.4747 10 0.3276 10 0.6614 11 0.3464 11 0.3956 11 0.3066 10 0.1971 10 0.3638 11 0.4726 11 0.219 11 0.8853 11 0.2388 10)
Average genome size in population (length): 35.435
Average program size in population (points): 36.435
Average percent parens in population: 0.028
Minimum age in population: 154.9475583702321
Maximum age in population: 159.3070502272334
Average age in population: 157.4005732206572
Median age in population: 157.4423989284929
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 77
Genome diversity (% unique Plush genomes):	 0.689
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 77
Syntactic diversity (% unique Push programs):	 0.689
Total error diversity:				 0.051
Error (vector) diversity:			 0.051
Behavioral diversity:				 0.051
--- Run Statistics ---
Number of program evaluations used so far: 110000
Number of point (instruction) evaluations so far: 155099012
--- Timings ---
Current time: 1529615198089 milliseconds
Total Time:         342.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       163.4 seconds, 47.7%
Fitness Testing:    141.0 seconds, 41.2%
Report:              38.0 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 109
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 110
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 110
;;******************************
;; -*- Number IO problem report - generation 110
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction print_float} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_rot} {:instruction float_sub} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_cos} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (integer_min integer_div tagged_573 print_float in2 float_dup integer_rot float_sub float_tan integer_inc integer_min integer_inc float_dup_times integer_rot float_sub float_dec integer_min integer_inc float_cos float_tan integer_inc integer_inc tag_float_527 float_pop in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 1632.6013104000046
Median total errors in population: 290.7912
Error averages by case: (53.56685989999994 11.214 54.50777399999933 12.111 54.31751480000039 11.225 54.115764800001024 11.128 53.512009400000444 11.196 53.704271399998696 11.94 54.61821800000029 11.038 54.98237409999933 11.133 53.27634650000063 11.105 51.99540800000048 11.104 53.36439599999901 11.144 53.05280400000069 11.119 55.040751599998906 11.182 50.75033119999945 11.052 53.48239199999888 11.229 56.58574759999906 11.267 53.997923200000784 11.185 52.610091999998694 11.104 54.322592999998584 11.221 53.21330299999912 11.246 53.94769599999931 11.214 55.45640840000044 11.276 54.2709950000011 11.231 57.18865530000104 11.256 54.73468119999933 12.066)
Error minima by case: (0.1443 11 0.4612 11 0.1077 6 0.4016 4 0.0567 10 0.3207 10 0.159 3 0.1157 10 0.2633 4 0.0876 4 0.2613 4 0.4263 3 0.1537 5 0.4747 3 0.3276 6 0.3386 6 0.3464 5 0.3956 4 0.3066 10 0.1971 6 0.3638 6 0.4726 6 0.219 11 0.1147 5 0.2388 10)
Average genome size in population (length): 35.628
Average program size in population (points): 36.628
Average percent parens in population: 0.028
Minimum age in population: 156.3319714418049
Maximum age in population: 160.8909374719322
Average age in population: 158.853181207714
Median age in population: 158.8895474964733
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 54
Genome diversity (% unique Plush genomes):	 0.718
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 54
Syntactic diversity (% unique Push programs):	 0.718
Total error diversity:				 0.039
Error (vector) diversity:			 0.039
Behavioral diversity:				 0.04
--- Run Statistics ---
Number of program evaluations used so far: 111000
Number of point (instruction) evaluations so far: 155989737
--- Timings ---
Current time: 1529615200728 milliseconds
Total Time:         345.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       164.9 seconds, 47.8%
Fitness Testing:    141.9 seconds, 41.1%
Report:              38.3 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 110
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 111
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 111
;;******************************
;; -*- Number IO problem report - generation 111
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction print_float} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_stackdepth} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction 71} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_cos} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (integer_min integer_min integer_div tagged_573 print_float in2 float_dup integer_rot float_sub float_tan integer_inc integer_min integer_inc float_dup_times integer_stackdepth float_dup_times float_mod float_pop 71 float_dec integer_min integer_inc float_cos float_tan integer_inc integer_inc integer_inc tag_integer_484 integer_flush tag_float_527 float_pop in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 1679.8641572000047
Median total errors in population: 290.7912
Error averages by case: (57.15484979999994 11.215 58.05362319999953 12.115 55.86060420000032 11.243 56.273028600000806 11.134 55.4427259000005 11.205 53.442281399998826 11.917 56.22771500000029 11.045 55.63238769999953 11.133 55.472148400000705 11.119 53.33568800000048 11.116 54.63329799999907 11.177 54.435259900000595 11.146 57.82536639999915 11.196 51.225876499999394 11.045 54.94408559999903 11.261 59.66977919999921 11.287 56.51261600000056 11.196 53.9525723999988 11.122 57.63235239999874 11.226 54.65033349999929 11.283 55.4511343999994 11.235 58.51757280000051 11.298 57.63196600000089 11.242 58.142655300001074 11.301 55.42123659999941 12.066)
Error minima by case: (0.1443 10 0.4612 10 0.1077 10 0.4016 11 0.0567 10 0.3207 10 0.841 10 0.1157 10 0.7367 9 0.9124 10 0.2613 10 0.5737 11 0.1537 10 0.4747 9 0.3276 10 0.3386 11 0.3464 11 0.6044 10 0.6934 10 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.1147 11 0.2388 10)
Average genome size in population (length): 35.676
Average program size in population (points): 36.676
Average percent parens in population: 0.028
Minimum age in population: 157.80423844507
Maximum age in population: 162.344956613328
Average age in population: 160.3384846890006
Median age in population: 160.3582062255961
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 45
Genome diversity (% unique Plush genomes):	 0.721
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 45
Syntactic diversity (% unique Push programs):	 0.721
Total error diversity:				 0.044
Error (vector) diversity:			 0.044
Behavioral diversity:				 0.044
--- Run Statistics ---
Number of program evaluations used so far: 112000
Number of point (instruction) evaluations so far: 156881662
--- Timings ---
Current time: 1529615203293 milliseconds
Total Time:         347.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       166.4 seconds, 47.8%
Fitness Testing:    142.8 seconds, 41.1%
Report:              38.5 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 111
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 112
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 112
;;******************************
;; -*- Number IO problem report - generation 112
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction integer_div} {:instruction tagged_573} {:instruction print_float} {:instruction in2} {:instruction float_dup} {:instruction integer_min} {:instruction float_sub} {:instruction float_tan} {:instruction float_flush} {:instruction integer_min} {:instruction float_dec} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction integer_inc} {:instruction float_cos} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction tag_integer_484} {:instruction float_sin} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (integer_fromfloat integer_div tagged_573 print_float in2 float_dup integer_min float_sub float_tan float_flush integer_min float_dec float_dup_times integer_inc float_dup_times float_mod float_pop integer_inc float_cos float_tan integer_inc integer_inc integer_inc tag_integer_484 float_sin tag_float_527 float_pop in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 35
Size: 36
Percent parens: 0.028
--- Population Statistics ---
Average total errors in population: 1940.0966729000047
Median total errors in population: 290.7912
Error averages by case: (66.50556119999993 11.239 67.54423959999949 12.121 66.44800340000027 11.251 66.81082500000107 11.142 64.74966920000058 11.224 65.70423469999857 11.937 67.3089276000003 11.052 66.66020679999947 11.147 66.1718855000008 11.129 64.21959100000065 11.121 65.10159649999886 11.162 65.66338300000058 11.145 67.17890339999926 11.206 63.056701499999285 11.057 65.83982749999882 11.256 68.51882659999889 11.306 65.98215200000067 11.214 65.22043779999852 11.131 67.3082721999986 11.244 65.55260949999926 11.268 66.2430625999994 11.248 67.63237420000038 11.311 67.28562300000114 11.253 68.33019650000092 11.281 66.5445625999995 12.07)
Error minima by case: (0.1443 11 0.4612 11 0.1077 3 0.4016 2 0.0567 10 0.3207 9 0.159 2 0.8843 10 0.2633 2 0.0876 2 0.2613 2 0.4263 1 0.8463 2 0.4747 2 0.3276 3 0.6614 2 0.3464 2 0.3956 2 0.3066 10 0.1971 3 0.3638 3 0.4726 2 0.219 11 0.8853 2 0.2388 10)
Average genome size in population (length): 35.557
Average program size in population (points): 36.557
Average percent parens in population: 0.028
Minimum age in population: 158.80423844507
Maximum age in population: 163.9271436113129
Average age in population: 161.7903186006972
Median age in population: 161.811848860783
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 36
Genome diversity (% unique Plush genomes):	 0.733
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 36
Syntactic diversity (% unique Push programs):	 0.733
Total error diversity:				 0.037
Error (vector) diversity:			 0.037
Behavioral diversity:				 0.037
--- Run Statistics ---
Number of program evaluations used so far: 113000
Number of point (instruction) evaluations so far: 157770687
--- Timings ---
Current time: 1529615205735 milliseconds
Total Time:         350.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       167.7 seconds, 47.9%
Fitness Testing:    143.6 seconds, 41.0%
Report:              38.8 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 112
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 113
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 113
;;******************************
;; -*- Number IO problem report - generation 113
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_yankdup} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction float_swap} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_rot} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_mod} {:instruction print_integer})
Best program: (integer_min integer_yankdup integer_fromfloat integer_flush in2 integer_max float_swap integer_flush in2 integer_max integer_yank integer_rot 92 integer_inc integer_min in1 integer_fromfloat in2 float_dup_times integer_add float_mod print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 1757.5317553000043
Median total errors in population: 290.7912
Error averages by case: (59.222849799999935 11.232 60.069623199999356 12.126 59.29419170000037 11.26 60.23237920000103 11.148 58.33155580000068 11.208 57.965402599998406 11.931 60.80296700000029 11.053 58.2516798999993 11.136 59.63571620000093 11.132 57.17942280000071 11.137 57.41665729999877 11.171 57.34319850000065 11.139 59.96375159999896 11.208 57.28005889999919 11.063 58.16175399999866 11.25 62.19742479999887 11.323 58.997230400000745 11.228 57.40039959999841 11.137 59.77735239999834 11.243 57.98974069999911 11.273 58.680876999999334 11.252 60.50246320000068 11.329 59.780966000001094 11.261 59.97859070000126 11.292 58.48650199999934 12.057)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 11 0.0567 9 0.3207 10 0.159 10 0.8843 10 0.2633 11 0.0876 10 0.2613 10 0.4263 11 0.8463 11 0.4747 10 0.3276 11 0.6614 11 0.3464 11 0.3956 11 0.3066 10 0.1971 11 0.3638 11 0.4726 11 0.219 11 0.8853 11 0.2388 11)
Average genome size in population (length): 35.367
Average program size in population (points): 36.367
Average percent parens in population: 0.029
Minimum age in population: 160.24414603552
Maximum age in population: 165.3520368710949
Average age in population: 163.3072042126027
Median age in population: 163.3413717163986
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.728
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.728
Total error diversity:				 0.038
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.039
--- Run Statistics ---
Number of program evaluations used so far: 114000
Number of point (instruction) evaluations so far: 158654937
--- Timings ---
Current time: 1529615208342 milliseconds
Total Time:         352.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       169.3 seconds, 48.0%
Fitness Testing:    144.5 seconds, 40.9%
Report:              39.0 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 113
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 114
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 114
;;******************************
;; -*- Number IO problem report - generation 114
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_yankdup} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_523} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_pop} {:instruction integer_inc} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_mod} {:instruction print_integer})
Best program: (integer_min integer_yankdup integer_fromfloat integer_flush in2 integer_max integer_rot float_sub tag_integer_484 integer_flush tag_float_523 integer_flush tag_float_527 float_tan integer_inc integer_min integer_inc integer_pop integer_inc float_mod 92 integer_inc integer_min in1 integer_fromfloat in2 float_dup_times integer_add float_mod print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 1611.8167730000046
Median total errors in population: 290.7912
Error averages by case: (52.55015859999994 11.205 53.39707999999986 12.102 54.31759180000032 11.234 53.95595360000048 11.121 52.60129290000037 11.179 51.80928889999923 11.934 53.41362800000028 11.044 54.02929149999989 11.117 53.17997680000061 11.108 51.927583200000434 11.118 51.638792899999096 11.155 52.35695140000061 11.115 54.21767569999949 11.181 48.2360275999995 11.053 53.25966799999947 11.225 56.20537739999954 11.276 53.30665520000019 11.19 52.50088319999933 11.11 53.22544679999921 11.209 53.12730299999967 11.262 53.737333999999386 11.227 54.64571660000043 11.28 53.19246200000054 11.224 55.02213190000099 11.267 53.97550199999939 12.051)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 10 0.0567 10 0.3207 10 0.159 10 0.8843 10 0.2633 11 0.0876 10 0.2613 11 0.4263 10 0.8463 10 0.4747 10 0.3276 10 0.6614 11 0.3464 11 0.3956 10 0.3066 11 0.1971 11 0.3638 11 0.4726 11 0.219 11 0.8853 11 0.2388 10)
Average genome size in population (length): 35.226
Average program size in population (points): 36.226
Average percent parens in population: 0.029
Minimum age in population: 161.8869550444363
Maximum age in population: 166.7983705572953
Average age in population: 164.7727616304929
Median age in population: 164.8193284147873
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.726
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.726
Total error diversity:				 0.032
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 115000
Number of point (instruction) evaluations so far: 159535662
--- Timings ---
Current time: 1529615211017 milliseconds
Total Time:         355.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       170.6 seconds, 48.0%
Fitness Testing:    145.5 seconds, 40.9%
Report:              39.2 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 114
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 115
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 115
;;******************************
;; -*- Number IO problem report - generation 115
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_stackdepth} {:instruction integer_div} {:instruction float_inc} {:instruction print_float} {:instruction integer_div} {:instruction float_dup} {:instruction in2} {:instruction integer_max} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_pop} {:instruction integer_inc} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction integer_min} {:instruction print_float} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction tag_integer_484} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_flush} {:instruction integer_inc} {:instruction integer_dup_times} {:instruction integer_inc} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction in1} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (float_stackdepth integer_div float_inc print_float integer_div float_dup in2 integer_max in2 integer_max integer_rot float_sub tag_integer_484 integer_flush tag_float_527 integer_flush tag_float_527 float_tan integer_inc integer_min integer_inc integer_pop integer_inc float_mod 92 integer_inc integer_min in1 integer_fromfloat in2 float_dup_times integer_add integer_min print_float in2 float_dup integer_rot float_flush integer_inc integer_dup_times integer_inc tag_integer_484 in2 in1 integer_fromfloat in2 float_dup integer_rot float_flush integer_inc integer_dup_times integer_inc tag_integer_484 integer_flush tag_float_527 in1 in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 64
Size: 65
Percent parens: 0.015
--- Population Statistics ---
Average total errors in population: 1772.0330512000048
Median total errors in population: 290.7912
Error averages by case: (59.774437099999936 11.223 60.5106963999997 12.122 59.970376400000376 11.24 60.652552000000775 11.144 57.03006610000044 11.21 58.57744049999904 11.945 61.040900000000285 11.051 59.37563859999968 11.13 60.06576670000068 11.123 58.05975840000047 11.132 58.72096379999901 11.158 58.638804000000675 11.14 60.64359789999924 11.207 57.91822999999944 11.061 59.12070239999928 11.243 62.65508619999941 11.296 59.625576800000324 11.21 58.46067439999901 11.132 60.20097979999896 11.224 58.1027116999995 11.26 59.524878799999314 11.233 61.153935800000426 11.307 60.235557000000725 11.236 60.385934800001046 11.264 59.23778559999933 12.059)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.5984 11 0.0567 10 0.3207 10 0.159 10 0.8843 10 0.7367 10 0.9124 10 0.2613 11 0.5737 11 0.8463 11 0.4747 10 0.3276 10 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 10)
Average genome size in population (length): 35.058
Average program size in population (points): 36.058
Average percent parens in population: 0.029
Minimum age in population: 163.9103789253237
Maximum age in population: 168.1654729602252
Average age in population: 166.2506877474762
Median age in population: 166.2590125622698
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.732
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.732
Total error diversity:				 0.03
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 116000
Number of point (instruction) evaluations so far: 160412262
--- Timings ---
Current time: 1529615213627 milliseconds
Total Time:         358.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       172.0 seconds, 48.0%
Fitness Testing:    146.3 seconds, 40.9%
Report:              39.5 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 115
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 116
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 116
;;******************************
;; -*- Number IO problem report - generation 116
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_inc} {:instruction integer_yankdup} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_tan} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_swap} {:instruction float_pop} {:instruction 70} {:instruction float_dec} {:instruction integer_min} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_inc integer_yankdup integer_fromfloat integer_flush in2 integer_max integer_rot float_sub tag_integer_484 integer_flush tag_float_527 integer_flush tag_float_527 float_tan integer_inc float_dup_times integer_inc float_dup_times integer_swap float_pop 70 float_dec integer_min integer_min in1 integer_fromfloat in2 float_dup_times integer_add print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 1985.4392892000046
Median total errors in population: 290.7912
Error averages by case: (68.43681949999994 11.26 69.23493799999963 12.148 67.99027109999999 11.273 68.14100960000114 11.162 67.47225170000057 11.253 67.47736829999842 11.931 69.10046500000027 11.05 67.8879348999996 11.161 67.63771890000062 11.141 66.24506460000063 11.138 66.98946269999888 11.184 66.78354990000042 11.158 69.20682749999926 11.23 66.21861549999949 11.063 67.24176389999883 11.277 71.2751177999988 11.342 68.01311280000047 11.244 66.51792299999838 11.152 68.83979099999875 11.273 67.00992229999919 11.288 67.6704523999996 11.26 69.81115500000011 11.351 68.86356500000122 11.288 70.70199940000056 11.305 67.6601893999996 12.08)
Error minima by case: (0.1443 11 0.4612 11 0.1077 6 0.4016 4 0.0567 11 0.3207 10 0.159 3 0.8843 10 0.2633 4 0.0876 4 0.2613 4 0.4263 3 0.8463 5 0.4747 3 0.3276 6 0.6614 6 0.3464 5 0.3956 4 0.3066 10 0.1971 6 0.3638 6 0.4726 6 0.219 11 0.8853 5 0.2388 11)
Average genome size in population (length): 34.906
Average program size in population (points): 35.906
Average percent parens in population: 0.029
Minimum age in population: 165.2891412475358
Maximum age in population: 169.6216164486967
Average age in population: 167.7773158676826
Median age in population: 167.823901201353
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.742
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.742
Total error diversity:				 0.039
Error (vector) diversity:			 0.039
Behavioral diversity:				 0.039
--- Run Statistics ---
Number of program evaluations used so far: 117000
Number of point (instruction) evaluations so far: 161285087
--- Timings ---
Current time: 1529615216065 milliseconds
Total Time:         360.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       173.3 seconds, 48.1%
Fitness Testing:    147.2 seconds, 40.8%
Report:              39.9 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 116
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 117
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 117
;;******************************
;; -*- Number IO problem report - generation 117
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction float_dec} {:instruction integer_div} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction 71} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_dec} {:instruction print_integer})
Best program: (integer_min integer_div tagged_573 float_dec integer_div float_dup_times float_mod float_pop 71 float_dec integer_inc integer_min in1 integer_fromfloat in2 float_dup_times integer_add float_dec print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 1611.1150732000042
Median total errors in population: 290.7912
Error averages by case: (52.93703269999994 11.208 53.755608999999524 12.11 53.4836055000003 11.231 53.46526390000064 11.118 52.97197100000049 11.182 52.62394399999897 11.932 53.38844490000027 11.049 53.2261401999996 11.111 52.57921590000068 11.113 51.269997000000515 11.122 51.28934649999906 11.145 51.54520440000057 11.12 54.636434399999196 11.19 49.43357939999943 11.048 52.36349639999914 11.211 57.15350589999919 11.288 54.00641370000054 11.201 51.754982599998954 11.114 53.59460859999876 11.212 52.26962169999946 11.257 52.79163649999942 11.236 55.07827760000049 11.29 53.54944870000088 11.234 56.26866560000102 11.283 53.62862709999942 12.045)
Error minima by case: (0.1443 11 0.4612 10 0.1077 10 0.4016 11 0.0567 9 0.3207 10 0.159 10 0.8843 10 0.2633 10 0.0876 10 0.2613 9 0.4263 11 0.8463 10 0.4747 9 0.3276 10 0.6614 11 0.3464 9 0.3956 10 0.3066 8 0.1971 10 0.3638 10 0.4726 11 0.219 8 0.8853 10 0.2388 11)
Average genome size in population (length): 34.451
Average program size in population (points): 35.451
Average percent parens in population: 0.030
Minimum age in population: 167.0061124950761
Maximum age in population: 171.2165445298371
Average age in population: 169.2668243397516
Median age in population: 169.2850686274441
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.745
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.745
Total error diversity:				 0.035
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 118000
Number of point (instruction) evaluations so far: 162146637
--- Timings ---
Current time: 1529615218656 milliseconds
Total Time:         363.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       174.9 seconds, 48.2%
Fitness Testing:    148.0 seconds, 40.7%
Report:              40.2 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 117
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 118
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 118
;;******************************
;; -*- Number IO problem report - generation 118
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_yankdup} {:instruction float_max} {:instruction tagged_573} {:instruction print_float} {:instruction in2} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_min} {:instruction integer_yankdup} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction in2} {:instruction float_mult} {:instruction integer_rot} {:instruction float_sub} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_mod} {:instruction 93} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_min integer_yankdup float_max tagged_573 print_float in2 in2 float_dup integer_rot float_sub float_tan integer_inc integer_min integer_min integer_yankdup integer_fromfloat integer_flush in2 float_mult integer_rot float_sub tag_integer_484 integer_flush tag_float_527 integer_flush tag_float_527 float_tan integer_inc integer_min integer_inc float_dup_times integer_inc float_mod 93 integer_inc integer_min in1 integer_fromfloat integer_fromfloat in2 float_dup_times integer_add print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 43
Size: 44
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2260.237001500004
Median total errors in population: 290.7912
Error averages by case: (79.40725239999993 11.292 80.28132160000008 12.154 80.6188222999993 11.315 79.55220640000128 11.182 76.61176200000061 11.258 77.96098859999817 11.923 80.0343520000003 11.07 78.36483690000006 11.167 78.8386656999999 11.16 77.01726240000067 11.174 77.49207959999882 11.204 77.65787189999979 11.175 80.08644039999973 11.269 75.81246369999997 11.072 79.48154679999944 11.302 82.42587399999864 11.389 78.85464880000013 11.279 77.66714679999814 11.169 79.97425799999911 11.287 78.50978419999971 11.343 79.93987340000037 11.312 80.6781207999995 11.395 79.92290800000134 11.309 80.85831120000014 11.355 78.56320360000032 12.07)
Error minima by case: (0.1443 11 0.4612 10 0.1077 11 0.4016 11 0.0567 10 0.3207 10 0.159 10 0.8843 10 0.2633 9 0.0876 10 0.2613 10 0.4263 11 0.8463 11 0.4747 9 0.3276 10 0.6614 11 0.3464 11 0.3956 10 0.3066 10 0.1971 11 0.3638 11 0.4726 11 0.219 11 0.8853 11 0.2388 10)
Average genome size in population (length): 33.752
Average program size in population (points): 34.752
Average percent parens in population: 0.030
Minimum age in population: 168.2222136333562
Maximum age in population: 172.8848104389496
Average age in population: 170.7764363910856
Median age in population: 170.8124047776271
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.736
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.736
Total error diversity:				 0.036
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 119000
Number of point (instruction) evaluations so far: 162990637
--- Timings ---
Current time: 1529615221385 milliseconds
Total Time:         365.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       176.5 seconds, 48.3%
Fitness Testing:    148.8 seconds, 40.7%
Report:              40.4 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 118
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 119
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 119
;;******************************
;; -*- Number IO problem report - generation 119
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction float_dec} {:instruction integer_div} {:instruction float_swap} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_yank} {:instruction integer_rot} {:instruction float_sub} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_cos} {:instruction float_dup_items} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_mod} {:instruction print_integer})
Best program: (integer_min integer_div tagged_573 float_dec integer_div float_swap integer_flush in2 integer_max integer_yank integer_rot float_sub in2 integer_dup_items integer_rot float_sub float_cos float_dup_items integer_min in1 integer_fromfloat in2 float_dup_times integer_add float_mod print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 1584.2173340000045
Median total errors in population: 290.7912
Error averages by case: (52.28099409999994 11.213 53.10108439999961 12.101 51.923868600000326 11.233 53.33496160000074 11.124 51.21906610000039 11.187 51.22800609999917 11.927 53.662536000000294 11.049 51.91540719999978 11.127 52.57087310000062 11.113 50.21416000000043 11.113 51.01987339999909 11.157 50.86647740000061 11.137 53.0319830999993 11.18 50.19285649999949 11.053 51.20980559999934 11.226 55.18473179999937 11.287 51.94342640000053 11.203 50.55863039999911 11.121 52.76543259999889 11.211 50.97793779999961 11.247 51.59660279999938 11.231 53.6378262000005 11.286 52.745309000000866 11.234 53.05678780000106 11.273 51.89369599999937 12.052)
Error minima by case: (0.1443 11 0.4612 10 0.1077 11 0.4016 9 0.0567 11 0.3207 10 0.159 10 0.8843 10 0.2633 10 0.0876 10 0.2613 11 0.4263 11 0.8463 10 0.4747 9 0.3276 11 0.6614 11 0.3464 11 0.3956 11 0.3066 10 0.1971 11 0.3638 11 0.4726 11 0.219 11 0.8853 11 0.2388 11)
Average genome size in population (length): 33.51
Average program size in population (points): 34.51
Average percent parens in population: 0.031
Minimum age in population: 169.2222136333562
Maximum age in population: 174.1139534217224
Average age in population: 172.275436018169
Median age in population: 172.3416667522593
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.718
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.718
Total error diversity:				 0.036
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.037
--- Run Statistics ---
Number of program evaluations used so far: 120000
Number of point (instruction) evaluations so far: 163828762
--- Timings ---
Current time: 1529615224009 milliseconds
Total Time:         368.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       177.9 seconds, 48.3%
Fitness Testing:    149.8 seconds, 40.7%
Report:              40.6 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 119
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 120
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 120
;;******************************
;; -*- Number IO problem report - generation 120
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_div} {:instruction integer_div} {:instruction tagged_573} {:instruction integer_div} {:instruction integer_div} {:instruction float_swap} {:instruction integer_flush} {:instruction float_sub} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_tan} {:instruction integer_min} {:instruction print_float} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_flush} {:instruction integer_pop} {:instruction float_inc} {:instruction integer_inc} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (float_div integer_div tagged_573 integer_div integer_div float_swap integer_flush float_sub float_tan integer_fromfloat integer_flush in2 integer_max integer_rot float_sub tag_integer_484 integer_flush tag_float_527 integer_flush tag_float_527 float_tan integer_min print_float in2 float_dup integer_rot float_flush integer_pop float_inc integer_inc tag_integer_484 integer_flush tag_float_527 float_pop in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 1648.6320889000044
Median total errors in population: 290.7912
Error averages by case: (54.088014299999934 11.222 55.01954119999975 12.114 55.454622500000326 11.232 55.43674880000074 11.119 52.94734960000038 11.191 54.34576119999918 11.931 55.890946000000305 11.029 55.14329149999978 11.132 54.593713500000625 11.103 52.53793360000046 11.108 54.098918599999095 11.142 53.95037770000063 11.116 54.76190529999943 11.183 51.206603499999495 11.04 54.500029999999335 11.226 58.64776339999931 11.276 53.19000160000029 11.192 53.52311399999911 11.112 54.728140199999096 11.22 54.19947109999955 11.254 55.037514999999374 11.228 57.2039906000004 11.278 54.68124300000065 11.242 56.22159070000096 11.26 55.20750199999937 12.066)
Error minima by case: (0.1443 11 0.4612 11 0.1077 6 0.4016 4 0.0567 10 0.3207 9 0.841 4 0.8843 10 0.7367 4 0.9124 5 0.2613 5 0.5737 4 0.8463 4 0.4747 4 0.3276 6 0.6614 4 0.3464 4 0.6044 5 0.6934 10 0.1971 6 0.3638 6 0.4726 4 0.781 10 0.8853 5 0.2388 10)
Average genome size in population (length): 33.301
Average program size in population (points): 34.301
Average percent parens in population: 0.031
Minimum age in population: 171.5524477903812
Maximum age in population: 175.7077287233196
Average age in population: 173.7662534512511
Median age in population: 173.7953195383939
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.727
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.727
Total error diversity:				 0.03
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 121000
Number of point (instruction) evaluations so far: 164661687
--- Timings ---
Current time: 1529615226659 milliseconds
Total Time:         371.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       179.4 seconds, 48.3%
Fitness Testing:    150.7 seconds, 40.6%
Report:              40.9 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 120
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 121
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 121
;;******************************
;; -*- Number IO problem report - generation 121
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_yankdup} {:instruction integer_fromfloat} {:instruction tagged_528} {:instruction integer_div} {:instruction tagged_573} {:instruction float_frominteger} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction tag_integer_484} {:instruction float_cos} {:instruction float_tan} {:instruction integer_min} {:instruction integer_pop} {:instruction integer_inc} {:instruction integer_flush} {:instruction float_mod} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_pop} {:instruction integer_inc} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_mod} {:instruction print_integer})
Best program: (integer_min integer_yankdup integer_fromfloat tagged_528 integer_div tagged_573 float_frominteger in2 float_dup integer_rot float_sub float_tan integer_inc integer_fromfloat tag_integer_484 float_cos float_tan integer_min integer_pop integer_inc integer_flush float_mod float_tan integer_inc integer_min integer_inc integer_pop integer_inc float_mod 92 integer_inc integer_min in1 integer_fromfloat in2 float_dup_times integer_add float_mod print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 2000.4548562000043
Median total errors in population: 290.7912
Error averages by case: (67.70440679999994 11.255 68.80501119999957 12.13 70.29789929999987 11.297 69.91139520000127 11.144 65.17532900000064 11.226 68.65162999999826 11.915 69.8090800000003 11.048 69.70187819999953 11.151 68.5458226000005 11.131 66.8663864000007 11.15 67.10373779999877 11.191 67.92131410000027 11.155 69.35444229999914 11.237 63.96526129999927 11.057 68.98282279999886 11.278 72.76614939999861 11.355 68.26545920000052 11.243 68.03898199999821 11.144 68.5674183999986 11.264 67.90696679999927 11.327 69.54351139999979 11.285 69.92626460000018 11.361 68.46815600000124 11.293 71.32099940000076 11.343 69.80953199999982 12.065)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 10 0.0567 10 0.3207 10 0.159 9 0.1157 10 0.2633 9 0.0876 10 0.2613 10 0.4263 10 0.1537 10 0.4747 10 0.3276 10 0.3386 11 0.3464 10 0.3956 9 0.3066 10 0.1971 11 0.3638 11 0.4726 11 0.219 10 0.1147 11 0.2388 11)
Average genome size in population (length): 33.409
Average program size in population (points): 34.409
Average percent parens in population: 0.031
Minimum age in population: 172.8273779209967
Maximum age in population: 177.0088603979299
Average age in population: 175.2217550735694
Median age in population: 175.2479796998092
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.748
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.748
Total error diversity:				 0.049
Error (vector) diversity:			 0.049
Behavioral diversity:				 0.049
--- Run Statistics ---
Number of program evaluations used so far: 122000
Number of point (instruction) evaluations so far: 165497262
--- Timings ---
Current time: 1529615229086 milliseconds
Total Time:         373.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       180.7 seconds, 48.4%
Fitness Testing:    151.5 seconds, 40.6%
Report:              41.2 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 121
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 122
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 122
;;******************************
;; -*- Number IO problem report - generation 122
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction float_dup} {:instruction float_mod} {:instruction print_float} {:instruction in2} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction integer_add} {:instruction float_tan} {:instruction in2} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_mod} {:instruction 93} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_min integer_div float_dup float_mod print_float in2 in2 float_dup integer_rot integer_add float_tan in2 float_tan integer_inc integer_min integer_inc float_dup_times integer_inc float_mod 93 integer_inc integer_min in1 integer_fromfloat in2 float_dup_times integer_add print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 28
Size: 29
Percent parens: 0.034
--- Population Statistics ---
Average total errors in population: 1838.2958557000047
Median total errors in population: 290.7912
Error averages by case: (61.305437099999935 11.226 63.33223519999944 12.112 63.03811470000034 11.24 63.15156000000094 11.126 58.56123620000043 11.21 62.10747839999861 11.942 63.11421800000028 11.039 63.35686999999938 11.138 62.23803000000079 11.136 60.175984800000556 11.116 60.85026039999897 11.151 61.56719850000061 11.128 63.05928859999903 11.194 58.200704699999456 11.055 62.17778839999881 11.233 65.80147219999904 11.302 62.12515200000076 11.218 61.40223479999856 11.122 62.280286399998566 11.229 60.21434649999925 11.257 62.63069419999939 11.24 64.36326460000058 11.302 62.214776000001 11.25 65.33239360000111 11.279 63.38783039999939 12.062)
Error minima by case: (0.1443 11 0.4612 11 0.1077 6 0.4016 4 0.0567 10 0.3207 9 0.159 3 0.1157 10 0.2633 4 0.9124 4 0.2613 4 0.5737 3 0.1537 3 0.4747 4 0.3276 6 0.3386 5 0.3464 4 0.3956 4 0.3066 10 0.1971 6 0.3638 6 0.4726 5 0.219 11 0.1147 5 0.2388 11)
Average genome size in population (length): 33.029
Average program size in population (points): 34.029
Average percent parens in population: 0.031
Minimum age in population: 174.3494601366327
Maximum age in population: 178.5763467756417
Average age in population: 176.6940768367168
Median age in population: 176.72950524848
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.732
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.732
Total error diversity:				 0.041
Error (vector) diversity:			 0.041
Behavioral diversity:				 0.041
--- Run Statistics ---
Number of program evaluations used so far: 123000
Number of point (instruction) evaluations so far: 166323237
--- Timings ---
Current time: 1529615231545 milliseconds
Total Time:         376.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       182.2 seconds, 48.4%
Fitness Testing:    152.3 seconds, 40.5%
Report:              41.5 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 122
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 123
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 123
;;******************************
;; -*- Number IO problem report - generation 123
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_dup_items} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction integer_flush} {:instruction tag_float_527} {:instruction integer_mult} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_pop} {:instruction integer_inc} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (integer_min integer_flush tag_float_527 float_pop in2 float_dup integer_dup_items integer_max integer_rot float_sub tag_integer_484 integer_flush tag_float_527 integer_flush tag_float_527 integer_mult integer_inc integer_min integer_inc integer_pop integer_inc float_mod 92 integer_inc float_pop in2 in1 integer_fromfloat float_pop integer_fromfloat integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 33
Size: 34
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 1787.7832915000045
Median total errors in population: 290.7912
Error averages by case: (60.574024399999935 11.218 61.347769599999474 12.109 60.54978460000033 11.234 59.99962620000085 11.132 58.72997330000045 11.195 59.457532799998866 11.94 59.75951340000028 11.052 60.46801979999938 11.124 59.15228250000066 11.129 58.598395700000474 11.12 59.61240699999907 11.152 59.5726417000006 11.135 61.26090339999912 11.198 56.63391299999948 11.055 59.95070829999905 11.226 62.907165199999234 11.296 60.38045920000058 11.211 59.42428489999883 11.136 61.15960719999876 11.213 58.87345799999929 11.244 60.30139679999939 11.242 61.64884680000039 11.292 61.15714800000095 11.234 63.59113190000098 11.269 60.46529779999937 12.051)
Error minima by case: (0.1443 11 0.4612 10 0.1077 11 0.4016 11 0.0567 10 0.3207 9 0.159 10 0.1157 10 0.2633 10 0.0876 10 0.2613 10 0.4263 10 0.1537 10 0.4747 10 0.3276 10 0.3386 11 0.3464 11 0.3956 11 0.3066 10 0.1971 10 0.3638 11 0.4726 11 0.219 11 0.1147 11 0.2388 10)
Average genome size in population (length): 32.601
Average program size in population (points): 33.601
Average percent parens in population: 0.032
Minimum age in population: 175.3835639426333
Maximum age in population: 179.9983472786225
Average age in population: 178.1688357693862
Median age in population: 178.2608126717782
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.732
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.732
Total error diversity:				 0.037
Error (vector) diversity:			 0.037
Behavioral diversity:				 0.037
--- Run Statistics ---
Number of program evaluations used so far: 124000
Number of point (instruction) evaluations so far: 167138612
--- Timings ---
Current time: 1529615234054 milliseconds
Total Time:         378.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       183.6 seconds, 48.5%
Fitness Testing:    153.1 seconds, 40.5%
Report:              41.7 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 123
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 124
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 124
;;******************************
;; -*- Number IO problem report - generation 124
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_sub} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction integer_div} {:instruction tag_float_527} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction in2} {:instruction integer_inc} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction integer_fromfloat} {:instruction print_integer})
Best program: (float_sub tag_integer_484 integer_flush tag_float_527 integer_div tag_float_527 float_tan integer_inc integer_min integer_inc in2 integer_inc tag_integer_484 integer_flush tag_float_527 float_pop in2 in1 integer_fromfloat float_pop float_dup_times integer_add integer_fromfloat print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 1668.4949384000045
Median total errors in population: 290.7912
Error averages by case: (54.58343709999994 11.209 55.834235199999696 12.106 56.02708400000035 11.24 56.71715840000068 11.131 53.94089600000063 11.194 55.29108189999888 11.925 56.646264000000286 11.04 56.54510139999967 11.118 55.64350340000087 11.115 53.016459200000675 11.113 54.07661209999882 11.159 54.81206700000064 11.131 56.4125978999993 11.19 50.41660349999928 11.054 55.332115999999026 11.23 58.23040899999927 11.29 54.957655200000346 11.202 54.82504799999878 11.121 55.676286399998766 11.213 55.17093779999947 11.264 55.67705799999936 11.234 56.85693580000063 11.297 55.60277600000074 11.233 57.550590700001194 11.273 56.51302439999935 12.057)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 11 0.0567 11 0.3207 9 0.159 8 0.8843 10 0.2633 10 0.0876 10 0.2613 10 0.4263 10 0.8463 10 0.4747 10 0.3276 10 0.6614 11 0.3464 11 0.3956 10 0.3066 10 0.1971 11 0.3638 11 0.4726 11 0.219 10 0.8853 11 0.2388 10)
Average genome size in population (length): 32.5
Average program size in population (points): 33.5
Average percent parens in population: 0.032
Minimum age in population: 176.3835639426333
Maximum age in population: 181.6327824976778
Average age in population: 179.6127085134476
Median age in population: 179.6875113642214
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.714
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.714
Total error diversity:				 0.038
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.038
--- Run Statistics ---
Number of program evaluations used so far: 125000
Number of point (instruction) evaluations so far: 167951412
--- Timings ---
Current time: 1529615236547 milliseconds
Total Time:         381.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       185.1 seconds, 48.6%
Fitness Testing:    153.9 seconds, 40.4%
Report:              41.9 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 124
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 125
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 125
;;******************************
;; -*- Number IO problem report - generation 125
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction integer_div} {:instruction tagged_573} {:instruction float_sub} {:instruction tag_integer_484} {:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction print_float} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction tag_float_527} {:instruction float_pop} {:instruction integer_min} {:instruction tag_float_527} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_fromfloat} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (integer_min integer_div tagged_573 integer_div tagged_573 float_sub tag_integer_484 integer_min integer_div tagged_573 print_float in2 float_dup integer_rot float_sub tag_float_527 float_pop integer_min tag_float_527 float_tan integer_inc integer_min integer_inc float_dup_times integer_inc integer_inc integer_fromfloat tag_integer_484 integer_flush tag_float_527 float_pop in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 39
Size: 40
Percent parens: 0.025
--- Population Statistics ---
Average total errors in population: 1757.3368302000047
Median total errors in population: 290.7912
Error averages by case: (59.19743709999994 11.217 59.82269639999955 12.131 59.289268700000314 11.226 59.12755200000078 11.117 58.330349600000474 11.204 58.047157699998856 11.949 59.0704230000003 11.037 59.34729149999951 11.127 58.65476670000075 11.122 57.363232800000546 11.118 57.43417989999899 11.148 58.44852510000061 11.124 60.08536829999918 11.196 55.70028059999942 11.042 58.70602999999899 11.225 61.91337739999924 11.279 58.96730880000058 11.199 58.24365239999879 11.117 59.67297979999878 11.23 58.529317499999344 11.249 59.026242599999385 11.225 60.31871660000049 11.29 59.725557000000855 11.244 61.00704950000104 11.251 59.1720691999994 12.069)
Error minima by case: (0.1443 11 0.4612 11 0.1077 6 0.4016 4 0.0567 11 0.3207 10 0.841 3 0.8843 10 0.7367 4 0.9124 4 0.2613 4 0.4263 3 0.8463 5 0.4747 3 0.3276 6 0.6614 6 0.3464 5 0.6044 4 0.6934 11 0.1971 6 0.3638 6 0.4726 6 0.781 11 0.8853 5 0.2388 11)
Average genome size in population (length): 32.593
Average program size in population (points): 33.593
Average percent parens in population: 0.032
Minimum age in population: 178.4274299200382
Maximum age in population: 183.0364327149836
Average age in population: 181.1173613409249
Median age in population: 181.1703153687794
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.697
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.697
Total error diversity:				 0.031
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 126000
Number of point (instruction) evaluations so far: 168766712
--- Timings ---
Current time: 1529615239073 milliseconds
Total Time:         383.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       186.5 seconds, 48.6%
Fitness Testing:    154.8 seconds, 40.3%
Report:              42.2 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 125
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 126
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 126
;;******************************
;; -*- Number IO problem report - generation 126
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_add} {:instruction integer_div} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction in2} {:instruction float_dup} {:instruction integer_mult} {:instruction float_min} {:instruction integer_dec} {:instruction float_mod} {:instruction float_pop} {:instruction float_mult} {:instruction float_pop} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction float_mod} {:instruction integer_max} {:instruction integer_mult} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (float_add integer_div float_dup_times integer_inc float_dup_times in2 float_dup integer_mult float_min integer_dec float_mod float_pop float_mult float_pop in1 integer_fromfloat integer_inc float_mod integer_max integer_mult float_pop in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 1957.6806055000045
Median total errors in population: 290.7912
Error averages by case: (66.04919719999994 11.255 66.66804089999933 12.139 67.31149930000026 11.266 67.45822210000114 11.158 65.49538570000055 11.238 67.20711979999835 11.939 67.27829510000028 11.062 68.2674484999994 11.151 67.02488890000075 11.147 66.26520770000067 11.151 66.40026259999885 11.171 66.48494430000055 11.159 67.68828859999903 11.239 65.00685679999933 11.069 66.68822829999871 11.266 69.42581079999884 11.33 66.7201520000008 11.242 66.28139729999837 11.15 66.2881446999984 11.248 66.51753229999908 11.287 67.00131869999944 11.26 68.1067372000004 11.337 66.36914510000119 11.263 68.520934800001 11.304 68.25854679999955 12.066)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 11 0.0567 11 0.3207 10 0.159 9 0.1157 10 0.2633 10 0.0876 11 0.2613 10 0.4263 10 0.1537 10 0.4747 8 0.3276 11 0.3386 11 0.3464 11 0.3956 8 0.3066 10 0.1971 11 0.3638 11 0.4726 11 0.219 11 0.1147 11 0.2388 10)
Average genome size in population (length): 32.677
Average program size in population (points): 33.677
Average percent parens in population: 0.032
Minimum age in population: 180.0663745794247
Maximum age in population: 184.6876844819524
Average age in population: 182.6005797005282
Median age in population: 182.6175845006041
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.731
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.731
Total error diversity:				 0.039
Error (vector) diversity:			 0.039
Behavioral diversity:				 0.04
--- Run Statistics ---
Number of program evaluations used so far: 127000
Number of point (instruction) evaluations so far: 169584212
--- Timings ---
Current time: 1529615241633 milliseconds
Total Time:         386.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       188.0 seconds, 48.7%
Fitness Testing:    155.6 seconds, 40.3%
Report:              42.4 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 126
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 127
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 127
;;******************************
;; -*- Number IO problem report - generation 127
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction float_dec} {:instruction integer_min} {:instruction integer_div} {:instruction tagged_842} {:instruction print_float} {:instruction in2} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction 71} {:instruction float_dec} {:instruction integer_min} {:instruction integer_inc} {:instruction float_cos} {:instruction float_tan} {:instruction integer_inc} {:instruction float_pop} {:instruction 71} {:instruction integer_inc} {:instruction float_cos} {:instruction float_tan} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_inc} {:instruction integer_swap} {:instruction integer_inc} {:instruction integer_inc} {:instruction tag_integer_484} {:instruction tagged_464} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (integer_min integer_div tagged_573 float_dec integer_min integer_div tagged_842 print_float in2 float_dup_times float_mod float_pop 71 float_dec integer_min integer_inc float_cos float_tan integer_inc float_pop 71 integer_inc float_cos float_tan integer_swap integer_inc integer_inc integer_min in1 integer_inc integer_swap integer_inc integer_inc tag_integer_484 tagged_464 tag_float_527 float_pop in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 45
Size: 46
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 1673.6064938000045
Median total errors in population: 290.7912
Error averages by case: (56.189128299999936 11.215 56.83639479999936 12.12 55.765268700000384 11.219 55.786371200001035 11.127 55.43849910000051 11.195 53.96111979999871 11.941 55.7281720000003 11.036 55.68475429999934 11.124 55.280926300000765 11.11 54.24154680000059 11.109 54.816134699998884 11.15 54.74464070000069 11.121 57.1473682999989 11.197 51.617634799999394 11.035 55.03437479999874 11.225 59.404377399999035 11.285 56.240576800000774 11.199 54.3878171999985 11.117 56.45465899999851 11.222 54.77131749999905 11.239 55.41251499999931 11.221 57.66771660000052 11.304 56.5130610000011 11.24 56.80404950000113 11.258 55.60606919999932 12.063)
Error minima by case: (0.1443 11 0.4612 11 0.1077 6 0.4016 4 0.0567 9 0.3207 10 0.159 3 0.1157 10 0.2633 4 0.0876 4 0.2613 5 0.4263 4 0.1537 5 0.4747 3 0.3276 6 0.3386 6 0.3464 5 0.3956 5 0.3066 11 0.1971 6 0.3638 6 0.4726 6 0.219 11 0.1147 5 0.2388 10)
Average genome size in population (length): 32.274
Average program size in population (points): 33.274
Average percent parens in population: 0.032
Minimum age in population: 181.1630522068019
Maximum age in population: 186.1942900089486
Average age in population: 184.0958277966277
Median age in population: 184.1205565945749
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.71
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.71
Total error diversity:				 0.03
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 128000
Number of point (instruction) evaluations so far: 170391512
--- Timings ---
Current time: 1529615244098 milliseconds
Total Time:         388.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       189.4 seconds, 48.7%
Fitness Testing:    156.4 seconds, 40.2%
Report:              42.7 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 127
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 128
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 128
;;******************************
;; -*- Number IO problem report - generation 128
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction print_float} {:instruction in2} {:instruction float_dup} {:instruction float_shove} {:instruction float_sub} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction float_inc} {:instruction float_dec} {:instruction integer_min} {:instruction tag_float_967} {:instruction float_cos} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_stackdepth} {:instruction integer_flush} {:instruction tag_float_527} {:instruction in2} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (integer_min integer_div tagged_573 print_float in2 float_dup float_shove float_sub float_tan integer_inc integer_min integer_inc float_dup_times integer_inc float_dup_times float_mod float_pop float_inc float_dec integer_min tag_float_967 float_cos float_tan integer_inc integer_inc integer_inc float_stackdepth integer_flush tag_float_527 in2 in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 1732.3819740000047
Median total errors in population: 290.7912
Error averages by case: (59.718849799999944 11.22 60.304623199999575 12.123 57.367514800000386 11.223 59.2913792000008 11.132 58.89689600000059 11.202 55.29904399999889 11.943 59.66733100000029 11.049 56.353522899999724 11.122 59.440189600000835 11.127 56.53233520000067 11.119 56.215179899998795 11.15 55.66105110000068 11.135 59.54659789999914 11.195 55.92095769999928 11.05 56.8174263999991 11.23 61.2654089999991 11.292 58.239576800000535 11.212 56.28979519999882 11.127 59.814352399998654 11.215 56.60593779999949 11.238 57.15051319999932 11.232 60.11593580000061 11.3 59.923966000000874 11.229 57.43813190000123 11.249 56.337457199999314 12.054)
Error minima by case: (0.1443 11 0.4612 11 0.1077 10 0.4016 11 0.0567 9 0.3207 10 0.159 10 0.1157 10 0.2633 11 0.0876 10 0.2613 11 0.4263 11 0.8463 10 0.4747 10 0.3276 10 0.6614 11 0.3464 11 0.3956 10 0.3066 10 0.1971 9 0.3638 11 0.4726 11 0.219 11 0.8853 11 0.2388 11)
Average genome size in population (length): 32.059
Average program size in population (points): 33.059
Average percent parens in population: 0.032
Minimum age in population: 183.1047054689292
Maximum age in population: 187.481156523039
Average age in population: 185.6066672332106
Median age in population: 185.6512313314032
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.71
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.71
Total error diversity:				 0.037
Error (vector) diversity:			 0.037
Behavioral diversity:				 0.037
--- Run Statistics ---
Number of program evaluations used so far: 129000
Number of point (instruction) evaluations so far: 171193387
--- Timings ---
Current time: 1529615246816 milliseconds
Total Time:         391.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       190.9 seconds, 48.8%
Fitness Testing:    157.3 seconds, 40.2%
Report:              43.0 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 128
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 129
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 129
;;******************************
;; -*- Number IO problem report - generation 129
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction float_dup} {:instruction integer_yankdup} {:instruction integer_rot} {:instruction float_sub} {:instruction tag_integer_581} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (integer_min integer_div float_dup integer_yankdup integer_rot float_sub tag_integer_581 integer_flush tag_float_527 float_pop in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 18
Size: 19
Percent parens: 0.053
--- Population Statistics ---
Average total errors in population: 2202.3971241000045
Median total errors in population: 290.7912
Error averages by case: (76.39470549999994 11.272 77.09516200000058 12.156 77.93111469999896 11.283 77.81656800000121 11.156 74.67466920000065 11.245 75.73183699999822 11.949 77.2294900000003 11.054 76.42014270000055 11.169 76.37313639999954 11.148 75.66986080000072 11.158 75.69452169999876 11.169 75.94660889999962 11.153 77.27667190000021 11.244 74.76658420000011 11.062 76.85813319999988 11.268 80.41385819999856 11.357 76.66826319999947 11.26 76.2819379999982 11.152 76.52696559999957 11.28 75.95036099999989 11.296 77.27796660000072 11.283 78.45448379999915 11.366 76.9821850000013 11.301 78.23273769999986 11.312 76.56115880000071 12.075)
Error minima by case: (0.1443 11 0.4612 10 0.1077 6 0.5984 4 0.0567 10 0.3207 10 0.159 4 0.8843 10 0.7367 4 0.9124 5 0.2613 5 0.5737 4 0.8463 4 0.4747 4 0.3276 6 0.6614 4 0.3464 4 0.3956 5 0.6934 11 0.1971 6 0.3638 6 0.4726 4 0.781 11 0.8853 5 0.2388 10)
Average genome size in population (length): 31.959
Average program size in population (points): 32.959
Average percent parens in population: 0.033
Minimum age in population: 184.6270913816432
Maximum age in population: 188.9240503921271
Average age in population: 187.0751945059012
Median age in population: 187.1046700454505
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.726
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.726
Total error diversity:				 0.035
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 130000
Number of point (instruction) evaluations so far: 171992862
--- Timings ---
Current time: 1529615249443 milliseconds
Total Time:         393.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       192.3 seconds, 48.8%
Fitness Testing:    158.2 seconds, 40.2%
Report:              43.3 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 129
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 130
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 130
;;******************************
;; -*- Number IO problem report - generation 130
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_cos} {:instruction float_tan} {:instruction integer_inc} {:instruction tagged_848} {:instruction integer_inc} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_543} {:instruction float_pop} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_yankdup} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_sin} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (integer_min float_pop in2 integer_dup_items integer_rot float_sub float_min in1 integer_fromfloat in2 float_cos float_tan integer_inc tagged_848 integer_inc tag_integer_484 integer_flush tag_float_543 float_pop integer_inc integer_inc integer_inc tag_integer_484 integer_flush tag_float_527 float_yankdup in2 in1 integer_fromfloat float_sin float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 34
Size: 35
Percent parens: 0.029
--- Population Statistics ---
Average total errors in population: 1651.0300764000049
Median total errors in population: 290.7912
Error averages by case: (55.82300079999994 11.212 56.63660529999955 12.11 53.264556800000356 11.23 54.11047040000085 11.122 55.57131990000055 11.198 53.94249599999874 11.924 54.918475000000306 11.039 55.0861849999995 11.124 53.70786600000077 11.118 51.342772700000594 11.109 52.58026189999891 11.155 52.17951910000067 11.129 58.380652999999036 11.198 51.403764699999385 11.045 52.48279359999894 11.233 60.080695999999094 11.279 56.87451720000056 11.196 51.614456699998776 11.114 56.06101249999867 11.214 52.20644129999928 11.25 52.97205769999933 11.224 59.16111210000058 11.299 56.121750000000915 11.24 57.674211500001164 11.266 54.75208119999934 12.053)
Error minima by case: (0.1443 10 0.4612 11 0.1077 11 0.4016 8 0.0567 9 0.3207 9 0.159 10 0.1157 10 0.2633 9 0.0876 10 0.2613 10 0.4263 10 0.1537 11 0.4747 9 0.3276 11 0.3386 11 0.3464 10 0.3956 9 0.3066 10 0.1971 9 0.3638 10 0.4726 11 0.219 11 0.1147 11 0.2388 10)
Average genome size in population (length): 31.64
Average program size in population (points): 32.64
Average percent parens in population: 0.033
Minimum age in population: 186.2188169180358
Maximum age in population: 190.5636681449975
Average age in population: 188.5711989555319
Median age in population: 188.6306535828816
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.716
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.716
Total error diversity:				 0.044
Error (vector) diversity:			 0.045
Behavioral diversity:				 0.045
--- Run Statistics ---
Number of program evaluations used so far: 131000
Number of point (instruction) evaluations so far: 172784412
--- Timings ---
Current time: 1529615251895 milliseconds
Total Time:         396.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       193.7 seconds, 48.9%
Fitness Testing:    159.0 seconds, 40.1%
Report:              43.6 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 130
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 131
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 131
;;******************************
;; -*- Number IO problem report - generation 131
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_dec} {:instruction tagged_573} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_tan} {:instruction integer_sub} {:instruction integer_min} {:instruction integer_inc} {:instruction print_float} {:instruction integer_inc} {:instruction integer_mult} {:instruction 91} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_min float_dec tagged_573 tag_integer_484 integer_flush tag_float_527 integer_flush tag_float_527 float_tan integer_sub integer_min integer_inc print_float integer_inc integer_mult 91 integer_inc integer_min in1 integer_fromfloat in2 float_dup_times integer_add print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 1530.5273805000045
Median total errors in population: 290.7912
Error averages by case: (50.82685989999994 11.186 51.52385159999951 12.104 49.85703270000037 11.19 50.92089590000091 11.103 49.915859900000534 11.174 47.21991329999898 11.947 50.1894947000003 11.03 49.596840099999525 11.113 50.15952550000078 11.104 48.172219400000515 11.094 48.92434149999897 11.131 48.794073800000675 11.106 51.591368299999075 11.171 45.703101599999435 11.032 49.18923389999905 11.194 53.56937739999918 11.247 50.58426960000061 11.173 48.511992199998886 11.098 51.214592999998644 11.204 48.94444299999937 11.208 49.58879129999932 11.2 52.06771660000053 11.26 51.23899500000096 11.215 51.35701720000115 11.229 49.29857309999933 12.054)
Error minima by case: (0.1443 10 0.4612 10 0.1077 3 0.4016 2 0.0567 10 0.3207 10 0.159 2 0.8843 10 0.2633 2 0.0876 2 0.2613 2 0.4263 1 0.8463 2 0.4747 2 0.3276 3 0.6614 2 0.3464 2 0.3956 2 0.3066 11 0.1971 3 0.3638 3 0.4726 2 0.219 10 0.8853 2 0.2388 10)
Average genome size in population (length): 31.278
Average program size in population (points): 32.278
Average percent parens in population: 0.034
Minimum age in population: 187.2288862108256
Maximum age in population: 191.9146502771244
Average age in population: 189.9784914838367
Median age in population: 190.0425515997033
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.715
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.715
Total error diversity:				 0.036
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.036
--- Run Statistics ---
Number of program evaluations used so far: 132000
Number of point (instruction) evaluations so far: 173566812
--- Timings ---
Current time: 1529615254253 milliseconds
Total Time:         398.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       195.1 seconds, 48.9%
Fitness Testing:    159.8 seconds, 40.1%
Report:              43.8 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 131
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 132
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 132
;;******************************
;; -*- Number IO problem report - generation 132
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup} {:instruction float_sub} {:instruction float_dup_items} {:instruction in2} {:instruction float_mult} {:instruction integer_rot} {:instruction float_sub} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction in1} {:instruction tag_float_527} {:instruction float_sub} {:instruction float_tan} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction print_integer})
Best program: (float_dup float_sub float_dup_items in2 float_mult integer_rot float_sub tag_integer_484 integer_flush tag_float_527 in1 tag_float_527 float_sub float_tan in1 integer_fromfloat in2 float_dup_times integer_add print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 20
Size: 21
Percent parens: 0.048
--- Population Statistics ---
Average total errors in population: 1675.3545054000047
Median total errors in population: 290.7912
Error averages by case: (56.316312999999944 11.196 56.97669199999967 12.105 55.20460560000035 11.213 55.2154360000007 11.123 56.60297330000059 11.182 55.52015799999886 11.945 54.63346850000026 11.053 55.682623799999675 11.123 54.779454700000834 11.115 53.76773560000066 11.109 53.12032089999887 11.131 52.55520260000062 11.118 58.07129049999933 11.185 51.91296309999927 11.051 54.49276439999908 11.2 59.822408999999304 11.272 57.42096240000037 11.2 53.99977049999883 11.115 56.869993999998755 11.201 54.32828499999948 11.226 54.812532599999365 11.213 58.27188100000059 11.275 56.88971000000076 11.213 59.90632900000117 11.239 56.32562989999937 12.052)
Error minima by case: (0.1443 11 0.4612 11 0.1077 6 0.4016 10 0.0567 9 0.3207 9 0.159 10 0.1157 10 0.2633 10 0.0876 4 0.2613 3 0.4263 3 0.1537 10 0.4747 10 0.3276 6 0.3386 11 0.3464 11 0.3956 4 0.3066 10 0.1971 6 0.3638 6 0.4726 11 0.219 11 0.1147 6 0.2388 11)
Average genome size in population (length): 31.412
Average program size in population (points): 32.412
Average percent parens in population: 0.034
Minimum age in population: 188.2288862108256
Maximum age in population: 193.5411883345526
Average age in population: 191.500845265325
Median age in population: 191.5600753824728
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.708
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.708
Total error diversity:				 0.034
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 133000
Number of point (instruction) evaluations so far: 174352787
--- Timings ---
Current time: 1529615256805 milliseconds
Total Time:         401.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       196.5 seconds, 49.0%
Fitness Testing:    160.6 seconds, 40.0%
Report:              44.0 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 132
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 133
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 133
;;******************************
;; -*- Number IO problem report - generation 133
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_div} {:instruction tagged_573} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction float_dup_times} {:instruction float_min} {:instruction float_pop} {:instruction 71} {:instruction -86} {:instruction integer_min} {:instruction float_sin} {:instruction float_cos} {:instruction float_tan} {:instruction float_mod} {:instruction integer_inc} {:instruction integer_inc} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_cos} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_cos} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (float_mod integer_div tagged_573 integer_stackdepth integer_inc float_dup_times float_min float_pop 71 -86 integer_min float_sin float_cos float_tan float_mod integer_inc integer_inc tag_integer_484 integer_flush tag_float_527 float_cos in2 in1 integer_fromfloat float_cos float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 1722.2553613000046
Median total errors in population: 290.7912
Error averages by case: (60.56157129999994 11.239 61.38392919999936 12.131 55.997191700000364 11.233 58.44937120000094 11.124 58.4173496000006 11.206 54.756685399998695 11.941 59.1028540000003 11.036 55.40898569999952 11.13 57.86939970000084 11.117 54.43172200000063 11.122 54.592225099998856 11.153 53.758919600000645 11.133 60.158058999998964 11.207 55.519432399999296 11.041 55.23909879999892 11.23 62.23410199999898 11.296 59.03353760000068 11.206 54.69781719999865 11.123 61.00581939999849 11.228 55.08395229999927 11.259 55.59614939999935 11.228 60.7315180000006 11.302 61.02387100000106 11.252 59.534820100001156 11.278 55.38997959999934 12.062)
Error minima by case: (0.1443 11 0.4612 11 0.1077 6 0.5984 4 0.0567 10 0.3207 10 0.841 3 0.1157 10 0.7367 4 0.9124 4 0.2613 4 0.5737 3 0.1537 5 0.4747 3 0.3276 6 0.3386 6 0.3464 5 0.6044 4 0.6934 10 0.1971 6 0.3638 6 0.4726 6 0.781 11 0.1147 5 0.2388 11)
Average genome size in population (length): 31.289
Average program size in population (points): 32.289
Average percent parens in population: 0.034
Minimum age in population: 189.2288862108256
Maximum age in population: 194.9176258904889
Average age in population: 192.9419029042878
Median age in population: 193.0059425640475
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.717
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.717
Total error diversity:				 0.034
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 134000
Number of point (instruction) evaluations so far: 175135487
--- Timings ---
Current time: 1529615259419 milliseconds
Total Time:         403.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       197.9 seconds, 49.0%
Fitness Testing:    161.5 seconds, 40.0%
Report:              44.3 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 133
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 134
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 134
;;******************************
;; -*- Number IO problem report - generation 134
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_add} {:instruction float_sub} {:instruction float_dup_times} {:instruction integer_min} {:instruction integer_inc} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction 71} {:instruction float_dec} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_dec} {:instruction print_integer})
Best program: (float_add float_sub float_dup_times integer_min integer_inc float_tan integer_inc integer_inc integer_inc 71 float_dec 92 integer_inc integer_min in1 integer_fromfloat in2 float_dup_times integer_add float_dec print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 21
Size: 22
Percent parens: 0.045
--- Population Statistics ---
Average total errors in population: 1828.0806633000045
Median total errors in population: 290.7912
Error averages by case: (62.702426999999936 11.232 63.500467999999394 12.13 61.63498500000035 11.245 61.82522440000084 11.137 60.83740630000055 11.221 60.92416759999875 11.943 62.612108800000286 11.059 61.5770503999995 11.138 61.18886470000075 11.127 59.991714000000584 11.13 60.87469599999893 11.17 60.68761660000063 11.151 63.20205899999904 11.214 59.772687199999375 11.056 60.995991699999 11.25 64.48942479999906 11.301 62.07753760000055 11.218 60.256511599998866 11.138 63.2331259999986 11.229 59.73857239999943 11.271 61.389223199999364 11.246 63.63951800000055 11.314 63.23509000000099 11.254 63.88254060000112 11.278 61.28765239999937 12.072)
Error minima by case: (0.1443 11 0.4612 10 0.1077 11 0.4016 10 0.0567 10 0.3207 10 0.159 10 0.8843 10 0.2633 8 0.0876 8 0.2613 10 0.4263 11 0.8463 11 0.4747 10 0.3276 10 0.6614 11 0.3464 10 0.3956 11 0.3066 10 0.1971 11 0.3638 10 0.4726 11 0.219 11 0.8853 11 0.2388 11)
Average genome size in population (length): 30.588
Average program size in population (points): 31.588
Average percent parens in population: 0.035
Minimum age in population: 191.0324564603572
Maximum age in population: 196.1510162761071
Average age in population: 194.4026644325953
Median age in population: 194.3958445893826
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 8
Genome diversity (% unique Plush genomes):	 0.717
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 8
Syntactic diversity (% unique Push programs):	 0.717
Total error diversity:				 0.031
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 135000
Number of point (instruction) evaluations so far: 175900587
--- Timings ---
Current time: 1529615261782 milliseconds
Total Time:         406.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       199.3 seconds, 49.1%
Fitness Testing:    162.3 seconds, 39.9%
Report:              44.6 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 134
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 135
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 135
;;******************************
;; -*- Number IO problem report - generation 135
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction float_max} {:instruction integer_fromfloat} {:instruction float_dup} {:instruction float_mod} {:instruction float_sub} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction in1} {:instruction tag_float_527} {:instruction float_yankdup} {:instruction integer_max} {:instruction integer_mult} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_mod} {:instruction float_pop} {:instruction float_inc} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_sub} {:instruction integer_swap} {:instruction tag_float_527} {:instruction tag_integer_484} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_fromfloat} {:instruction float_div} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (integer_min integer_min integer_min float_max integer_fromfloat float_dup float_mod float_sub tag_integer_484 integer_flush tag_float_527 in1 tag_float_527 float_yankdup integer_max integer_mult float_sub float_dup_times tag_float_527 float_mod float_pop float_inc in2 float_dup integer_rot float_sub integer_swap tag_float_527 tag_integer_484 float_pop in2 in1 integer_fromfloat integer_fromfloat float_div float_dup_times integer_add float_cos integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 2011.2065340000045
Median total errors in population: 290.7912
Error averages by case: (70.03854099999994 11.266 71.08378279999967 12.142 68.92994250000007 11.294 70.46955030000123 11.152 67.31493210000062 11.236 68.33761299999826 11.929 70.19790070000029 11.053 69.70007969999943 11.153 69.69995110000053 11.146 66.45588330000072 11.149 67.02095649999876 11.198 67.00727250000047 11.15 70.14967379999918 11.242 65.76296179999937 11.062 67.89417279999871 11.279 72.65045639999866 11.354 69.07607360000068 11.244 66.98584699999819 11.137 70.8055645999987 11.267 66.70402629999906 11.316 68.33085959999961 11.283 70.7926276000001 11.365 70.77768900000129 11.294 72.01457290000069 11.321 69.89960309999978 12.074)
Error minima by case: (0.1443 10 0.4612 10 0.1077 11 0.4016 9 0.0567 9 0.3207 9 0.159 10 0.8843 10 0.2633 10 0.0876 9 0.2613 11 0.4263 9 0.8463 10 0.4747 10 0.3276 10 0.6614 10 0.3464 10 0.3956 10 0.3066 10 0.1971 9 0.3638 10 0.4726 10 0.219 10 0.8853 10 0.2388 11)
Average genome size in population (length): 29.933
Average program size in population (points): 30.933
Average percent parens in population: 0.036
Minimum age in population: 193.5475115200915
Maximum age in population: 197.8178819355012
Average age in population: 195.9060138557838
Median age in population: 195.9299689998728
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.714
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.714
Total error diversity:				 0.038
Error (vector) diversity:			 0.038
Behavioral diversity:				 0.038
--- Run Statistics ---
Number of program evaluations used so far: 136000
Number of point (instruction) evaluations so far: 176649337
--- Timings ---
Current time: 1529615264306 milliseconds
Total Time:         408.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       200.8 seconds, 49.1%
Fitness Testing:    163.1 seconds, 39.9%
Report:              44.7 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 135
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 136
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 136
;;******************************
;; -*- Number IO problem report - generation 136
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction -30.548676549632987} {:instruction integer_flush} {:instruction tag_float_618} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction float_pop} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction integer_inc} {:instruction tag_integer_283} {:instruction in1} {:instruction tag_float_527} {:instruction 58.47470098290103} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_swap} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (integer_min -30.548676549632987 integer_flush tag_float_618 float_pop in2 float_dup float_pop float_dup_times tag_float_527 integer_inc tag_integer_283 in1 tag_float_527 58.47470098290103 in2 in1 integer_fromfloat float_pop float_swap integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 1924.2643865000045
Median total errors in population: 290.7912
Error averages by case: (65.28729279999993 11.242 66.25277399999963 12.132 66.40997630000024 11.264 66.66535520000089 11.149 63.58023620000038 11.216 65.18719559999886 11.934 66.88226400000029 11.062 66.19921709999959 11.15 65.94424010000051 11.142 63.92963440000049 11.14 64.78935079999907 11.165 65.17834590000065 11.148 66.08859599999923 11.222 62.8646034999995 11.071 65.60240919999916 11.257 67.69882659999931 11.318 64.95715200000056 11.224 65.00602599999878 11.149 66.00359299999889 11.24 65.3787116999992 11.273 66.04360459999947 11.259 66.53931940000028 11.321 66.02699500000095 11.257 67.0475083000006 11.275 66.02115879999948 12.07)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 10 0.0567 9 0.3207 9 0.159 10 0.1157 10 0.2633 11 0.0876 10 0.2613 11 0.4263 10 0.1537 11 0.4747 10 0.3276 11 0.3386 11 0.3464 11 0.3956 10 0.3066 11 0.1971 11 0.3638 11 0.4726 11 0.219 11 0.1147 10 0.2388 11)
Average genome size in population (length): 29.92
Average program size in population (points): 30.92
Average percent parens in population: 0.036
Minimum age in population: 194.7778687280052
Maximum age in population: 199.1270312691165
Average age in population: 197.3547463838471
Median age in population: 197.4197149962944
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.717
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.717
Total error diversity:				 0.032
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 137000
Number of point (instruction) evaluations so far: 177397862
--- Timings ---
Current time: 1529615266712 milliseconds
Total Time:         411.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       202.2 seconds, 49.2%
Fitness Testing:    163.9 seconds, 39.8%
Report:              45.0 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 136
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 137
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 137
;;******************************
;; -*- Number IO problem report - generation 137
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction integer_dup_items} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction integer_add} {:instruction float_yankdup} {:instruction float_dup_times} {:instruction integer_min} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction integer_mult} {:instruction 92} {:instruction 94} {:instruction integer_min} {:instruction integer_dup} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_mult} {:instruction integer_inc} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_shove} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_mod} {:instruction print_integer})
Best program: (integer_min integer_flush tag_float_527 float_pop in2 float_dup integer_dup_items integer_max integer_rot float_sub integer_add float_yankdup float_dup_times integer_min integer_inc float_dup_times integer_inc integer_inc float_dup_times integer_inc integer_mult 92 94 integer_min integer_dup integer_min integer_inc integer_mult integer_inc float_mod 92 integer_inc integer_shove in1 integer_fromfloat in2 float_dup_times integer_add float_mod print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 1704.5308147000046
Median total errors in population: 290.7912
Error averages by case: (56.92529279999994 11.218 57.65231279999938 12.119 57.39337640000035 11.227 57.51895360000097 11.13 56.056576400000516 11.198 55.15744049999867 11.939 56.851105000000274 11.046 57.59163859999936 11.13 56.5352401000007 11.118 55.916670800000546 11.121 56.775531599998956 11.154 56.63665660000061 11.133 57.620444199999014 11.201 53.183603499999414 11.054 56.83735759999883 11.235 59.17107039999906 11.28 56.442230400000675 11.2 56.328465599998616 11.127 56.83897979999858 11.215 56.585302999999165 11.248 57.20087879999938 11.229 58.197353600000504 11.295 57.32933800000105 11.23 58.244164200001066 11.255 57.37383039999939 12.065)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.5984 11 0.0567 9 0.3207 10 0.841 10 0.8843 10 0.7367 11 0.9124 10 0.2613 11 0.4263 10 0.8463 11 0.4747 10 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 10 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 10 0.2388 11)
Average genome size in population (length): 29.836
Average program size in population (points): 30.836
Average percent parens in population: 0.036
Minimum age in population: 195.9423302554587
Maximum age in population: 200.6765842850365
Average age in population: 198.814788407951
Median age in population: 198.8446206706149
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.713
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.713
Total error diversity:				 0.03
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 138000
Number of point (instruction) evaluations so far: 178144362
--- Timings ---
Current time: 1529615269302 milliseconds
Total Time:         413.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       203.6 seconds, 49.2%
Fitness Testing:    164.7 seconds, 39.8%
Report:              45.3 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 137
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 138
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 138
;;******************************
;; -*- Number IO problem report - generation 138
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_636} {:instruction float_dec} {:instruction integer_div} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_pop} {:instruction 71} {:instruction float_dec} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_fromfloat} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction integer_pop} {:instruction float_max} {:instruction tag_float_527} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (integer_min integer_div tagged_636 float_dec integer_div float_dup_times float_mod float_pop 71 float_dec integer_inc integer_min in1 integer_fromfloat in2 float_dup_times integer_inc float_dup_times integer_fromfloat in1 integer_fromfloat in2 float_tan integer_inc integer_inc integer_inc tag_integer_484 integer_flush integer_pop float_max tag_float_527 tag_float_527 float_pop in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 41
Size: 42
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 1951.8975062000045
Median total errors in population: 290.7912
Error averages by case: (67.30728269999994 11.228 68.80039039999991 12.127 66.09933479999974 11.225 67.12137430000112 11.121 66.47429290000058 11.208 63.84080899999849 11.962 65.63617210000028 11.044 67.0913388999998 11.145 66.67222330000017 11.126 64.84439630000061 11.112 64.55537229999892 11.147 65.36584350000062 11.127 68.73667379999944 11.195 62.893630099999335 11.047 65.57677529999872 11.224 70.83511779999876 11.288 68.68011280000029 11.201 65.0383383999984 11.12 68.71151279999894 11.231 65.33637879999898 11.239 65.92660529999996 11.227 69.99010019999956 11.296 68.71365200000126 11.246 68.89542590000019 11.245 66.55135249999998 12.072)
Error minima by case: (0.1443 10 0.4612 10 0.1077 5 0.4016 4 0.0567 5 0.2548 9 0.159 3 0.8843 10 0.2633 5 0.0876 4 0.2613 4 0.4263 3 0.8463 5 0.4747 4 0.3276 5 0.6614 5 0.3464 5 0.3956 4 0.3066 10 0.1971 5 0.3638 5 0.4726 5 0.219 10 0.8853 4 0.2388 10)
Average genome size in population (length): 29.494
Average program size in population (points): 30.494
Average percent parens in population: 0.037
Minimum age in population: 196.9423302554587
Maximum age in population: 202.1500635230347
Average age in population: 200.2755300784362
Median age in population: 200.3199628470361
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.698
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.698
Total error diversity:				 0.033
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 139000
Number of point (instruction) evaluations so far: 178882137
--- Timings ---
Current time: 1529615271729 milliseconds
Total Time:         416.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       205.0 seconds, 49.3%
Fitness Testing:    165.5 seconds, 39.8%
Report:              45.6 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 138
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 139
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 139
;;******************************
;; -*- Number IO problem report - generation 139
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_div} {:instruction tagged_573} {:instruction integer_stackdepth} {:instruction integer_min} {:instruction integer_div} {:instruction integer_min} {:instruction integer_flush} {:instruction integer_stackdepth} {:instruction integer_flush} {:instruction float_min} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_tan} {:instruction in1} {:instruction integer_fromfloat} {:instruction tag_float_519} {:instruction float_tan} {:instruction integer_mult} {:instruction 93} {:instruction float_pop} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction print_integer})
Best program: (float_mod integer_div tagged_573 integer_stackdepth integer_min integer_div integer_min integer_flush integer_stackdepth integer_flush float_min tag_float_527 float_pop in2 integer_dup_items integer_rot float_sub float_tan in1 integer_fromfloat tag_float_519 float_tan integer_mult 93 float_pop integer_min in1 integer_fromfloat in2 float_dup_times integer_add print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 2036.2046756000043
Median total errors in population: 290.7912
Error averages by case: (70.14358139999993 11.253 70.8050023999995 12.143 69.92079160000006 11.252 70.5375440000013 11.148 69.49180320000062 11.228 70.35176119999822 11.945 70.9146280000003 11.058 70.46125019999937 11.144 69.80897680000054 11.142 68.91651040000067 11.148 68.66790869999885 11.16 68.43860890000038 11.146 70.92451819999911 11.23 68.65222999999958 11.061 69.42849519999878 11.254 72.4295195999987 11.323 70.2031520000007 11.234 69.05542159999817 11.142 70.81944679999856 11.256 69.23714939999915 11.272 69.20451139999965 11.251 71.19295640000016 11.326 70.77646200000139 11.27 72.50470540000072 11.289 70.56874079999963 12.074)
Error minima by case: (0.1443 11 0.4612 11 0.1077 6 0.4016 4 0.0567 11 0.3207 10 0.841 3 0.8843 10 0.7367 4 0.9124 4 0.2613 4 0.5737 3 0.8463 5 0.4747 3 0.3276 6 0.6614 6 0.3464 5 0.6044 4 0.6934 10 0.1971 6 0.3638 6 0.4726 6 0.781 11 0.8853 5 0.2388 11)
Average genome size in population (length): 28.956
Average program size in population (points): 29.956
Average percent parens in population: 0.038
Minimum age in population: 198.9651342741388
Maximum age in population: 203.6162550401888
Average age in population: 201.7390360737823
Median age in population: 201.7640377023069
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.72
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.72
Total error diversity:				 0.025
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 140000
Number of point (instruction) evaluations so far: 179606387
--- Timings ---
Current time: 1529615274142 milliseconds
Total Time:         418.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       206.4 seconds, 49.3%
Fitness Testing:    166.2 seconds, 39.7%
Report:              45.9 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 139
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 140
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 140
;;******************************
;; -*- Number IO problem report - generation 140
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_inc} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction tagged_739} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_mod} {:instruction print_integer})
Best program: (integer_min integer_inc float_mod 92 integer_inc tagged_739 in1 integer_fromfloat in2 float_dup_times integer_add float_mod print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 13
Size: 14
Percent parens: 0.071
--- Population Statistics ---
Average total errors in population: 1684.5752263000047
Median total errors in population: 290.7912
Error averages by case: (57.133138399999936 11.209 57.99254559999955 12.107 56.05780150000033 11.22 57.35143010000076 11.124 55.10029290000051 11.198 54.131171499998956 11.936 57.47107190000029 11.044 54.963308699999665 11.136 56.580458600000746 11.115 53.549383400000536 11.111 55.10905229999897 11.144 54.80624650000061 11.13 57.70905899999916 11.187 52.53549129999944 11.05 55.20679779999915 11.217 59.249101999999226 11.273 56.01988400000056 11.196 54.46644469999892 11.121 57.67173919999875 11.212 54.93899539999948 11.229 55.695920199999385 11.222 58.33451800000051 11.281 57.66352800000087 11.231 57.40772140000111 11.253 55.42012389999939 12.064)
Error minima by case: (0.1443 11 0.4612 10 0.1077 5 0.4016 5 0.0567 9 0.3207 9 0.159 5 0.8843 10 0.2633 5 0.0876 4 0.2613 4 0.4263 3 0.8463 5 0.4747 5 0.3276 5 0.6614 5 0.3464 5 0.3956 4 0.3066 10 0.1971 5 0.3638 5 0.4726 5 0.219 11 0.8853 4 0.2388 11)
Average genome size in population (length): 28.94
Average program size in population (points): 29.94
Average percent parens in population: 0.038
Minimum age in population: 200.5966844136365
Maximum age in population: 205.2523176696889
Average age in population: 203.2469904857076
Median age in population: 203.3348373779117
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.703
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.703
Total error diversity:				 0.033
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 141000
Number of point (instruction) evaluations so far: 180330287
--- Timings ---
Current time: 1529615276489 milliseconds
Total Time:         421.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       207.9 seconds, 49.4%
Fitness Testing:    167.0 seconds, 39.6%
Report:              46.1 seconds, 11.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 140
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 141
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 141
;;******************************
;; -*- Number IO problem report - generation 141
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_fromfloat} {:instruction float_sub} {:instruction float_dup_times} {:instruction integer_min} {:instruction integer_inc} {:instruction float_tan} {:instruction integer_inc} {:instruction 76} {:instruction integer_rot} {:instruction float_max} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_dec} {:instruction print_integer})
Best program: (integer_fromfloat float_sub float_dup_times integer_min integer_inc float_tan integer_inc 76 integer_rot float_max in1 integer_fromfloat in2 float_dup_times integer_add float_dec print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 17
Size: 18
Percent parens: 0.056
--- Population Statistics ---
Average total errors in population: 1772.2400783000044
Median total errors in population: 290.7912
Error averages by case: (59.724880099999936 11.215 60.50730839999967 12.118 59.51562250000038 11.221 60.27074080000069 11.131 58.74420010000065 11.197 59.655968199998796 11.946 60.443151000000285 11.049 60.02678739999969 11.128 59.45387040000091 11.126 58.178634400000725 11.123 57.409657299998756 11.146 58.300919600000654 11.136 60.1802126999993 11.202 57.65550229999924 11.056 59.130409199999 11.221 61.52544059999923 11.291 59.26388400000038 11.213 58.14883919999877 11.137 60.33568739999866 11.211 58.95710589999944 11.239 59.39160459999934 11.227 60.560045400000675 11.292 60.30292900000079 11.234 62.181787800001274 11.251 60.20188999999934 12.063)
Error minima by case: (0.1443 10 0.4612 11 0.1077 11 0.5984 11 0.0567 11 0.3207 10 0.841 10 0.8843 11 0.7367 11 0.9124 10 0.2613 11 0.5737 11 0.8463 11 0.4747 10 0.3276 10 0.6614 11 0.3464 11 0.6044 11 0.6934 10 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 9 0.2388 10)
Average genome size in population (length): 28.671
Average program size in population (points): 29.671
Average percent parens in population: 0.039
Minimum age in population: 201.906260914078
Maximum age in population: 206.5251168262256
Average age in population: 204.6892019755767
Median age in population: 204.7411014406917
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 9
Genome diversity (% unique Plush genomes):	 0.703
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 9
Syntactic diversity (% unique Push programs):	 0.703
Total error diversity:				 0.025
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 142000
Number of point (instruction) evaluations so far: 181047387
--- Timings ---
Current time: 1529615278787 milliseconds
Total Time:         423.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       209.3 seconds, 49.4%
Fitness Testing:    167.7 seconds, 39.6%
Report:              46.3 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 141
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 142
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 142
;;******************************
;; -*- Number IO problem report - generation 142
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction integer_flush} {:instruction integer_fromfloat} {:instruction tagged_528} {:instruction integer_div} {:instruction tagged_573} {:instruction float_frominteger} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction tag_integer_484} {:instruction integer_inc} {:instruction tag_float_642} {:instruction tag_float_527} {:instruction tag_float_370} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (integer_min integer_min integer_flush integer_fromfloat tagged_528 integer_div tagged_573 float_frominteger in2 integer_max integer_rot float_sub tag_integer_484 integer_inc tag_float_642 tag_float_527 tag_float_370 in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 25
Size: 26
Percent parens: 0.038
--- Population Statistics ---
Average total errors in population: 2142.073783300004
Median total errors in population: 290.7912
Error averages by case: (74.69456119999994 11.258 75.87277839999996 12.143 73.2805761999998 11.274 76.13737920000123 11.156 72.44555580000059 11.24 73.93351629999823 11.929 75.4646030000003 11.057 75.1470269999998 11.15 74.71250610000021 11.163 72.68473680000065 11.153 72.44126039999888 11.179 73.4075771000001 11.163 75.10913299999947 11.248 70.62358419999953 11.068 73.71889159999897 11.274 76.98321259999865 11.361 74.05199520000033 11.262 73.52910279999821 11.166 74.79888539999891 11.251 73.6500102999994 11.293 73.98514580000004 11.28 75.60559339999986 11.362 75.13206100000131 11.279 76.10473770000026 11.313 75.46835280000009 12.069)
Error minima by case: (0.1443 10 0.4612 9 0.1077 11 0.4016 10 0.0567 9 0.3207 9 0.159 8 0.1157 10 0.2633 11 0.0876 10 0.2613 10 0.4263 9 0.1537 11 0.4747 10 0.3276 10 0.3386 11 0.3464 11 0.3956 11 0.3066 9 0.1971 11 0.3638 11 0.4726 11 0.219 11 0.1147 10 0.2388 11)
Average genome size in population (length): 28.28
Average program size in population (points): 29.28
Average percent parens in population: 0.039
Minimum age in population: 203.4088956664977
Maximum age in population: 208.2130591982987
Average age in population: 206.1702599196502
Median age in population: 206.2199638089568
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.707
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.707
Total error diversity:				 0.042
Error (vector) diversity:			 0.042
Behavioral diversity:				 0.043
--- Run Statistics ---
Number of program evaluations used so far: 143000
Number of point (instruction) evaluations so far: 181754612
--- Timings ---
Current time: 1529615281066 milliseconds
Total Time:         425.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       210.6 seconds, 49.5%
Fitness Testing:    168.4 seconds, 39.6%
Report:              46.5 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 142
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 143
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 143
;;******************************
;; -*- Number IO problem report - generation 143
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction integer_min} {:instruction integer_flush} {:instruction integer_stackdepth} {:instruction integer_flush} {:instruction tag_float_527} {:instruction tag_float_527} {:instruction float_pop} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_stackdepth} {:instruction float_div} {:instruction integer_shove} {:instruction float_dup_times} {:instruction integer_inc} {:instruction integer_inc} {:instruction float_swap} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_swap} {:instruction integer_add} {:instruction integer_dup} {:instruction print_integer})
Best program: (integer_min integer_div integer_min integer_flush integer_stackdepth integer_flush tag_float_527 tag_float_527 float_pop float_dup_times tag_float_527 float_pop in2 integer_dup_items integer_stackdepth float_div integer_shove float_dup_times integer_inc integer_inc float_swap in1 integer_fromfloat in2 float_dup_times integer_add float_tan integer_inc integer_inc integer_inc tag_integer_484 integer_flush tag_float_527 float_pop in2 in1 integer_fromfloat in2 integer_swap integer_add integer_dup print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 42
Size: 43
Percent parens: 0.023
--- Population Statistics ---
Average total errors in population: 2107.7245062000043
Median total errors in population: 290.7912
Error averages by case: (72.19627259999994 11.272 73.03277839999974 12.151 73.71668389999965 11.276 74.22458400000127 11.151 71.21389600000064 11.249 72.88827139999815 11.935 73.81396700000028 11.055 73.55137409999983 11.163 72.96771620000028 11.144 72.2735980000007 11.159 72.70847649999875 11.182 72.67575630000006 11.156 72.80882559999937 11.244 70.26710949999972 11.061 73.06916759999915 11.272 74.55651959999861 11.345 71.7256096000005 11.243 72.58556439999812 11.158 72.7615787999987 11.273 72.88137549999954 11.301 73.40778380000003 11.285 73.32001119999995 11.355 72.74784200000134 11.296 75.63454060000045 11.314 73.58420360000007 12.071)
Error minima by case: (0.1443 11 0.4612 11 0.1077 3 0.4016 2 0.0567 10 0.3207 9 0.841 2 0.1157 10 0.7367 2 0.9124 2 0.2613 2 0.4263 1 0.1537 2 0.4747 2 0.3276 3 0.3386 2 0.3464 2 0.6044 2 0.6934 11 0.1971 3 0.3638 3 0.4726 2 0.781 11 0.1147 2 0.2388 10)
Average genome size in population (length): 27.368
Average program size in population (points): 28.368
Average percent parens in population: 0.040
Minimum age in population: 204.4088956664977
Maximum age in population: 209.5968462966486
Average age in population: 207.5965353370602
Median age in population: 207.6570925487683
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.66
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.66
Total error diversity:				 0.035
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 144000
Number of point (instruction) evaluations so far: 182438987
--- Timings ---
Current time: 1529615283480 milliseconds
Total Time:         427.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       212.0 seconds, 49.5%
Fitness Testing:    169.1 seconds, 39.5%
Report:              46.7 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 143
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 144
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 144
;;******************************
;; -*- Number IO problem report - generation 144
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_mod} {:instruction integer_div} {:instruction tagged_573} {:instruction print_float} {:instruction in2} {:instruction float_frominteger} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (float_mod integer_div tagged_573 print_float in2 float_frominteger float_pop in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 15
Size: 16
Percent parens: 0.063
--- Population Statistics ---
Average total errors in population: 2113.079764800005
Median total errors in population: 290.7912
Error averages by case: (72.59371559999994 11.252 73.41977400000003 12.143 74.04811469999942 11.265 73.90035520000129 11.16 71.19346300000056 11.238 72.82227139999839 11.949 73.97490000000028 11.072 74.0542171 11.155 73.33876669999985 11.157 72.0738096000006 11.152 71.79299909999892 11.179 73.29119849999972 11.157 73.47721079999967 11.237 70.6717046999997 11.074 73.58013319999944 11.267 74.72018099999877 11.33 72.50160960000001 11.244 73.14360839999826 11.155 73.34459299999916 11.252 73.40116389999977 11.286 73.87096660000027 11.265 73.75942899999961 11.334 73.35399500000135 11.265 74.17642590000017 11.285 73.62315880000031 12.079)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 10 0.0567 10 0.3207 9 0.159 10 0.1157 10 0.2633 10 0.0876 10 0.2613 10 0.4263 10 0.1537 11 0.4747 10 0.3276 10 0.3386 11 0.3464 11 0.3956 10 0.3066 10 0.1971 11 0.3638 11 0.4726 11 0.219 11 0.1147 10 0.2388 11)
Average genome size in population (length): 26.723
Average program size in population (points): 27.723
Average percent parens in population: 0.041
Minimum age in population: 206.1526915789508
Maximum age in population: 211.1603106606414
Average age in population: 209.0387368957206
Median age in population: 209.0964499633461
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 10
Genome diversity (% unique Plush genomes):	 0.642
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 10
Syntactic diversity (% unique Push programs):	 0.642
Total error diversity:				 0.031
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 145000
Number of point (instruction) evaluations so far: 183107262
--- Timings ---
Current time: 1529615285844 milliseconds
Total Time:         430.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       213.5 seconds, 49.6%
Fitness Testing:    169.8 seconds, 39.5%
Report:              47.0 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 144
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 145
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 145
;;******************************
;; -*- Number IO problem report - generation 145
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_sub} {:instruction integer_dup_times} {:instruction tag_float_480} {:instruction float_pop} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction integer_stackdepth} {:instruction integer_flush} {:instruction tag_float_527} {:instruction tag_float_527} {:instruction integer_flush} {:instruction float_stackdepth} {:instruction integer_rot} {:instruction in2} {:instruction float_yank} {:instruction integer_mult} {:instruction float_sub} {:instruction float_dup_times} {:instruction integer_dec} {:instruction float_cos} {:instruction float_pop} {:instruction float_dup} {:instruction in2} {:instruction float_dup} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_mod} {:instruction 92} {:instruction float_inc} {:instruction integer_sub} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction print_integer})
Best program: (integer_min float_sub integer_dup_times tag_float_480 float_pop float_dup_times tag_float_527 integer_stackdepth integer_flush tag_float_527 tag_float_527 integer_flush float_stackdepth integer_rot in2 float_yank integer_mult float_sub float_dup_times integer_dec float_cos float_pop float_dup in2 float_dup float_dup_times integer_inc float_mod 92 float_inc integer_sub in1 integer_fromfloat in2 float_dup integer_add float_dec print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 2150.194364800004
Median total errors in population: 290.7912
Error averages by case: (74.24828269999993 11.264 75.2420067999999 12.145 75.11036079999944 11.271 75.66817440000142 11.148 73.29383930000063 11.232 74.51787489999816 11.939 75.65517200000028 11.047 75.08533279999986 11.159 74.40539969999999 11.126 72.91116000000069 11.143 73.51295389999885 11.167 73.45932999999985 11.131 74.82005709999949 11.229 71.76238179999997 11.06 74.26783999999921 11.254 77.69750379999856 11.346 74.09164880000009 11.245 73.67058639999804 11.13 75.30043259999897 11.266 74.16896679999962 11.3 74.63042000000027 11.273 76.08737419999962 11.348 75.16230900000147 11.299 77.28308179999996 11.31 75.22687520000031 12.083)
Error minima by case: (0.1443 11 0.4612 11 0.1077 4 0.4016 4 0.0567 10 0.3207 10 0.159 3 0.8843 9 0.2633 4 0.0876 4 0.2613 4 0.4263 3 0.8463 4 0.4747 3 0.3276 5 0.6614 4 0.3464 4 0.3956 4 0.3066 11 0.1971 5 0.3638 5 0.4726 4 0.219 11 0.8853 5 0.2388 10)
Average genome size in population (length): 26.448
Average program size in population (points): 27.448
Average percent parens in population: 0.041
Minimum age in population: 207.1526915789508
Maximum age in population: 212.7742429328225
Average age in population: 210.5542681912803
Median age in population: 210.6199922527863
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.648
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.648
Total error diversity:				 0.033
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 146000
Number of point (instruction) evaluations so far: 183768562
--- Timings ---
Current time: 1529615288432 milliseconds
Total Time:         432.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       215.0 seconds, 49.7%
Fitness Testing:    170.6 seconds, 39.4%
Report:              47.1 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 145
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 146
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 146
;;******************************
;; -*- Number IO problem report - generation 146
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction integer_min} {:instruction integer_flush} {:instruction float_yank} {:instruction integer_flush} {:instruction integer_stackdepth} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_flush} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction integer_min} {:instruction integer_inc} {:instruction float_sub} {:instruction integer_mult} {:instruction integer_flush} {:instruction tag_float_527} {:instruction in1} {:instruction integer_yankdup} {:instruction integer_div} {:instruction float_cos} {:instruction float_mod} {:instruction float_pop} {:instruction float_add} {:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction float_max} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction tag_integer_484} {:instruction float_swap} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (integer_min integer_div integer_min integer_flush float_yank integer_flush integer_stackdepth integer_inc integer_min integer_flush in2 integer_dup_items integer_rot integer_min integer_inc float_sub integer_mult integer_flush tag_float_527 in1 integer_yankdup integer_div float_cos float_mod float_pop float_add in2 float_dup integer_rot float_max in1 integer_fromfloat in2 float_dup_times tag_integer_484 float_swap tag_float_527 float_pop in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 46
Size: 47
Percent parens: 0.021
--- Population Statistics ---
Average total errors in population: 1944.0189251000045
Median total errors in population: 290.7912
Error averages by case: (66.85356119999994 11.249 67.61470079999954 12.134 67.04787160000019 11.263 66.82705610000097 11.15 64.94417950000069 11.22 64.55827799999845 11.94 66.6314764000003 11.061 66.61802229999947 11.138 66.25658950000081 11.135 65.23984950000074 11.136 65.94255969999877 11.18 65.82669920000056 11.151 67.49128859999914 11.227 62.372203199999205 11.062 66.29933989999877 11.259 69.4438107999989 11.323 66.48176640000062 11.228 65.60200449999842 11.138 67.38396559999858 11.249 65.21165129999913 11.288 66.70865529999949 11.26 68.00373720000047 11.335 67.39040400000106 11.263 68.15554060000109 11.296 66.36271389999945 12.066)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 11 0.0567 9 0.3207 10 0.159 10 0.1157 10 0.2633 11 0.0876 10 0.2613 10 0.4263 11 0.1537 11 0.4747 10 0.3276 10 0.3386 11 0.3464 11 0.3956 11 0.3066 11 0.1971 11 0.3638 11 0.4726 11 0.219 11 0.1147 11 0.2388 11)
Average genome size in population (length): 26.086
Average program size in population (points): 27.086
Average percent parens in population: 0.042
Minimum age in population: 209.1076134960304
Maximum age in population: 213.8945742637223
Average age in population: 212.0437945126174
Median age in population: 212.0854978344901
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.651
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.651
Total error diversity:				 0.033
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 147000
Number of point (instruction) evaluations so far: 184420737
--- Timings ---
Current time: 1529615290803 milliseconds
Total Time:         435.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       216.4 seconds, 49.7%
Fitness Testing:    171.3 seconds, 39.3%
Report:              47.5 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 146
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 147
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 147
;;******************************
;; -*- Number IO problem report - generation 147
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_inc} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_dec} {:instruction print_integer})
Best program: (integer_min integer_inc float_mod 92 integer_inc integer_min in1 integer_fromfloat in2 float_dup_times integer_add float_dec print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 13
Size: 14
Percent parens: 0.071
--- Population Statistics ---
Average total errors in population: 1577.9772195000044
Median total errors in population: 290.7912
Error averages by case: (51.92846739999994 11.19 52.58630399999952 12.103 51.95058330000037 11.209 51.985560900000756 11.11 51.33216400000032 11.172 51.35001339999908 11.947 52.334321600000294 11.046 51.52767789999962 11.103 51.50973840000056 11.107 50.74620760000039 11.11 50.74059829999914 11.137 50.79935240000064 11.113 52.74013679999914 11.175 50.39396169999952 11.049 51.283854099999296 11.192 54.22307039999947 11.25 52.00500160000057 11.18 50.826769199999006 11.118 52.57892799999887 11.191 51.178102999999375 11.215 51.64184579999933 11.198 52.966353600000296 11.255 52.57752000000095 11.204 53.651558400000916 11.229 51.47112769999938 12.045)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.5984 10 0.0567 10 0.0831 8 0.841 10 0.1157 10 0.7367 10 0.9124 8 0.2613 10 0.4263 10 0.1537 11 0.4747 9 0.3276 10 0.3386 11 0.3464 11 0.6044 10 0.6934 10 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.1147 11 0.2388 11)
Average genome size in population (length): 25.932
Average program size in population (points): 26.932
Average percent parens in population: 0.042
Minimum age in population: 210.1076134960304
Maximum age in population: 215.4289031316206
Average age in population: 213.5209553041324
Median age in population: 213.5936194263664
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.608
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.608
Total error diversity:				 0.024
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 148000
Number of point (instruction) evaluations so far: 185069087
--- Timings ---
Current time: 1529615293154 milliseconds
Total Time:         437.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       217.9 seconds, 49.8%
Fitness Testing:    171.9 seconds, 39.3%
Report:              47.8 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 147
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 148
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 148
;;******************************
;; -*- Number IO problem report - generation 148
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (integer_min integer_flush tag_float_527 float_pop in2 float_dup in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 14
Size: 15
Percent parens: 0.067
--- Population Statistics ---
Average total errors in population: 1943.4092664000045
Median total errors in population: 290.7912
Error averages by case: (67.45627359999995 11.247 68.18768449999932 12.149 66.59279440000027 11.253 67.09246400000146 11.144 66.06661860000064 11.229 64.655805999998 11.938 66.76477960000028 11.057 65.29434969999889 11.147 66.78226910000075 11.134 64.55236200000074 11.131 64.64775459999878 11.154 65.48991440000066 11.139 67.59319489999895 11.223 63.09529789999923 11.049 65.83948159999831 11.249 69.54339159999846 11.311 66.72378800000095 11.226 65.32287599999795 11.135 67.89978829999833 11.254 65.64085979999875 11.261 66.19522359999942 11.249 67.9308077000002 11.323 67.99478860000153 11.256 67.93733910000083 11.268 65.51135879999934 12.072)
Error minima by case: (0.1443 11 0.4612 11 0.1077 6 0.4016 4 0.0567 9 0.3207 8 0.159 3 0.8843 10 0.2633 4 0.0876 4 0.2613 4 0.4263 3 0.8463 5 0.4747 3 0.3276 6 0.6614 6 0.3464 5 0.3956 4 0.3066 10 0.1971 6 0.3638 6 0.4726 6 0.219 10 0.8853 5 0.2388 11)
Average genome size in population (length): 25.28
Average program size in population (points): 26.28
Average percent parens in population: 0.044
Minimum age in population: 212.5999093406309
Maximum age in population: 216.9407774076683
Average age in population: 214.9869214719817
Median age in population: 215.0009176514283
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.652
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.652
Total error diversity:				 0.033
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 149000
Number of point (instruction) evaluations so far: 185701187
--- Timings ---
Current time: 1529615295482 milliseconds
Total Time:         440.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       219.3 seconds, 49.8%
Fitness Testing:    172.6 seconds, 39.2%
Report:              48.0 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 148
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 149
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 149
;;******************************
;; -*- Number IO problem report - generation 149
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_rot} {:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction integer_dup_items} {:instruction float_max} {:instruction float_shove} {:instruction integer_rot} {:instruction integer_add} {:instruction float_tan} {:instruction 92} {:instruction integer_inc} {:instruction integer_flush} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_sub} {:instruction float_dup_times} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_min} {:instruction tag_integer_484} {:instruction integer_add} {:instruction float_min} {:instruction tag_integer_484} {:instruction integer_flush} {:instruction integer_min} {:instruction tag_float_370} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (integer_rot integer_min integer_div tagged_573 integer_dup_items float_max float_shove integer_rot integer_add float_tan 92 integer_inc integer_flush in1 integer_fromfloat integer_sub float_dup_times float_tan integer_inc integer_flush tag_float_527 float_pop in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_min tag_integer_484 integer_add float_min tag_integer_484 integer_flush integer_min tag_float_370 in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 44
Size: 45
Percent parens: 0.022
--- Population Statistics ---
Average total errors in population: 1677.493501400004
Median total errors in population: 290.7912
Error averages by case: (55.74314849999994 11.226 56.540773999999615 12.113 57.16173020000029 11.247 56.3721504000007 11.12 53.948576400000476 11.192 55.02932679999895 11.931 56.385264000000255 11.051 55.49125019999957 11.109 55.50255660000069 11.119 54.31463440000054 11.125 53.12282819999907 11.154 54.65106700000054 11.126 56.562905299999294 11.201 53.105381799999435 11.055 56.27042639999908 11.232 58.77476339999928 11.292 55.85896240000049 11.21 54.7630479999989 11.12 56.44597979999889 11.222 55.282923299999396 11.272 56.639513199999456 11.241 56.92499060000048 11.296 56.400995000000755 11.248 58.13913190000097 11.289 55.81917359999946 12.051)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 10 0.0567 11 0.3207 10 0.159 10 0.1157 10 0.2633 11 0.0876 10 0.2613 10 0.4263 10 0.1537 11 0.4747 10 0.3276 11 0.3386 11 0.3464 11 0.3956 10 0.3066 11 0.1971 11 0.3638 11 0.4726 11 0.219 11 0.1147 11 0.2388 11)
Average genome size in population (length): 25.552
Average program size in population (points): 26.552
Average percent parens in population: 0.043
Minimum age in population: 213.7986871320686
Maximum age in population: 218.6889169823008
Average age in population: 216.5219840345732
Median age in population: 216.5591540032572
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.65
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.65
Total error diversity:				 0.035
Error (vector) diversity:			 0.035
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 150000
Number of point (instruction) evaluations so far: 186340137
--- Timings ---
Current time: 1529615297987 milliseconds
Total Time:         442.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       220.9 seconds, 49.9%
Fitness Testing:    173.3 seconds, 39.2%
Report:              48.2 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 149
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 150
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 150
;;******************************
;; -*- Number IO problem report - generation 150
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction integer_min} {:instruction float_dec} {:instruction tagged_573} {:instruction float_pop} {:instruction in2} {:instruction integer_dup_items} {:instruction integer_rot} {:instruction float_sub} {:instruction float_tan} {:instruction in1} {:instruction integer_fromfloat} {:instruction tag_float_519} {:instruction float_tan} {:instruction integer_mult} {:instruction 93} {:instruction float_pop} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_min integer_div tagged_573 integer_min float_dec tagged_573 float_pop in2 integer_dup_items integer_rot float_sub float_tan in1 integer_fromfloat tag_float_519 float_tan integer_mult 93 float_pop integer_min in1 integer_fromfloat in2 float_dup_times integer_add print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 2008.8006754000046
Median total errors in population: 290.7912
Error averages by case: (69.74501429999994 11.243 70.70108000000023 12.135 69.52919169999919 11.249 70.30515040000135 11.138 66.18497330000066 11.215 66.44119559999814 11.948 70.1869460000003 11.051 69.16898570000005 11.142 69.55245019999973 11.131 66.83975840000072 11.132 66.90013469999877 11.165 68.34123029999967 11.142 70.54444229999982 11.215 65.44902759999918 11.054 68.8330643999994 11.25 71.92848799999867 11.309 69.44111280000001 11.21 68.13106999999806 11.131 70.55144679999924 11.237 67.68551459999975 11.277 69.22033220000034 11.249 70.90679199999941 11.316 70.53090000000141 11.259 70.36273770000007 11.274 68.77163640000035 12.076)
Error minima by case: (0.1443 11 0.4612 10 0.1077 6 0.5984 4 0.0567 9 0.3207 9 0.841 3 0.8843 10 0.7367 4 0.9124 4 0.2613 4 0.5737 3 0.8463 5 0.4747 3 0.3276 6 0.6614 6 0.3464 5 0.6044 4 0.6934 10 0.1971 6 0.3638 6 0.4726 6 0.781 11 0.8853 5 0.2388 11)
Average genome size in population (length): 25.302
Average program size in population (points): 26.302
Average percent parens in population: 0.043
Minimum age in population: 215.5833864793759
Maximum age in population: 220.0763383140742
Average age in population: 217.9957126782283
Median age in population: 218.0277006814434
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.643
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.643
Total error diversity:				 0.025
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 151000
Number of point (instruction) evaluations so far: 186972837
--- Timings ---
Current time: 1529615300306 milliseconds
Total Time:         444.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       222.2 seconds, 50.0%
Fitness Testing:    174.0 seconds, 39.1%
Report:              48.4 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 150
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 151
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 151
;;******************************
;; -*- Number IO problem report - generation 151
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction print_float} {:instruction in2} {:instruction integer_mod} {:instruction integer_inc} {:instruction float_cos} {:instruction integer_flush} {:instruction tag_float_507} {:instruction float_pop} {:instruction 93} {:instruction float_pop} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_min integer_min integer_min integer_min integer_div tagged_573 print_float in2 integer_mod integer_inc float_cos integer_flush tag_float_507 float_pop 93 float_pop integer_min in1 integer_fromfloat in2 float_dup_times integer_add print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 1855.2562124000044
Median total errors in population: 290.7912
Error averages by case: (62.491004199999935 11.236 63.3763127999997 12.123 64.08186860000038 11.257 64.09356000000068 11.139 60.51251970000059 11.207 61.259195599998854 11.931 63.83537700000031 11.053 63.31186999999968 11.128 63.140556600000835 11.132 61.85010880000067 11.133 62.57735079999885 11.165 62.548361800000656 11.135 63.094288599999295 11.211 59.68680589999928 11.064 63.20008159999908 11.251 65.07181079999935 11.306 62.19215200000039 11.219 62.438047999998815 11.132 63.200899599998806 11.239 63.00812039999949 11.278 63.62324079999931 11.255 63.51673720000055 11.312 63.15321400000078 11.258 64.21785240000119 11.284 63.26787519999935 12.059)
Error minima by case: (0.1443 11 0.4612 9 0.1077 11 0.5984 10 0.0567 11 0.3207 9 0.841 10 0.1157 10 0.7367 11 0.0876 10 0.2613 10 0.4263 11 0.1537 11 0.4747 9 0.3276 10 0.3386 11 0.3464 11 0.6044 10 0.6934 11 0.1971 10 0.3638 11 0.4726 11 0.781 11 0.1147 11 0.2388 11)
Average genome size in population (length): 25.306
Average program size in population (points): 26.306
Average percent parens in population: 0.043
Minimum age in population: 217.3033526205113
Maximum age in population: 221.4694182631064
Average age in population: 219.4817085315754
Median age in population: 219.5090100687665
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.64
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.64
Total error diversity:				 0.033
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 152000
Number of point (instruction) evaluations so far: 187605662
--- Timings ---
Current time: 1529615302804 milliseconds
Total Time:         447.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       223.7 seconds, 50.0%
Fitness Testing:    174.7 seconds, 39.1%
Report:              48.7 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 151
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 152
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 152
;;******************************
;; -*- Number IO problem report - generation 152
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction float_mod} {:instruction integer_fromfloat} {:instruction tagged_528} {:instruction integer_div} {:instruction tagged_573} {:instruction float_frominteger} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_sub} {:instruction tag_integer_484} {:instruction integer_inc} {:instruction tag_float_527} {:instruction print_integer} {:instruction float_yankdup} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_min} {:instruction float_mod} {:instruction integer_dup_items} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction print_integer})
Best program: (print_integer float_mod integer_fromfloat tagged_528 integer_div tagged_573 float_frominteger in2 integer_max integer_rot float_sub tag_integer_484 integer_inc tag_float_527 print_integer float_yankdup in2 in1 integer_fromfloat float_pop float_dup_times integer_inc float_min float_mod integer_dup_items integer_min in1 integer_fromfloat in2 float_dup_times integer_add print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 1927.8858954000045
Median total errors in population: 290.7912
Error averages by case: (65.83357129999993 11.234 66.60592919999927 12.123 66.72194560000017 11.249 66.71737120000117 11.133 61.678519700000585 11.204 64.89255419999839 11.936 67.1898540000003 11.04 66.04710139999919 11.137 66.20187310000073 11.116 65.01810880000066 11.12 64.3161798999989 11.158 65.32150920000059 11.128 66.56452009999894 11.207 63.866856499999294 11.048 65.89170239999864 11.236 68.62844059999877 11.304 65.5694984000008 11.211 65.23404799999834 11.124 66.3528193999984 11.232 63.95869719999901 11.273 66.2971511999995 11.237 67.06904540000045 11.312 66.36087100000125 11.257 67.15885240000097 11.279 66.02587519999952 12.065)
Error minima by case: (0.1443 11 0.4612 9 0.1077 5 0.5984 5 0.0567 9 0.3207 9 0.841 5 0.1157 10 0.7367 5 0.0876 4 0.2613 4 0.4263 3 0.1537 5 0.4747 5 0.3276 5 0.3386 5 0.3464 5 0.6044 4 0.6934 10 0.1971 5 0.3638 5 0.4726 5 0.781 11 0.1147 4 0.2388 10)
Average genome size in population (length): 24.308
Average program size in population (points): 25.308
Average percent parens in population: 0.044
Minimum age in population: 218.4872278203309
Maximum age in population: 223.1956069985863
Average age in population: 220.9494859298352
Median age in population: 220.9958507891728
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 11
Genome diversity (% unique Plush genomes):	 0.617
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 11
Syntactic diversity (% unique Push programs):	 0.617
Total error diversity:				 0.034
Error (vector) diversity:			 0.034
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 153000
Number of point (instruction) evaluations so far: 188213562
--- Timings ---
Current time: 1529615305345 milliseconds
Total Time:         449.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       225.2 seconds, 50.1%
Fitness Testing:    175.5 seconds, 39.0%
Report:              49.0 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 152
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 153
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 153
;;******************************
;; -*- Number IO problem report - generation 153
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_div} {:instruction tagged_573} {:instruction print_float} {:instruction in2} {:instruction integer_dup_items} {:instruction float_mod} {:instruction float_dup_times} {:instruction integer_inc} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_mult} {:instruction 93} {:instruction float_pop} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction print_integer})
Best program: (print_integer integer_div tagged_573 print_float in2 integer_dup_items float_mod float_dup_times integer_inc float_mod 92 integer_inc integer_min in1 integer_mult 93 float_pop integer_min in1 integer_fromfloat in2 float_dup_times integer_add print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 1785.3353288000048
Median total errors in population: 290.7912
Error averages by case: (60.22786999999994 11.225 61.364157599999395 12.122 60.88973020000038 11.236 60.700953600001 11.129 57.84757640000057 11.209 59.521119799998466 11.944 61.319264000000295 11.048 60.14552289999933 11.134 60.005976800000916 11.114 57.66693360000065 11.118 58.707702499998796 11.151 59.38380400000067 11.126 61.08621269999894 11.198 56.836552899999305 11.053 60.02870239999867 11.234 62.726779199998944 11.284 59.66861600000063 11.207 59.34867439999839 11.125 61.088673199998404 11.222 59.85590879999911 11.252 60.44015119999932 11.23 61.69857280000066 11.291 61.098338000001064 11.24 61.638705400001264 11.257 59.82583039999934 12.064)
Error minima by case: (0.1443 11 0.4612 9 0.1077 6 0.4016 4 0.0567 11 0.3207 10 0.159 3 0.8843 11 0.2633 4 0.0876 4 0.2613 4 0.4263 3 0.8463 5 0.4747 3 0.3276 6 0.3386 6 0.3464 5 0.3956 4 0.3066 10 0.1971 6 0.3638 6 0.4726 6 0.219 10 0.8853 5 0.2388 10)
Average genome size in population (length): 23.907
Average program size in population (points): 24.907
Average percent parens in population: 0.045
Minimum age in population: 219.9391204200376
Maximum age in population: 224.4094801180456
Average age in population: 222.4104165628188
Median age in population: 222.4389760172737
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.615
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.615
Total error diversity:				 0.029
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 154000
Number of point (instruction) evaluations so far: 188811412
--- Timings ---
Current time: 1529615307664 milliseconds
Total Time:         452.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       226.7 seconds, 50.1%
Fitness Testing:    176.1 seconds, 38.9%
Report:              49.3 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 153
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 154
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 154
;;******************************
;; -*- Number IO problem report - generation 154
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_times} {:instruction integer_yankdup} {:instruction integer_flush} {:instruction in2} {:instruction float_dup_times} {:instruction float_max} {:instruction integer_dup} {:instruction integer_inc} {:instruction float_pop} {:instruction integer_fromfloat} {:instruction float_div} {:instruction float_dup_times} {:instruction integer_add} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (float_dup_times integer_yankdup integer_flush in2 float_dup_times float_max integer_dup integer_inc float_pop integer_fromfloat float_div float_dup_times integer_add tag_float_527 float_pop in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 1820.4636706000042
Median total errors in population: 290.7912
Error averages by case: (60.716745899999935 11.204 61.270075599999636 12.125 62.36337640000038 11.228 61.86992960000078 11.123 60.225540300000574 11.188 60.60989239999869 11.957 61.427038000000294 11.056 61.90432459999957 11.124 61.2980273000009 11.125 61.62758320000072 11.128 61.13648639999881 11.142 61.42380400000067 11.124 61.575290499999234 11.201 59.7848251999993 11.054 61.80735759999893 11.21 63.166408999999206 11.286 61.11726960000047 11.211 61.69246559999865 11.125 61.281074199998635 11.21 61.75490879999934 11.235 62.04360639999932 11.224 61.62088100000064 11.284 61.313053000000856 11.222 63.371099600001266 11.244 61.980606399999324 12.052)
Error minima by case: (0.1443 10 0.4612 11 0.1077 11 0.4016 9 0.0567 10 0.3207 10 0.159 10 0.8843 10 0.2633 9 0.0876 9 0.2613 11 0.4263 9 0.8463 10 0.4747 10 0.3276 9 0.6614 11 0.3464 10 0.3956 9 0.3066 11 0.1971 10 0.3638 10 0.4726 10 0.219 11 0.8853 11 0.2388 11)
Average genome size in population (length): 24.018
Average program size in population (points): 25.018
Average percent parens in population: 0.045
Minimum age in population: 220.9391204200376
Maximum age in population: 226.0561445944776
Average age in population: 223.8948719632035
Median age in population: 223.9572102627218
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.619
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.619
Total error diversity:				 0.024
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 155000
Number of point (instruction) evaluations so far: 189412087
--- Timings ---
Current time: 1529615310004 milliseconds
Total Time:         454.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       228.1 seconds, 50.2%
Fitness Testing:    176.8 seconds, 38.9%
Report:              49.5 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 154
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 155
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 155
;;******************************
;; -*- Number IO problem report - generation 155
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_yankdup} {:instruction integer_min} {:instruction in2} {:instruction float_mult} {:instruction integer_min} {:instruction integer_div} {:instruction integer_inc} {:instruction float_dup_times} {:instruction integer_inc} {:instruction integer_dup} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_min integer_yankdup integer_min in2 float_mult integer_min integer_div integer_inc float_dup_times integer_inc integer_dup 92 integer_inc integer_min in1 integer_fromfloat in2 float_dup_times integer_add print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 20
Size: 21
Percent parens: 0.048
--- Population Statistics ---
Average total errors in population: 2252.9911255000047
Median total errors in population: 290.7912
Error averages by case: (78.38086999999993 11.261 79.32061880000036 12.157 79.64611469999936 11.278 80.135158400001 11.154 75.96885990000057 11.245 77.84327139999854 11.954 79.26521800000029 11.069 79.70998570000035 11.162 78.87902999999984 11.16 77.55872200000063 11.161 76.58473779999888 11.186 79.00134589999965 11.167 79.1059034 11.25 75.54075529999993 11.071 79.25013319999977 11.273 80.1145037999989 11.351 78.27799519999994 11.247 78.96560839999852 11.159 78.97067319999945 11.262 79.08634650000013 11.3 79.49896660000034 11.285 79.21937419999956 11.353 79.34611900000108 11.283 80.55065530000005 11.306 79.59515880000033 12.081)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.5984 10 0.0567 11 0.3207 9 0.841 10 0.8843 11 0.7367 11 0.0876 9 0.2613 10 0.4263 11 0.8463 11 0.4747 10 0.3276 11 0.6614 11 0.3464 10 0.3956 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 10 0.2388 11)
Average genome size in population (length): 23.92
Average program size in population (points): 24.92
Average percent parens in population: 0.046
Minimum age in population: 221.9391204200376
Maximum age in population: 227.2838616728487
Average age in population: 225.4195974283914
Median age in population: 225.4633114855789
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.631
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.631
Total error diversity:				 0.023
Error (vector) diversity:			 0.023
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 156000
Number of point (instruction) evaluations so far: 190010312
--- Timings ---
Current time: 1529615312407 milliseconds
Total Time:         457.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       229.7 seconds, 50.3%
Fitness Testing:    177.4 seconds, 38.8%
Report:              49.7 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 155
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 156
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 156
;;******************************
;; -*- Number IO problem report - generation 156
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_sub} {:instruction integer_min} {:instruction integer_yankdup} {:instruction integer_min} {:instruction in2} {:instruction float_mult} {:instruction float_shove} {:instruction float_sub} {:instruction tag_integer_484} {:instruction float_inc} {:instruction integer_swap} {:instruction tag_float_527} {:instruction float_flush} {:instruction in1} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_cos} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (integer_sub integer_min integer_yankdup integer_min in2 float_mult float_shove float_sub tag_integer_484 float_inc integer_swap tag_float_527 float_flush in1 tag_float_527 float_pop in2 in1 integer_fromfloat float_cos float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 2132.0404443000043
Median total errors in population: 290.7912
Error averages by case: (75.68511819999993 11.268 76.64662759999993 12.157 72.76093950000006 11.271 74.0179640000009 11.157 74.03410220000059 11.26 72.44688099999875 11.937 74.4397322000003 11.049 73.06835589999976 11.164 73.38552430000051 11.149 70.40821120000061 11.144 71.39256259999891 11.173 71.87272850000053 11.152 76.55921079999956 11.245 70.93701239999946 11.054 72.08764769999907 11.271 78.28018099999906 11.347 75.52460960000022 11.251 71.2987627999987 11.152 76.38933819999899 11.284 71.76920039999939 11.291 72.51633619999947 11.274 77.02042900000022 11.356 76.3958130000009 11.299 76.95368760000079 11.306 73.06046839999964 12.078)
Error minima by case: (0.1443 11 0.4612 11 0.1077 6 0.4016 4 0.0567 11 0.3207 9 0.159 3 0.1157 10 0.2633 4 0.0876 4 0.2613 4 0.4263 3 0.1537 5 0.4747 3 0.3276 6 0.3386 6 0.3464 5 0.3956 4 0.3066 10 0.1971 6 0.3638 6 0.4726 6 0.219 11 0.1147 5 0.2388 10)
Average genome size in population (length): 23.968
Average program size in population (points): 24.968
Average percent parens in population: 0.046
Minimum age in population: 224.2249091485881
Maximum age in population: 228.8694139210708
Average age in population: 226.931195120003
Median age in population: 226.9697162663181
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.622
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.622
Total error diversity:				 0.04
Error (vector) diversity:			 0.04
Behavioral diversity:				 0.04
--- Run Statistics ---
Number of program evaluations used so far: 157000
Number of point (instruction) evaluations so far: 190609637
--- Timings ---
Current time: 1529615314719 milliseconds
Total Time:         459.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       231.1 seconds, 50.3%
Fitness Testing:    178.1 seconds, 38.8%
Report:              49.9 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 156
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 157
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 157
;;******************************
;; -*- Number IO problem report - generation 157
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_dup_times} {:instruction integer_flush} {:instruction in2} {:instruction integer_yankdup} {:instruction integer_fromfloat} {:instruction integer_flush} {:instruction print_integer} {:instruction integer_div} {:instruction float_tan} {:instruction print_float} {:instruction in2} {:instruction float_dup} {:instruction float_mod} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction float_mod} {:instruction 92} {:instruction float_dup_times} {:instruction float_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_div} {:instruction tag_float_527} {:instruction integer_dec} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction integer_rot} {:instruction integer_inc} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_mod} {:instruction print_integer})
Best program: (float_dup_times integer_flush in2 integer_yankdup integer_fromfloat integer_flush print_integer integer_div float_tan print_float in2 float_dup float_mod float_dup_times float_dup_times float_mod 92 float_dup_times float_min in1 integer_fromfloat float_div tag_float_527 integer_dec integer_inc integer_min integer_inc integer_rot integer_inc float_mod 92 integer_inc integer_min in1 integer_fromfloat in2 float_dup_times integer_add float_mod print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 40
Size: 41
Percent parens: 0.024
--- Population Statistics ---
Average total errors in population: 1890.3650309000043
Median total errors in population: 290.7912
Error averages by case: (65.10359989999995 11.231 66.08000709999929 12.119 63.98437630000038 11.26 64.55190980000108 11.138 62.11647090000044 11.215 62.993451399998655 11.935 65.1100285000003 11.048 64.59987139999927 11.142 63.69646480000068 11.132 62.026085400000504 11.135 61.992502199998974 11.177 62.56132670000068 11.142 66.56313489999889 11.206 60.13254689999944 11.06 63.09925819999882 11.261 68.11847219999898 11.312 65.32349840000083 11.211 62.29219079999856 11.139 65.7796644999985 11.233 62.86843289999905 11.289 63.564598199999324 11.25 67.16420980000031 11.323 65.72562860000124 11.259 67.57788730000091 11.291 64.75641379999934 12.075)
Error minima by case: (0.1443 6 0.4612 6 0.1077 11 0.5984 10 0.0567 5 0.3207 9 0.841 9 0.8843 10 0.7367 9 0.9124 10 0.2613 11 0.5737 10 0.8463 5 0.4747 10 0.3276 10 0.6614 7 0.3464 6 0.6044 11 0.6934 6 0.1971 11 0.3638 10 0.4726 6 0.781 5 0.8853 6 0.2388 11)
Average genome size in population (length): 24.012
Average program size in population (points): 25.012
Average percent parens in population: 0.046
Minimum age in population: 225.4398901023801
Maximum age in population: 230.3342541242204
Average age in population: 228.4643170358348
Median age in population: 228.485048962087
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.634
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.634
Total error diversity:				 0.025
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 158000
Number of point (instruction) evaluations so far: 191210237
--- Timings ---
Current time: 1529615317068 milliseconds
Total Time:         461.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       232.6 seconds, 50.4%
Fitness Testing:    178.7 seconds, 38.7%
Report:              50.1 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 157
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 158
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 158
;;******************************
;; -*- Number IO problem report - generation 158
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_inc} {:instruction float_mod} {:instruction 92} {:instruction integer_inc} {:instruction float_add} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_tan} {:instruction integer_add} {:instruction float_mod} {:instruction print_integer})
Best program: (integer_min integer_inc float_mod 92 integer_inc float_add in1 integer_fromfloat in2 float_tan integer_add float_mod print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 13
Size: 14
Percent parens: 0.071
--- Population Statistics ---
Average total errors in population: 1643.9362132000044
Median total errors in population: 290.7912
Error averages by case: (53.78515859999994 11.2 55.455541200000035 12.115 55.871022600000366 11.222 56.13754400000036 11.11 50.96608670000041 11.181 53.828402599999386 11.942 55.729787000000286 11.041 54.03429150000004 11.112 55.33645020000068 11.106 52.41123280000046 11.122 51.663576799999056 11.151 53.52296730000063 11.116 54.78790719999966 11.195 49.89455289999948 11.043 55.06132319999958 11.216 57.68603879999971 11.278 53.67900160000002 11.192 54.500883199999315 11.107 55.39644679999929 11.208 54.9383029999998 11.258 55.437061599999346 11.221 55.21466180000044 11.287 55.375462000000404 11.234 56.29924660000103 11.259 54.95426319999935 12.053)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 10 0.0567 10 0.3207 9 0.841 10 0.8843 10 0.7367 10 0.9124 10 0.2613 11 0.4263 11 0.8463 11 0.4747 9 0.3276 10 0.6614 11 0.3464 11 0.6044 10 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 10 0.2388 10)
Average genome size in population (length): 23.615
Average program size in population (points): 24.615
Average percent parens in population: 0.047
Minimum age in population: 226.4398901023801
Maximum age in population: 231.8027191099813
Average age in population: 229.9419741906544
Median age in population: 229.9934271682422
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.608
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.608
Total error diversity:				 0.028
Error (vector) diversity:			 0.028
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 159000
Number of point (instruction) evaluations so far: 191800762
--- Timings ---
Current time: 1529615319362 milliseconds
Total Time:         463.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       234.0 seconds, 50.4%
Fitness Testing:    179.4 seconds, 38.7%
Report:              50.4 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 158
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 159
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 159
;;******************************
;; -*- Number IO problem report - generation 159
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_inc} {:instruction float_mod} {:instruction integer_stackdepth} {:instruction integer_div} {:instruction float_mult} {:instruction tagged_981} {:instruction integer_dup} {:instruction integer_inc} {:instruction integer_min} {:instruction float_div} {:instruction float_pop} {:instruction float_pop} {:instruction 91} {:instruction float_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_dec} {:instruction print_integer})
Best program: (integer_min integer_inc float_mod integer_stackdepth integer_div float_mult tagged_981 integer_dup integer_inc integer_min float_div float_pop float_pop 91 float_inc integer_min in1 integer_fromfloat in2 float_dup_times integer_add float_dec print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 1948.8753348000043
Median total errors in population: 290.7912
Error averages by case: (67.12089019999993 11.223 67.67653679999972 12.133 66.8683058000002 11.238 66.72045240000087 11.128 66.77393720000049 11.2 65.06009219999883 11.966 66.1791296000003 11.058 66.36880179999955 11.136 65.98749150000062 11.132 65.56839830000051 11.134 64.26651079999904 11.153 65.82612910000053 11.125 68.03698119999937 11.208 63.42950219999939 11.053 66.24061839999911 11.22 69.4461335999992 11.294 67.60576640000036 11.209 65.84475989999878 11.129 67.78476759999899 11.233 66.14061049999935 11.25 66.52668619999946 11.236 68.02268240000011 11.296 67.794834000001 11.242 69.08313190000068 11.255 66.18618479999947 12.065)
Error minima by case: (0.1443 11 0.4612 11 0.1077 6 0.4016 5 0.0567 10 0.3207 10 0.841 5 0.1157 10 0.7367 5 0.9124 4 0.2613 5 0.5737 4 0.1537 5 0.4747 5 0.3276 6 0.3386 5 0.3464 5 0.6044 4 0.6934 11 0.1971 6 0.3638 6 0.4726 5 0.781 11 0.1147 4 0.2388 10)
Average genome size in population (length): 23.406
Average program size in population (points): 24.406
Average percent parens in population: 0.047
Minimum age in population: 227.4398901023801
Maximum age in population: 233.2337586069717
Average age in population: 231.3755217044063
Median age in population: 231.4089529146919
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.606
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.606
Total error diversity:				 0.024
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 160000
Number of point (instruction) evaluations so far: 192386062
--- Timings ---
Current time: 1529615321816 milliseconds
Total Time:         466.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       235.4 seconds, 50.5%
Fitness Testing:    180.1 seconds, 38.6%
Report:              50.6 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 159
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 160
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 160
;;******************************
;; -*- Number IO problem report - generation 160
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_pop} {:instruction float_rot} {:instruction float_min} {:instruction integer_flush} {:instruction integer_stackdepth} {:instruction float_mult} {:instruction tagged_739} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (integer_min integer_pop float_rot float_min integer_flush integer_stackdepth float_mult tagged_739 in1 integer_fromfloat in2 float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 16
Size: 17
Percent parens: 0.059
--- Population Statistics ---
Average total errors in population: 1901.8896325000044
Median total errors in population: 290.7912
Error averages by case: (64.98642699999994 11.245 66.05400679999939 12.137 65.25108400000035 11.248 65.36916640000088 11.14 63.117236200000505 11.227 63.828950699998764 11.936 65.79537700000029 11.046 65.05048979999944 11.152 64.56108320000072 11.125 62.28972200000057 11.138 63.43013469999898 11.167 63.948509200000636 11.142 65.85898119999904 11.22 61.321280599999355 11.054 64.42108159999897 11.248 67.7604721999991 11.316 64.42515200000062 11.224 63.53283919999877 11.132 65.67543259999862 11.243 64.14951459999925 11.278 64.89224079999937 11.254 66.56720980000043 11.323 65.65330900000107 11.272 66.589967100001 11.285 64.73596479999938 12.072)
Error minima by case: (0.1443 11 0.4612 11 0.1077 3 0.4016 2 0.0567 10 0.3207 9 0.159 2 0.8843 11 0.2633 2 0.0876 2 0.2613 2 0.4263 1 0.8463 2 0.4747 2 0.3276 3 0.6614 2 0.3464 2 0.3956 2 0.3066 11 0.1971 3 0.3638 3 0.4726 2 0.219 11 0.8853 2 0.2388 11)
Average genome size in population (length): 23.854
Average program size in population (points): 24.854
Average percent parens in population: 0.047
Minimum age in population: 229.9350437524771
Maximum age in population: 234.9958609948275
Average age in population: 232.873884276957
Median age in population: 232.9140097288872
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.632
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.632
Total error diversity:				 0.028
Error (vector) diversity:			 0.028
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 161000
Number of point (instruction) evaluations so far: 192982612
--- Timings ---
Current time: 1529615324102 milliseconds
Total Time:         468.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       236.9 seconds, 50.5%
Fitness Testing:    180.8 seconds, 38.6%
Report:              50.9 seconds, 10.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 160
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 161
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 161
;;******************************
;; -*- Number IO problem report - generation 161
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_inc} {:instruction float_mod} {:instruction integer_stackdepth} {:instruction integer_div} {:instruction float_mult} {:instruction tagged_981} {:instruction integer_dup} {:instruction integer_inc} {:instruction integer_min} {:instruction float_div} {:instruction float_pop} {:instruction float_pop} {:instruction 91} {:instruction float_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_dec} {:instruction print_integer})
Best program: (integer_min integer_inc float_mod integer_stackdepth integer_div float_mult tagged_981 integer_dup integer_inc integer_min float_div float_pop float_pop 91 float_inc integer_min in1 integer_fromfloat in2 float_dup_times integer_add float_dec print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 2130.6072046000045
Median total errors in population: 290.7912
Error averages by case: (73.73271559999993 11.255 74.987468 12.138 75.17002169999961 11.273 75.08177280000103 11.155 70.15617950000065 11.237 74.07033609999841 11.936 75.40201300000028 11.062 74.39592899999992 11.159 74.01939970000018 11.143 70.68178860000073 11.149 71.48664279999878 11.185 73.58527590000007 11.161 74.43690339999958 11.238 69.82690709999952 11.069 74.64805919999925 11.268 75.79084239999878 11.337 72.91534160000015 11.24 73.20557239999836 11.149 74.93012599999898 11.252 73.44787279999967 11.294 75.00760820000009 11.281 74.8879015999999 11.345 74.84409000000123 11.28 76.29226580000042 11.304 74.61517140000008 12.079)
Error minima by case: (0.1443 11 0.4612 10 0.1077 11 0.4016 10 0.0567 11 0.3207 9 0.159 9 0.8843 10 0.2633 10 0.0876 10 0.2613 9 0.4263 10 0.8463 11 0.4747 10 0.3276 11 0.6614 11 0.3464 11 0.3956 8 0.3066 10 0.1971 11 0.3638 11 0.4726 11 0.219 10 0.8853 11 0.2388 11)
Average genome size in population (length): 23.051
Average program size in population (points): 24.051
Average percent parens in population: 0.048
Minimum age in population: 231.7246544707266
Maximum age in population: 236.3837369820108
Average age in population: 234.3690321359086
Median age in population: 234.4064148419031
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 12
Genome diversity (% unique Plush genomes):	 0.62
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 12
Syntactic diversity (% unique Push programs):	 0.62
Total error diversity:				 0.031
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.032
--- Run Statistics ---
Number of program evaluations used so far: 162000
Number of point (instruction) evaluations so far: 193559112
--- Timings ---
Current time: 1529615326274 milliseconds
Total Time:         470.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       238.2 seconds, 50.6%
Fitness Testing:    181.4 seconds, 38.5%
Report:              51.0 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 161
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 162
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 162
;;******************************
;; -*- Number IO problem report - generation 162
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_min} {:instruction integer_flush} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction tagged_739} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (float_min integer_flush integer_stackdepth integer_max tagged_739 in1 integer_fromfloat in2 float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 13
Size: 14
Percent parens: 0.071
--- Population Statistics ---
Average total errors in population: 1733.6313313000044
Median total errors in population: 290.7912
Error averages by case: (57.910581399999934 11.218 58.750157599999525 12.12 58.884514800000375 11.224 57.98115840000087 11.127 56.65874650000055 11.198 57.06911979999872 11.936 58.24174100000029 11.043 58.759944399999426 11.131 57.402293300000785 11.114 57.06993360000062 11.12 57.830179899998896 11.152 57.81050920000066 11.121 58.52736639999912 11.187 54.27065409999936 11.045 58.15773679999887 11.228 60.10177919999913 11.281 57.46515200000058 11.193 57.48604799999866 11.115 58.524673199998645 11.229 57.93212039999917 11.249 58.57242359999933 11.227 58.97457280000053 11.288 58.51933800000094 11.243 60.11627890000113 11.256 58.511307999999346 12.058)
Error minima by case: (0.1443 10 0.4612 11 0.1077 5 0.4016 4 0.0567 10 0.3207 9 0.841 4 0.8843 10 0.7367 4 0.9124 4 0.2613 4 0.5737 3 0.8463 4 0.4747 4 0.3276 5 0.6614 4 0.3464 4 0.6044 4 0.6934 10 0.1971 5 0.3638 5 0.4726 4 0.781 11 0.8853 4 0.2388 11)
Average genome size in population (length): 22.987
Average program size in population (points): 23.987
Average percent parens in population: 0.048
Minimum age in population: 233.152272352225
Maximum age in population: 237.8082354074541
Average age in population: 235.8724541668161
Median age in population: 235.9171935183762
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 13
Genome diversity (% unique Plush genomes):	 0.619
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 13
Syntactic diversity (% unique Push programs):	 0.619
Total error diversity:				 0.036
Error (vector) diversity:			 0.036
Behavioral diversity:				 0.037
--- Run Statistics ---
Number of program evaluations used so far: 163000
Number of point (instruction) evaluations so far: 194134012
--- Timings ---
Current time: 1529615328419 milliseconds
Total Time:         473.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       239.5 seconds, 50.6%
Fitness Testing:    182.1 seconds, 38.5%
Report:              51.2 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 162
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 163
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 163
;;******************************
;; -*- Number IO problem report - generation 163
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction -21.538563706341733} {:instruction float_dec} {:instruction integer_div} {:instruction float_dup_times} {:instruction float_mod} {:instruction float_mod} {:instruction float_pop} {:instruction float_pop} {:instruction float_pop} {:instruction in2} {:instruction float_add} {:instruction float_shove} {:instruction integer_dec} {:instruction float_mod} {:instruction float_pop} {:instruction float_dup} {:instruction integer_stackdepth} {:instruction float_dup} {:instruction integer_rot} {:instruction float_max} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_dec} {:instruction float_dup_times} {:instruction tag_integer_484} {:instruction float_swap} {:instruction float_swap} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (integer_min integer_div -21.538563706341733 float_dec integer_div float_dup_times float_mod float_mod float_pop float_pop float_pop in2 float_add float_shove integer_dec float_mod float_pop float_dup integer_stackdepth float_dup integer_rot float_max in1 integer_fromfloat integer_dec float_dup_times tag_integer_484 float_swap float_swap float_pop in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 1883.8059935000042
Median total errors in population: 290.7912
Error averages by case: (64.00057129999993 11.257 64.83892919999927 12.141 64.29343780000036 11.266 65.13915840000112 11.153 62.931179500000596 11.227 63.43655419999841 11.938 65.8080590000003 11.058 64.01940719999924 11.142 64.32229330000084 11.145 62.127809600000646 11.149 63.22478299999886 11.178 62.969772200000655 11.151 64.68013489999888 11.241 62.838755299999285 11.066 63.39342639999864 11.268 66.81747219999892 11.329 63.62742000000084 11.232 62.531421599998374 11.146 64.47181939999837 11.256 63.10872619999902 11.291 63.89451319999934 11.269 65.25720980000058 11.341 64.48187100000118 11.275 64.78639360000119 11.302 63.91787519999934 12.066)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 11 0.0567 11 0.3207 10 0.841 10 0.8843 10 0.7367 10 0.9124 11 0.2613 10 0.5737 11 0.8463 11 0.4747 10 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 10)
Average genome size in population (length): 22.749
Average program size in population (points): 23.749
Average percent parens in population: 0.048
Minimum age in population: 234.152272352225
Maximum age in population: 239.1660105153572
Average age in population: 237.3380097561886
Median age in population: 237.4129954702369
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.615
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.615
Total error diversity:				 0.029
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 164000
Number of point (instruction) evaluations so far: 194702862
--- Timings ---
Current time: 1529615330809 milliseconds
Total Time:         475.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       241.0 seconds, 50.7%
Fitness Testing:    182.8 seconds, 38.5%
Report:              51.4 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 163
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 164
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 164
;;******************************
;; -*- Number IO problem report - generation 164
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_rot} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction in2} {:instruction integer_max} {:instruction integer_rot} {:instruction float_dup_times} {:instruction tag_integer_484} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction tag_float_527} {:instruction tag_float_370} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (integer_min integer_rot tag_float_527 float_pop in2 in2 integer_max integer_rot float_dup_times tag_integer_484 integer_inc integer_dup_items tag_float_527 tag_float_370 in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 1741.4774218000043
Median total errors in population: 290.7912
Error averages by case: (58.50790029999994 11.206 59.15176519999936 12.12 58.51437640000037 11.224 58.74172480000099 11.13 57.87699390000067 11.192 58.060326799998485 11.959 58.970402000000306 11.061 58.479555999999384 11.128 58.18223740000093 11.122 56.85579480000073 11.127 57.73253159999876 11.144 57.777541000000674 11.13 59.162905299998975 11.193 56.23019869999926 11.061 58.063323199998706 11.215 60.22276339999895 11.272 58.01792320000068 11.2 57.665718399998475 11.126 59.09762139999835 11.207 57.87627399999915 11.236 58.355061599999324 11.22 59.32299060000065 11.273 59.11430100000111 11.218 59.18901720000126 11.241 58.244173599999336 12.059)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 11 0.0567 11 0.3207 10 0.159 10 0.1157 10 0.2633 9 0.0876 11 0.2613 11 0.4263 11 0.1537 11 0.4747 10 0.3276 11 0.3386 11 0.3464 11 0.3956 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.1147 11 0.2388 10)
Average genome size in population (length): 22.763
Average program size in population (points): 23.763
Average percent parens in population: 0.048
Minimum age in population: 235.152272352225
Maximum age in population: 240.7404310095658
Average age in population: 238.7927509134171
Median age in population: 238.8448222531499
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.589
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.589
Total error diversity:				 0.022
Error (vector) diversity:			 0.022
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 165000
Number of point (instruction) evaluations so far: 195272162
--- Timings ---
Current time: 1529615333215 milliseconds
Total Time:         477.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       242.5 seconds, 50.8%
Fitness Testing:    183.4 seconds, 38.4%
Report:              51.7 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 164
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 165
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 165
;;******************************
;; -*- Number IO problem report - generation 165
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in2} {:instruction integer_max} {:instruction integer_mult} {:instruction integer_max} {:instruction integer_dup_times} {:instruction integer_min} {:instruction in2} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_cos} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction integer_mod} {:instruction float_add} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction tag_integer_484} {:instruction float_swap} {:instruction float_dup_times} {:instruction in1} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (in2 integer_max integer_mult integer_max integer_dup_times integer_min in2 integer_inc integer_min integer_inc float_cos integer_flush tag_float_527 float_pop integer_mod float_add in1 integer_fromfloat in2 float_dup_times in1 integer_fromfloat in2 float_dup_times tag_integer_484 float_swap float_dup_times in1 in2 in1 integer_fromfloat float_pop float_dup_times float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 38
Size: 39
Percent parens: 0.026
--- Population Statistics ---
Average total errors in population: 1579.4220260000045
Median total errors in population: 290.7912
Error averages by case: (51.35259149999994 11.209 52.09938599999975 12.112 52.96545990000032 11.222 52.617339200000806 11.126 49.53325680000057 11.183 51.73284229999894 11.946 53.0121510000003 11.05 52.17335769999949 11.122 51.86913370000085 11.115 50.99090560000065 11.125 51.565030699998886 11.143 51.55628550000063 11.128 52.005675699999394 11.188 50.569451699999355 11.055 52.11444569999897 11.216 53.78737739999917 11.26 51.12665520000034 11.189 51.53703919999891 11.115 51.924526999998875 11.2 51.130457599999545 11.241 52.51873059999937 11.223 52.34771660000058 11.267 51.92780500000066 11.221 53.00914200000114 11.25 51.99726239999938 12.052)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 10 0.0567 10 0.3207 10 0.159 10 0.1157 11 0.2633 10 0.0876 11 0.2613 10 0.4263 11 0.8463 11 0.4747 10 0.3276 11 0.6614 11 0.3464 10 0.3956 10 0.3066 10 0.1971 11 0.3638 11 0.4726 11 0.219 11 0.8853 11 0.2388 10)
Average genome size in population (length): 22.767
Average program size in population (points): 23.767
Average percent parens in population: 0.048
Minimum age in population: 236.152272352225
Maximum age in population: 242.1781221828404
Average age in population: 240.2821960247463
Median age in population: 240.3175635388661
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 14
Genome diversity (% unique Plush genomes):	 0.596
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 14
Syntactic diversity (% unique Push programs):	 0.596
Total error diversity:				 0.033
Error (vector) diversity:			 0.033
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 166000
Number of point (instruction) evaluations so far: 195841462
--- Timings ---
Current time: 1529615335582 milliseconds
Total Time:         480.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       243.9 seconds, 50.8%
Fitness Testing:    184.1 seconds, 38.3%
Report:              51.9 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 165
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 166
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 166
;;******************************
;; -*- Number IO problem report - generation 166
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction float_add} {:instruction integer_inc} {:instruction integer_flush} {:instruction tag_float_451} {:instruction float_tan} {:instruction integer_dup} {:instruction integer_min} {:instruction float_dec} {:instruction integer_min} {:instruction float_mult} {:instruction 92} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_rot} {:instruction float_tan} {:instruction integer_inc} {:instruction integer_inc} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_max} {:instruction integer_sub} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup} {:instruction integer_add} {:instruction float_dec} {:instruction print_integer})
Best program: (integer_min integer_div float_add integer_inc integer_flush tag_float_451 float_tan integer_dup integer_min float_dec integer_min float_mult 92 integer_inc integer_inc integer_inc integer_inc integer_rot float_tan integer_inc integer_inc integer_stackdepth in2 float_max integer_sub in1 integer_fromfloat in2 float_dup integer_add float_dec print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 32
Size: 33
Percent parens: 0.030
--- Population Statistics ---
Average total errors in population: 1811.8885698000045
Median total errors in population: 290.7912
Error averages by case: (60.16486999999994 11.234 60.872079999999265 12.136 62.77840710000036 11.258 61.262544000001114 11.142 58.40085990000053 11.214 60.62819559999847 11.95 61.7139460000003 11.06 62.35552289999924 11.143 60.590923600000785 11.133 60.77949560000061 11.144 61.5761798999989 11.171 61.49137770000067 11.142 60.92336639999887 11.22 58.33955289999933 11.064 62.013374799998665 11.257 62.68777919999896 11.303 59.96884480000083 11.213 61.285861199998415 11.134 60.63805999999841 11.233 61.798923299999004 11.277 62.43078739999933 11.246 61.309572800000524 11.312 60.666900000001185 11.251 62.64150830000113 11.275 61.990636399999346 12.067)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 11 0.0567 11 0.3207 10 0.159 10 0.8843 10 0.2633 11 0.0876 11 0.2613 11 0.4263 11 0.8463 11 0.4747 10 0.3276 11 0.6614 11 0.3464 11 0.3956 11 0.3066 10 0.1971 11 0.3638 11 0.4726 11 0.219 11 0.8853 11 0.2388 11)
Average genome size in population (length): 22.542
Average program size in population (points): 23.542
Average percent parens in population: 0.050
Minimum age in population: 238.1729947096604
Maximum age in population: 243.7985578777829
Average age in population: 241.8040208255921
Median age in population: 241.871779722558
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.587
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.587
Total error diversity:				 0.029
Error (vector) diversity:			 0.029
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 167000
Number of point (instruction) evaluations so far: 196405187
--- Timings ---
Current time: 1529615337816 milliseconds
Total Time:         482.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       245.3 seconds, 50.9%
Fitness Testing:    184.7 seconds, 38.3%
Report:              52.2 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 166
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 167
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 167
;;******************************
;; -*- Number IO problem report - generation 167
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in2} {:instruction float_dup} {:instruction integer_rot} {:instruction integer_yankdup} {:instruction float_sub} {:instruction integer_max} {:instruction float_pop} {:instruction float_dup_times} {:instruction float_stackdepth} {:instruction float_min} {:instruction integer_stackdepth} {:instruction integer_flush} {:instruction tag_float_527} {:instruction tag_float_370} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (in2 float_dup integer_rot integer_yankdup float_sub integer_max float_pop float_dup_times float_stackdepth float_min integer_stackdepth integer_flush tag_float_527 tag_float_370 in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 1714.5537349000044
Median total errors in population: 290.7912
Error averages by case: (57.11314849999994 11.223 57.85477399999948 12.122 57.47673020000032 11.243 58.489158400000825 11.139 55.37557640000049 11.203 56.99662999999889 11.946 58.73674100000028 11.058 57.551564199999554 11.133 57.71176670000073 11.134 55.830057600000536 11.13 56.70748639999902 11.163 56.57009880000059 11.14 57.79090529999919 11.206 56.42770469999938 11.068 56.88635759999903 11.239 59.27776339999918 11.286 56.94111280000051 11.205 56.28263039999883 11.129 57.73659299999871 11.236 55.71531749999934 11.261 57.2328787999994 11.246 58.0789906000005 11.296 57.73099500000089 11.245 58.25431120000101 11.259 57.40644239999942 12.068)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 11 0.0567 11 0.3207 10 0.159 10 0.1157 10 0.2633 11 0.0876 11 0.2613 11 0.4263 11 0.1537 11 0.4747 10 0.3276 11 0.3386 11 0.3464 11 0.3956 11 0.3066 11 0.1971 11 0.3638 11 0.4726 11 0.219 11 0.1147 11 0.2388 10)
Average genome size in population (length): 21.891
Average program size in population (points): 22.891
Average percent parens in population: 0.052
Minimum age in population: 239.3262620491272
Maximum age in population: 245.1183823123515
Average age in population: 243.2852887256126
Median age in population: 243.3318952723026
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.585
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.585
Total error diversity:				 0.031
Error (vector) diversity:			 0.031
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 168000
Number of point (instruction) evaluations so far: 196952662
--- Timings ---
Current time: 1529615340022 milliseconds
Total Time:         484.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       246.7 seconds, 50.9%
Fitness Testing:    185.3 seconds, 38.2%
Report:              52.4 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 167
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 168
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 168
;;******************************
;; -*- Number IO problem report - generation 168
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_div} {:instruction tagged_573} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction tag_integer_484} {:instruction integer_yankdup} {:instruction tag_float_527} {:instruction in1} {:instruction tag_float_527} {:instruction float_yankdup} {:instruction integer_max} {:instruction integer_swap} {:instruction float_sub} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction float_mod} {:instruction integer_flush} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (print_integer integer_div tagged_573 integer_stackdepth in2 float_sub tag_integer_484 integer_yankdup tag_float_527 in1 tag_float_527 float_yankdup integer_max integer_swap float_sub float_dup_times tag_float_527 float_mod integer_flush tag_float_527 float_pop in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 29
Size: 30
Percent parens: 0.033
--- Population Statistics ---
Average total errors in population: 1919.8629815000043
Median total errors in population: 290.7912
Error averages by case: (66.29985989999994 11.243 67.24331279999942 12.137 66.00817340000036 11.249 66.14402060000107 11.132 63.7345764000006 11.216 64.13588489999849 11.944 65.98039700000031 11.045 65.36818939999937 11.14 65.22230530000087 11.138 63.3528996000007 11.138 63.17051409999878 11.161 64.65484950000071 11.135 66.12152009999897 11.217 61.81935119999927 11.048 65.27439599999873 11.246 68.04944059999896 11.309 65.24442000000072 11.214 64.67094599999845 11.125 67.15689959999845 11.242 65.13512189999912 11.28 65.62558959999932 11.251 66.50910020000062 11.319 67.1092140000011 11.265 68.03385240000118 11.279 65.25314699999932 12.072)
Error minima by case: (0.1443 10 0.4612 11 0.1077 6 0.4016 4 0.0567 11 0.3207 10 0.841 3 0.8843 10 0.7367 4 0.9124 4 0.2613 4 0.5737 3 0.8463 5 0.4747 3 0.3276 6 0.6614 6 0.3464 5 0.6044 4 0.6934 10 0.1971 6 0.3638 6 0.4726 6 0.781 10 0.8853 5 0.2388 11)
Average genome size in population (length): 21.472
Average program size in population (points): 22.472
Average percent parens in population: 0.053
Minimum age in population: 241.2691203637896
Maximum age in population: 247.0204821631839
Average age in population: 244.7169337327926
Median age in population: 244.793923919369
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 16
Genome diversity (% unique Plush genomes):	 0.584
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 16
Syntactic diversity (% unique Push programs):	 0.584
Total error diversity:				 0.03
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 169000
Number of point (instruction) evaluations so far: 197489562
--- Timings ---
Current time: 1529615342381 milliseconds
Total Time:         486.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       248.2 seconds, 51.0%
Fitness Testing:    185.9 seconds, 38.2%
Report:              52.6 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 168
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 169
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 169
;;******************************
;; -*- Number IO problem report - generation 169
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction integer_div} {:instruction tagged_573} {:instruction print_float} {:instruction integer_dup_items} {:instruction integer_mult} {:instruction in2} {:instruction 62} {:instruction integer_flush} {:instruction float_sub} {:instruction integer_mult} {:instruction integer_dup} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction in2} {:instruction float_dup_times} {:instruction tag_integer_484} {:instruction integer_dup} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (integer_min integer_min integer_div tagged_573 print_float integer_dup_items integer_mult in2 62 integer_flush float_sub integer_mult integer_dup in1 integer_fromfloat in2 in2 float_dup_times tag_integer_484 integer_dup tag_float_527 float_pop in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 1921.5654798000046
Median total errors in population: 290.7912
Error averages by case: (65.94231299999994 11.235 66.6816919999994 12.132 65.41019170000031 11.239 67.52592960000118 11.136 65.10559700000059 11.209 64.42647839999847 11.95 67.62419700000031 11.055 64.86282869999926 11.141 66.64929060000071 11.132 63.18410880000066 11.137 64.18813469999888 11.151 64.22078810000062 11.135 66.520903399999 11.211 64.50977459999928 11.059 64.70940919999865 11.237 67.9764879999989 11.306 65.43411280000083 11.218 64.16386119999844 11.132 66.64799399999849 11.234 64.54831749999907 11.253 65.06060459999938 11.246 66.72584680000044 11.305 66.60971000000119 11.252 65.71336130000101 11.263 64.69354679999938 12.062)
Error minima by case: (0.1443 11 0.4612 11 0.1077 5 0.4016 5 0.0567 11 0.3207 10 0.841 5 0.1157 10 0.7367 5 0.9124 4 0.2613 4 0.5737 3 0.1537 5 0.4747 5 0.3276 5 0.3386 5 0.3464 5 0.6044 4 0.6934 10 0.1971 5 0.3638 5 0.4726 5 0.781 11 0.1147 4 0.2388 11)
Average genome size in population (length): 21.686
Average program size in population (points): 22.686
Average percent parens in population: 0.052
Minimum age in population: 242.2691203637896
Maximum age in population: 248.1801089067436
Average age in population: 246.1574815160884
Median age in population: 246.2285647728134
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.568
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.568
Total error diversity:				 0.029
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 170000
Number of point (instruction) evaluations so far: 198031787
--- Timings ---
Current time: 1529615344808 milliseconds
Total Time:         489.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       249.6 seconds, 51.0%
Fitness Testing:    186.6 seconds, 38.1%
Report:              52.9 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 169
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 170
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 170
;;******************************
;; -*- Number IO problem report - generation 170
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_add} {:instruction tag_float_527} {:instruction integer_flush} {:instruction float_max} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_mod} {:instruction print_integer})
Best program: (float_add tag_float_527 integer_flush float_max in1 integer_fromfloat in2 float_dup_times integer_add float_mod print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 11
Size: 12
Percent parens: 0.083
--- Population Statistics ---
Average total errors in population: 2159.0968240000043
Median total errors in population: 290.7912
Error averages by case: (74.32784979999994 11.271 75.1106232000003 12.157 76.57733009999912 11.289 75.64817440000122 11.161 73.3811228000006 11.246 74.03591279999829 11.945 74.66496700000029 11.064 76.18714270000032 11.16 74.31087309999974 11.149 73.96672200000067 11.159 74.75782819999888 11.19 75.52634589999944 11.168 74.92159599999994 11.252 70.55558420000014 11.07 75.96713319999965 11.287 76.74348799999872 11.358 73.74603439999989 11.25 75.40360839999823 11.156 74.49965899999935 11.273 75.78095230000011 11.319 76.31196660000059 11.289 75.25079199999942 11.366 74.91596600000129 11.292 77.15442589999992 11.323 76.0777260000006 12.079)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 10 0.0567 11 0.3207 10 0.841 9 0.8843 10 0.7367 10 0.9124 10 0.2613 9 0.5737 11 0.8463 11 0.4747 10 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 10 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 11)
Average genome size in population (length): 21.414
Average program size in population (points): 22.414
Average percent parens in population: 0.053
Minimum age in population: 243.2691203637896
Maximum age in population: 249.6288272772068
Average age in population: 247.6369802574462
Median age in population: 247.7051108009401
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.568
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.568
Total error diversity:				 0.03
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 171000
Number of point (instruction) evaluations so far: 198567187
--- Timings ---
Current time: 1529615347040 milliseconds
Total Time:         491.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       251.0 seconds, 51.1%
Fitness Testing:    187.3 seconds, 38.1%
Report:              53.2 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 170
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 171
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 171
;;******************************
;; -*- Number IO problem report - generation 171
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_inc} {:instruction float_mod} {:instruction float_max} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_dec} {:instruction print_integer})
Best program: (integer_min integer_inc float_mod float_max integer_inc integer_min in1 integer_fromfloat in2 float_dup_times integer_add float_dec print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 13
Size: 14
Percent parens: 0.071
--- Population Statistics ---
Average total errors in population: 1790.1209489000046
Median total errors in population: 290.7912
Error averages by case: (60.09315859999994 11.231 60.845002399999466 12.129 60.760053300000365 11.248 61.36854400000109 11.141 59.293803200000575 11.211 59.563874899998716 11.951 61.775946000000296 11.06 60.33829149999942 11.135 60.608923600000836 11.126 58.73579480000065 11.133 59.55822509999884 11.168 59.49281990000066 11.136 60.81575159999903 11.215 59.2780781999993 11.067 60.015340399998884 11.249 62.51542479999893 11.301 59.931923200000675 11.208 59.263905199998625 11.128 60.705446799998555 11.235 59.79989429999927 11.278 60.42097019999933 11.235 61.13846320000058 11.313 60.69846200000099 11.25 60.623737700001165 11.271 59.993113999999345 12.067)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 11 0.0567 11 0.3207 10 0.159 10 0.1157 11 0.2633 11 0.0876 11 0.2613 11 0.4263 11 0.1537 11 0.4747 11 0.3276 11 0.3386 11 0.3464 11 0.3956 11 0.3066 10 0.1971 11 0.3638 11 0.4726 11 0.219 11 0.1147 11 0.2388 10)
Average genome size in population (length): 20.474
Average program size in population (points): 21.474
Average percent parens in population: 0.055
Minimum age in population: 246.1291302575438
Maximum age in population: 251.3641546342697
Average age in population: 249.0907640340643
Median age in population: 249.1532418249256
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.55
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.55
Total error diversity:				 0.024
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 172000
Number of point (instruction) evaluations so far: 199079087
--- Timings ---
Current time: 1529615349173 milliseconds
Total Time:         493.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       252.4 seconds, 51.1%
Fitness Testing:    187.9 seconds, 38.1%
Report:              53.4 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 171
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 172
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 172
;;******************************
;; -*- Number IO problem report - generation 172
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in2} {:instruction integer_max} {:instruction integer_mult} {:instruction integer_max} {:instruction integer_yankdup} {:instruction integer_stackdepth} {:instruction float_dup_items} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_cos} {:instruction integer_min} {:instruction in1} {:instruction integer_yankdup} {:instruction tag_float_527} {:instruction float_sub} {:instruction integer_mult} {:instruction integer_dup} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction in2} {:instruction float_dup_times} {:instruction tag_integer_484} {:instruction float_swap} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (in2 integer_max integer_mult integer_max integer_yankdup integer_stackdepth float_dup_items integer_min in1 integer_fromfloat in2 float_cos integer_min in1 integer_yankdup tag_float_527 float_sub integer_mult integer_dup in1 integer_fromfloat in2 in2 float_dup_times tag_integer_484 float_swap tag_float_527 float_pop in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 36
Size: 37
Percent parens: 0.027
--- Population Statistics ---
Average total errors in population: 1653.0004528000043
Median total errors in population: 290.7912
Error averages by case: (54.90003449999993 11.2 55.73799799999958 12.105 54.953945600000296 11.217 56.60173280000074 11.121 51.195710400000536 11.179 54.61268539999884 11.951 57.076197000000306 11.044 54.933324599999565 11.114 55.78255390000083 11.109 53.59988240000065 11.118 52.656963799998984 11.146 54.1462462000006 11.125 55.501597899999275 11.183 54.3462998999993 11.055 54.44501279999898 11.215 56.77708619999926 11.263 54.67696240000049 11.182 54.00430079999878 11.11 55.75346099999874 11.198 52.55487979999941 11.242 54.7726063999994 11.213 55.75593580000056 11.267 55.685615000000816 11.22 55.7692466000011 11.248 54.88117359999941 12.054)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 10 0.0567 11 0.3207 10 0.159 10 0.8843 10 0.2633 11 0.0876 11 0.2613 11 0.4263 10 0.8463 11 0.4747 10 0.3276 11 0.6614 11 0.3464 10 0.3956 10 0.3066 10 0.1971 11 0.3638 11 0.4726 11 0.219 11 0.8853 11 0.2388 11)
Average genome size in population (length): 20.225
Average program size in population (points): 21.225
Average percent parens in population: 0.055
Minimum age in population: 247.6077544425762
Maximum age in population: 252.5577669330234
Average age in population: 250.5299740166813
Median age in population: 250.6177029047337
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.538
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.538
Total error diversity:				 0.022
Error (vector) diversity:			 0.022
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 173000
Number of point (instruction) evaluations so far: 199584837
--- Timings ---
Current time: 1529615351459 milliseconds
Total Time:         495.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       253.8 seconds, 51.2%
Fitness Testing:    188.5 seconds, 38.0%
Report:              53.5 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 172
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 173
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 173
;;******************************
;; -*- Number IO problem report - generation 173
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_inc} {:instruction float_mod} {:instruction float_max} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_inc} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (integer_min integer_inc float_mod float_max integer_inc integer_min in1 integer_fromfloat in2 float_inc float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 14
Size: 15
Percent parens: 0.067
--- Population Statistics ---
Average total errors in population: 1769.6510633000041
Median total errors in population: 290.7912
Error averages by case: (58.631869999999935 11.231 59.525079999999605 12.125 60.238484100000356 11.243 60.225953600000764 11.134 57.65603000000049 11.207 59.98208189999893 11.95 60.7682640000003 11.051 59.861060099999634 11.136 59.320503400000746 11.126 58.810495600000564 11.138 58.99727029999894 11.158 59.08137770000066 11.14 59.2374441999992 11.212 57.75317939999938 11.061 59.5660299999991 11.241 60.97274759999933 11.305 58.29723040000045 11.21 59.12486119999886 11.13 59.3870599999988 11.23 59.405894299999396 11.267 59.89951499999934 11.244 59.65140840000048 11.314 59.329900000000855 11.261 61.377820100001074 11.278 60.08650199999934 12.071)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.5984 11 0.0567 11 0.3207 10 0.841 10 0.8843 10 0.7367 11 0.9124 11 0.2613 10 0.5737 11 0.8463 11 0.4747 10 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 11)
Average genome size in population (length): 20.303
Average program size in population (points): 21.303
Average percent parens in population: 0.055
Minimum age in population: 248.7770430153104
Maximum age in population: 253.8914461006506
Average age in population: 251.9830638797088
Median age in population: 252.0229237366137
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 20
Genome diversity (% unique Plush genomes):	 0.569
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 20
Syntactic diversity (% unique Push programs):	 0.569
Total error diversity:				 0.021
Error (vector) diversity:			 0.021
Behavioral diversity:				 0.021
--- Run Statistics ---
Number of program evaluations used so far: 174000
Number of point (instruction) evaluations so far: 200092537
--- Timings ---
Current time: 1529615353664 milliseconds
Total Time:         498.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       255.2 seconds, 51.2%
Fitness Testing:    189.1 seconds, 37.9%
Report:              53.8 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 173
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 174
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 174
;;******************************
;; -*- Number IO problem report - generation 174
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_stackdepth} {:instruction float_min} {:instruction float_dup} {:instruction float_tan} {:instruction float_tan} {:instruction tag_float_123} {:instruction 92} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_cos} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (integer_stackdepth float_min float_dup float_tan float_tan tag_float_123 92 float_pop in2 in1 integer_fromfloat float_cos float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 16
Size: 17
Percent parens: 0.059
--- Population Statistics ---
Average total errors in population: 2063.9815975000047
Median total errors in population: 290.7912
Error averages by case: (71.40100419999993 11.266 72.40285159999966 12.15 71.68565319999989 11.264 72.98196160000118 11.158 68.57395270000062 11.238 70.04034719999854 11.939 72.54090000000029 11.06 71.6395641999996 11.165 72.07229330000038 11.145 69.04537160000068 11.142 68.48156689999894 11.166 70.6750670000003 11.15 72.0569033999993 11.239 69.73622999999954 11.072 71.00042639999893 11.271 73.78650379999873 11.339 70.89945920000046 11.239 70.24683919999823 11.146 72.15520619999872 11.26 70.70890879999924 11.286 71.43551319999983 11.268 72.64237420000012 11.342 72.12743300000126 11.277 71.22854060000071 11.291 71.45972599999985 12.084)
Error minima by case: (0.1443 11 0.4612 11 0.1077 5 0.5984 5 0.0567 11 0.3207 9 0.841 5 0.1157 10 0.7367 5 0.9124 4 0.2613 4 0.5737 3 0.8463 5 0.4747 5 0.3276 5 0.6614 5 0.3464 5 0.6044 4 0.6934 10 0.1971 5 0.3638 5 0.4726 5 0.781 10 0.1147 4 0.2388 11)
Average genome size in population (length): 19.626
Average program size in population (points): 20.626
Average percent parens in population: 0.057
Minimum age in population: 250.6137097218971
Maximum age in population: 255.7761814373225
Average age in population: 253.4685555791392
Median age in population: 253.5016972136414
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 19
Genome diversity (% unique Plush genomes):	 0.561
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 19
Syntactic diversity (% unique Push programs):	 0.561
Total error diversity:				 0.024
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 175000
Number of point (instruction) evaluations so far: 200583362
--- Timings ---
Current time: 1529615355930 milliseconds
Total Time:         500.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       256.7 seconds, 51.3%
Fitness Testing:    189.6 seconds, 37.9%
Report:              54.0 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 174
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 175
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 175
;;******************************
;; -*- Number IO problem report - generation 175
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_add} {:instruction tag_float_527} {:instruction integer_flush} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction print_integer})
Best program: (float_add tag_float_527 integer_flush integer_inc integer_min in1 integer_fromfloat in2 float_dup_times integer_add print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 11
Size: 12
Percent parens: 0.083
--- Population Statistics ---
Average total errors in population: 1861.365756100004
Median total errors in population: 290.7912
Error averages by case: (62.26344719999994 11.232 63.08592479999951 12.125 64.14026870000033 11.249 64.12143220000083 11.136 62.4149733000005 11.2 61.97544049999883 11.944 62.95083300000029 11.051 64.0939443999995 11.143 63.0713970000007 11.125 61.33842200000052 11.132 62.29174769999904 11.152 62.3853777000006 11.125 64.01759789999917 11.218 58.25899399999942 11.06 63.17268519999901 11.233 66.16508619999922 11.322 63.385191200000534 11.219 62.46644359999884 11.122 63.02683359999875 11.233 63.02450009999931 11.271 63.5962425999994 11.252 64.3169358000005 11.323 62.978024000000914 11.256 66.22670540000068 11.275 64.13530799999938 12.064)
Error minima by case: (0.1443 11 0.4612 10 0.1077 6 0.4016 10 0.0567 10 0.3207 10 0.841 8 0.8843 10 0.7367 10 0.9124 4 0.2613 4 0.5737 3 0.8463 10 0.4747 10 0.3276 6 0.6614 11 0.3464 10 0.6044 4 0.6934 10 0.1971 6 0.3638 6 0.4726 11 0.781 11 0.8853 5 0.2388 10)
Average genome size in population (length): 19.566
Average program size in population (points): 20.566
Average percent parens in population: 0.056
Minimum age in population: 251.6137097218971
Maximum age in population: 256.7486360239744
Average age in population: 254.9861441147663
Median age in population: 255.0213963613831
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 20
Genome diversity (% unique Plush genomes):	 0.553
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 20
Syntactic diversity (% unique Push programs):	 0.553
Total error diversity:				 0.027
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 176000
Number of point (instruction) evaluations so far: 201072737
--- Timings ---
Current time: 1529615358066 milliseconds
Total Time:         502.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       258.1 seconds, 51.4%
Fitness Testing:    190.2 seconds, 37.8%
Report:              54.2 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 175
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 176
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 176
;;******************************
;; -*- Number IO problem report - generation 176
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_dup} {:instruction integer_min} {:instruction integer_dup_items} {:instruction float_mod} {:instruction float_dup_times} {:instruction float_add} {:instruction float_sub} {:instruction float_dup_times} {:instruction integer_min} {:instruction integer_swap} {:instruction 70} {:instruction float_dec} {:instruction integer_min} {:instruction float_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_max} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (integer_min float_dup integer_min integer_dup_items float_mod float_dup_times float_add float_sub float_dup_times integer_min integer_swap 70 float_dec integer_min float_mult in1 integer_fromfloat in2 in2 in1 integer_fromfloat float_pop float_max integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 1686.3854926000047
Median total errors in population: 290.7912
Error averages by case: (57.653148499999936 11.207 58.292773999999184 12.12 55.800022600000354 11.21 55.24214240000103 11.106 55.85068980000057 11.19 53.85144049999859 11.953 54.5784230000003 11.034 56.191985699999165 11.133 54.759713500000856 11.102 53.89870720000068 11.097 53.760360699998834 11.137 54.59739360000064 11.114 59.3628293999988 11.181 51.79665409999937 11.028 55.06832319999868 11.218 61.02271599999878 11.257 58.22161600000091 11.176 54.33550959999855 11.099 57.91659299999831 11.206 53.965682699999206 11.23 55.48006159999935 11.198 59.89429880000058 11.271 57.99899500000126 11.218 59.41882010000117 11.233 55.632591599999365 12.076)
Error minima by case: (0.1443 10 0.4612 11 0.1077 6 0.5984 4 0.0567 9 0.3207 10 0.841 3 0.8843 10 0.7367 4 0.9124 4 0.2613 4 0.5737 3 0.8463 5 0.4747 3 0.3276 6 0.6614 6 0.3464 5 0.6044 4 0.6934 10 0.1971 6 0.3638 6 0.4726 6 0.781 10 0.8853 4 0.2388 11)
Average genome size in population (length): 19.556
Average program size in population (points): 20.556
Average percent parens in population: 0.056
Minimum age in population: 253.4690710866653
Maximum age in population: 258.4377931029966
Average age in population: 256.4440798034521
Median age in population: 256.474386831041
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.537
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.537
Total error diversity:				 0.03
Error (vector) diversity:			 0.03
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 177000
Number of point (instruction) evaluations so far: 201561837
--- Timings ---
Current time: 1529615360246 milliseconds
Total Time:         504.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       259.5 seconds, 51.4%
Fitness Testing:    190.8 seconds, 37.8%
Report:              54.3 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 176
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 177
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 177
;;******************************
;; -*- Number IO problem report - generation 177
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_swap} {:instruction float_dec} {:instruction float_flush} {:instruction float_cos} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction in2} {:instruction integer_shove} {:instruction integer_dec} {:instruction float_dup_items} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_dec} {:instruction print_integer})
Best program: (integer_min integer_swap float_dec float_flush float_cos tag_float_527 float_pop in2 in2 integer_shove integer_dec float_dup_items in1 integer_fromfloat in2 float_dup_times integer_add float_dec print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 19
Size: 20
Percent parens: 0.050
--- Population Statistics ---
Average total errors in population: 1830.3560711000043
Median total errors in population: 290.7912
Error averages by case: (62.20744719999994 11.23 62.887924799999276 12.136 61.285945600000375 11.227 61.29115040000109 11.125 62.48808670000064 11.214 61.70208189999837 11.963 61.9062640000003 11.038 61.977365899999256 11.139 60.8399768000009 11.116 60.02123280000071 11.123 60.20544119999878 11.146 60.33295140000068 11.118 63.84659789999883 11.206 59.694128799999234 11.038 60.736702399998556 11.223 65.31740899999883 11.285 63.132805600000864 11.197 60.32563039999831 11.116 62.82683359999829 11.233 60.588120399999006 11.252 61.022151199999314 11.226 64.01193580000064 11.301 62.8280240000012 11.251 64.78136130000125 11.249 61.874501999999325 12.072)
Error minima by case: (0.1443 11 0.4612 11 0.1077 6 0.4016 4 0.0567 11 0.3207 10 0.841 3 0.8843 10 0.7367 4 0.9124 4 0.2613 4 0.5737 3 0.8463 5 0.4747 3 0.3276 6 0.6614 6 0.3464 5 0.6044 4 0.6934 10 0.1971 6 0.3638 6 0.4726 6 0.781 11 0.8853 5 0.2388 11)
Average genome size in population (length): 19.593
Average program size in population (points): 20.593
Average percent parens in population: 0.055
Minimum age in population: 255.0857008082646
Maximum age in population: 259.8842051021577
Average age in population: 257.9576239445274
Median age in population: 257.982290302538
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.553
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.553
Total error diversity:				 0.023
Error (vector) diversity:			 0.023
Behavioral diversity:				 0.023
--- Run Statistics ---
Number of program evaluations used so far: 178000
Number of point (instruction) evaluations so far: 202051887
--- Timings ---
Current time: 1529615362413 milliseconds
Total Time:         506.9 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       260.9 seconds, 51.5%
Fitness Testing:    191.4 seconds, 37.8%
Report:              54.5 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 177
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 178
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 178
;;******************************
;; -*- Number IO problem report - generation 178
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_div} {:instruction float_add} {:instruction float_max} {:instruction integer_flush} {:instruction tag_float_451} {:instruction in1} {:instruction float_dup} {:instruction float_mult} {:instruction float_sub} {:instruction integer_dup} {:instruction integer_inc} {:instruction integer_min} {:instruction float_div} {:instruction float_pop} {:instruction float_pop} {:instruction 92} {:instruction float_min} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_dec} {:instruction print_integer})
Best program: (integer_min float_div float_add float_max integer_flush tag_float_451 in1 float_dup float_mult float_sub integer_dup integer_inc integer_min float_div float_pop float_pop 92 float_min integer_min in1 integer_fromfloat in2 float_dup_times integer_add float_dec print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 1671.5388440000042
Median total errors in population: 290.7912
Error averages by case: (55.51388009999994 11.223 56.303308399999565 12.121 56.21169950000032 11.234 55.83814240000055 11.124 53.690030000000455 11.19 54.832364699999104 11.949 57.29215100000029 11.045 55.18436589999979 11.126 56.05713370000071 11.112 54.017970000000524 11.122 53.58605419999901 11.148 54.49067250000062 11.119 56.2779830999992 11.193 54.67845169999941 11.045 55.2789955999993 11.229 58.28073179999927 11.284 55.40665520000031 11.185 54.53627879999917 11.114 56.12591379999884 11.218 55.132288499999596 11.262 55.70269779999938 11.23 56.66482620000045 11.291 56.11536700000083 11.235 57.118902500001006 11.258 55.07997959999939 12.065)
Error minima by case: (0.1443 11 0.4612 11 0.1077 6 0.4016 4 0.0567 11 0.3207 10 0.841 5 0.8843 10 0.7367 5 0.9124 4 0.2613 5 0.5737 4 0.8463 6 0.4747 5 0.3276 6 0.6614 6 0.3464 5 0.6044 5 0.6934 10 0.1971 6 0.3638 6 0.4726 6 0.781 11 0.8853 4 0.2388 11)
Average genome size in population (length): 19.264
Average program size in population (points): 20.264
Average percent parens in population: 0.056
Minimum age in population: 256.9327874823695
Maximum age in population: 261.6824055418655
Average age in population: 259.4700993395112
Median age in population: 259.5153822049745
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.546
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.546
Total error diversity:				 0.027
Error (vector) diversity:			 0.027
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 179000
Number of point (instruction) evaluations so far: 202533662
--- Timings ---
Current time: 1529615364635 milliseconds
Total Time:         509.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       262.3 seconds, 51.5%
Fitness Testing:    192.0 seconds, 37.7%
Report:              54.7 seconds, 10.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 178
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 179
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 179
;;******************************
;; -*- Number IO problem report - generation 179
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_tan} {:instruction integer_dec} {:instruction float_mod} {:instruction integer_div} {:instruction float_dup_times} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_dec} {:instruction print_integer})
Best program: (float_tan integer_dec float_mod integer_div float_dup_times in1 integer_fromfloat in2 float_dup_times integer_add float_dec print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 12
Size: 13
Percent parens: 0.077
--- Population Statistics ---
Average total errors in population: 1720.3923067000046
Median total errors in population: 290.7912
Error averages by case: (58.35314849999994 11.237 59.45231279999966 12.129 58.2418221000004 11.256 58.459666600000695 11.139 56.50240630000045 11.207 54.97011089999899 11.934 57.440823400000305 11.046 57.022339699999684 11.14 57.242327500000705 11.121 54.24558460000053 11.135 55.373176799998966 11.168 56.06723730000069 11.14 59.29298309999926 11.216 52.97243029999941 11.049 57.0134286999992 11.254 61.78007039999934 11.307 58.302962400000425 11.22 55.86623659999893 11.124 59.24489959999887 11.231 56.81119959999942 11.287 57.56927559999929 11.251 59.82335360000044 11.317 59.18321400000081 11.256 59.78773770000105 11.283 56.85755859999934 12.069)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.5984 11 0.0567 10 0.3207 9 0.841 9 0.8843 11 0.7367 11 0.9124 10 0.2613 10 0.5737 11 0.8463 11 0.4747 8 0.3276 10 0.6614 11 0.3464 11 0.6044 11 0.6934 10 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 10 0.2388 11)
Average genome size in population (length): 18.816
Average program size in population (points): 19.816
Average percent parens in population: 0.057
Minimum age in population: 258.8326052164137
Maximum age in population: 262.9871047017242
Average age in population: 260.9225803114286
Median age in population: 260.9438411489992
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.534
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.534
Total error diversity:				 0.025
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 180000
Number of point (instruction) evaluations so far: 203004312
--- Timings ---
Current time: 1529615366833 milliseconds
Total Time:         511.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       263.7 seconds, 51.6%
Fitness Testing:    192.6 seconds, 37.7%
Report:              55.0 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 179
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 180
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 180
;;******************************
;; -*- Number IO problem report - generation 180
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_tan} {:instruction integer_mult} {:instruction float_mod} {:instruction integer_div} {:instruction in2} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_inc} {:instruction float_cos} {:instruction integer_pop} {:instruction tag_float_566} {:instruction float_pop} {:instruction 93} {:instruction integer_yankdup} {:instruction float_add} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_sin} {:instruction integer_add} {:instruction print_integer})
Best program: (float_tan integer_mult float_mod integer_div in2 integer_inc integer_min integer_inc float_cos integer_pop tag_float_566 float_pop 93 integer_yankdup float_add in1 integer_fromfloat in2 float_sin integer_add print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 21
Size: 22
Percent parens: 0.045
--- Population Statistics ---
Average total errors in population: 1412.9396114000042
Median total errors in population: 290.7912
Error averages by case: (44.686034499999934 11.191 45.52999799999971 12.098 45.78213030000037 11.197 46.016323200000684 11.102 43.73388050000061 11.167 45.30900609999882 11.946 46.597879000000276 11.031 45.71090309999968 11.111 45.236027300000856 11.096 44.10544440000069 11.099 44.849360699998805 11.128 44.748114700000656 11.104 45.328368299999326 11.163 43.75324929999926 11.038 45.13430599999904 11.192 47.03437739999931 11.24 44.33365520000038 11.161 44.495905199998774 11.093 45.32646099999877 11.193 44.897865299999445 11.22 45.52215299999935 11.194 45.76971660000062 11.246 45.30461500000074 11.215 46.5779025000012 11.23 45.652934799999365 12.048)
Error minima by case: (0.1443 11 0.4612 11 0.1077 3 0.4016 2 0.0567 11 0.3207 10 0.841 2 0.1157 10 0.7367 2 0.9124 2 0.2613 2 0.5737 1 0.1537 2 0.4747 2 0.3276 3 0.3386 2 0.3464 2 0.6044 2 0.6934 11 0.1971 3 0.3638 3 0.4726 2 0.781 11 0.1147 2 0.2388 11)
Average genome size in population (length): 18.661
Average program size in population (points): 19.661
Average percent parens in population: 0.058
Minimum age in population: 260.1567761116906
Maximum age in population: 264.4280860317061
Average age in population: 262.4114647589099
Median age in population: 262.4752324401139
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.532
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.532
Total error diversity:				 0.022
Error (vector) diversity:			 0.022
Behavioral diversity:				 0.023
--- Run Statistics ---
Number of program evaluations used so far: 181000
Number of point (instruction) evaluations so far: 203471237
--- Timings ---
Current time: 1529615368961 milliseconds
Total Time:         513.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       265.1 seconds, 51.6%
Fitness Testing:    193.2 seconds, 37.6%
Report:              55.1 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 180
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 181
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 181
;;******************************
;; -*- Number IO problem report - generation 181
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction float_tan} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_div} {:instruction float_tan} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_yank} {:instruction integer_inc} {:instruction integer_min} {:instruction integer_dup_items} {:instruction float_dec} {:instruction integer_min} {:instruction integer_div} {:instruction integer_rot} {:instruction integer_min} {:instruction integer_div} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_min integer_div float_tan in1 integer_fromfloat in2 integer_inc integer_min integer_div float_tan in1 integer_fromfloat float_yank integer_inc integer_min integer_dup_items float_dec integer_min integer_div integer_rot integer_min integer_div integer_inc integer_min in1 integer_fromfloat in2 float_dup_times integer_add print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 30
Size: 31
Percent parens: 0.032
--- Population Statistics ---
Average total errors in population: 1673.9911689000041
Median total errors in population: 290.7912
Error averages by case: (54.868323099999934 11.207 56.16599799999945 12.105 56.457622500000404 11.227 57.20492960000106 11.126 51.61282380000056 11.181 56.380723299998465 11.933 57.67951500000029 11.047 56.624018799999334 11.12 56.16355390000086 11.11 53.26632040000067 11.127 54.0139185999988 11.153 55.5675251000007 11.123 55.575905299999036 11.195 52.97324929999926 11.057 55.89037479999876 11.225 57.093440599999006 11.279 54.55619120000065 11.189 55.3122787999985 11.117 56.14746099999846 11.205 55.65250009999916 11.258 56.253787399999304 11.227 56.0110454000006 11.283 56.039615000001056 11.234 57.65059070000124 11.263 56.78145719999931 12.057)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 11 0.0567 11 0.3207 9 0.841 10 0.8843 10 0.7367 9 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 10 0.3276 11 0.6614 11 0.3464 11 0.6044 10 0.6934 10 0.1971 11 0.3638 11 0.4726 11 0.781 10 0.8853 10 0.2388 11)
Average genome size in population (length): 18.611
Average program size in population (points): 19.611
Average percent parens in population: 0.058
Minimum age in population: 261.2265783628549
Maximum age in population: 266.0915218761134
Average age in population: 263.8880407772122
Median age in population: 263.9579700335954
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.553
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.553
Total error diversity:				 0.021
Error (vector) diversity:			 0.021
Behavioral diversity:				 0.021
--- Run Statistics ---
Number of program evaluations used so far: 182000
Number of point (instruction) evaluations so far: 203937037
--- Timings ---
Current time: 1529615371130 milliseconds
Total Time:         515.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       266.5 seconds, 51.7%
Fitness Testing:    193.7 seconds, 37.6%
Report:              55.3 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 181
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 182
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 182
;;******************************
;; -*- Number IO problem report - generation 182
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_div} {:instruction tagged_573} {:instruction integer_stackdepth} {:instruction in2} {:instruction float_sub} {:instruction tag_integer_484} {:instruction integer_yankdup} {:instruction float_shove} {:instruction tag_integer_477} {:instruction integer_flush} {:instruction float_dup_times} {:instruction float_dup_times} {:instruction tag_float_527} {:instruction in2} {:instruction integer_swap} {:instruction integer_dup_items} {:instruction float_inc} {:instruction float_sub} {:instruction float_tan} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction -33.87876373212184} {:instruction integer_add} {:instruction print_integer})
Best program: (print_integer integer_div tagged_573 integer_stackdepth in2 float_sub tag_integer_484 integer_yankdup float_shove tag_integer_477 integer_flush float_dup_times float_dup_times tag_float_527 in2 integer_swap integer_dup_items float_inc float_sub float_tan in1 integer_fromfloat in2 -33.87876373212184 integer_add print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 26
Size: 27
Percent parens: 0.037
--- Population Statistics ---
Average total errors in population: 1434.8324476000043
Median total errors in population: 290.7912
Error averages by case: (47.05003449999994 11.18 47.616997999999924 12.099 45.5948050000003 11.193 46.80891360000033 11.09 45.140993900000524 11.159 44.91202619999937 11.958 47.30887900000026 11.035 45.01855920000005 11.097 46.507027300000736 11.09 44.10173190000059 11.097 44.04021899999899 11.127 44.423517500000564 11.092 47.88952389999961 11.16 45.604249299999374 11.035 44.89773999999951 11.181 49.70731419999961 11.231 47.35911920000009 11.159 44.32534469999941 11.084 47.560460999999165 11.186 44.75767849999989 11.221 45.23060419999943 11.182 47.99638780000051 11.24 47.58861500000045 11.2 47.042568700001006 11.21 44.99613599999944 12.047)
Error minima by case: (0.1443 11 0.4612 11 0.1077 6 0.5984 4 0.0567 11 0.3207 10 0.841 3 0.8843 11 0.7367 4 0.9124 4 0.2613 4 0.5737 3 0.8463 5 0.4747 3 0.3276 6 0.6614 6 0.3464 5 0.6044 4 0.6934 11 0.1971 6 0.3638 6 0.4726 6 0.781 11 0.8853 5 0.2388 11)
Average genome size in population (length): 18.301
Average program size in population (points): 19.301
Average percent parens in population: 0.059
Minimum age in population: 262.8143452191156
Maximum age in population: 267.823182834228
Average age in population: 265.3477227683362
Median age in population: 265.3737941958377
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 21
Genome diversity (% unique Plush genomes):	 0.521
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 21
Syntactic diversity (% unique Push programs):	 0.521
Total error diversity:				 0.024
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 183000
Number of point (instruction) evaluations so far: 204394987
--- Timings ---
Current time: 1529615373299 milliseconds
Total Time:         517.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       267.8 seconds, 51.7%
Fitness Testing:    194.3 seconds, 37.5%
Report:              55.5 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 182
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 183
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 183
;;******************************
;; -*- Number IO problem report - generation 183
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_min} {:instruction integer_flush} {:instruction integer_stackdepth} {:instruction integer_max} {:instruction tagged_739} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_pop} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (float_min integer_flush integer_stackdepth integer_max tagged_739 in1 integer_fromfloat in2 float_pop float_pop in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 18
Size: 19
Percent parens: 0.053
--- Population Statistics ---
Average total errors in population: 1630.5795860000044
Median total errors in population: 290.7912
Error averages by case: (53.28245729999993 11.213 54.19515319999934 12.11 55.443699500000335 11.239 55.03653600000102 11.117 51.61782380000062 11.181 53.21440259999853 11.949 55.20135600000029 11.048 54.23336589999932 11.115 54.039080500000885 11.111 52.801444400000705 11.126 53.406054199998835 11.155 53.53311470000063 11.118 53.86398309999899 11.194 51.59077459999926 11.052 54.38730599999866 11.227 55.80673179999886 11.277 52.98365520000079 11.188 53.4675315999984 11.113 54.07068739999839 11.208 54.20486529999908 11.269 54.87715299999937 11.232 54.24982620000063 11.284 54.00649100000109 11.236 54.902590700001184 11.264 54.080501999999385 12.057)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.5984 11 0.0567 10 0.3207 10 0.841 10 0.8843 11 0.7367 9 0.9124 10 0.2613 11 0.5737 11 0.8463 10 0.4747 10 0.3276 10 0.6614 11 0.3464 11 0.6044 10 0.6934 10 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 10)
Average genome size in population (length): 18.277
Average program size in population (points): 19.277
Average percent parens in population: 0.059
Minimum age in population: 264.5181302701996
Maximum age in population: 268.7000432457455
Average age in population: 266.8276362033171
Median age in population: 266.8696151177539
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 25
Genome diversity (% unique Plush genomes):	 0.522
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 25
Syntactic diversity (% unique Push programs):	 0.522
Total error diversity:				 0.025
Error (vector) diversity:			 0.025
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 184000
Number of point (instruction) evaluations so far: 204852387
--- Timings ---
Current time: 1529615375394 milliseconds
Total Time:         520.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       269.2 seconds, 51.8%
Fitness Testing:    194.9 seconds, 37.5%
Report:              55.8 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 183
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 184
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 184
;;******************************
;; -*- Number IO problem report - generation 184
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_yank} {:instruction integer_pop} {:instruction float_dup} {:instruction tag_float_527} {:instruction float_mult} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_mult} {:instruction float_sub} {:instruction float_max} {:instruction integer_dec} {:instruction integer_yankdup} {:instruction tagged_739} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_tan} {:instruction integer_add} {:instruction float_mod} {:instruction print_integer})
Best program: (integer_yank integer_pop float_dup tag_float_527 float_mult in1 integer_fromfloat integer_mult float_sub float_max integer_dec integer_yankdup tagged_739 in1 integer_fromfloat in2 float_tan integer_add float_mod print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 20
Size: 21
Percent parens: 0.048
--- Population Statistics ---
Average total errors in population: 1707.2781927000044
Median total errors in population: 290.7912
Error averages by case: (57.872312999999934 11.216 58.632691999999416 12.123 56.566974100000365 11.224 57.37874280000102 11.126 57.07348360000041 11.198 55.69200869999883 11.955 57.8090102000003 11.047 56.70398889999935 11.131 56.59989370000064 11.119 54.82669550000047 11.122 55.91129949999904 11.152 55.71605940000067 11.123 58.42705899999902 11.194 55.27616369999947 11.05 55.96282599999901 11.22 59.54442479999919 11.269 57.43376640000059 11.187 55.281487499998775 11.118 58.53099399999864 11.217 55.703510399999196 11.243 56.350419599999334 11.216 58.70951800000043 11.279 58.514710000001045 11.235 58.47050830000102 11.241 56.21764359999934 12.067)
Error minima by case: (0.1443 11 0.4612 11 0.1077 6 0.5984 4 0.0567 11 0.3207 10 0.841 3 0.8843 10 0.7367 4 0.0876 4 0.2613 4 0.4263 3 0.8463 5 0.4747 3 0.3276 6 0.6614 6 0.3464 5 0.6044 4 0.6934 10 0.1971 6 0.3638 6 0.4726 6 0.781 11 0.8853 5 0.2388 11)
Average genome size in population (length): 17.871
Average program size in population (points): 18.871
Average percent parens in population: 0.060
Minimum age in population: 266.0296691427524
Maximum age in population: 270.2297435726292
Average age in population: 268.3315020393648
Median age in population: 268.3627586877844
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.5
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.5
Total error diversity:				 0.026
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 185000
Number of point (instruction) evaluations so far: 205299737
--- Timings ---
Current time: 1529615377484 milliseconds
Total Time:         522.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       270.5 seconds, 51.8%
Fitness Testing:    195.4 seconds, 37.4%
Report:              56.0 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 184
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 185
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 185
;;******************************
;; -*- Number IO problem report - generation 185
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_min} {:instruction integer_flush} {:instruction print_float} {:instruction integer_inc} {:instruction float_shove} {:instruction 92} {:instruction integer_inc} {:instruction float_max} {:instruction integer_flush} {:instruction float_dec} {:instruction float_dup} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_min integer_min integer_flush print_float integer_inc float_shove 92 integer_inc float_max integer_flush float_dec float_dup in1 integer_fromfloat in2 float_dup_times integer_add print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 18
Size: 19
Percent parens: 0.053
--- Population Statistics ---
Average total errors in population: 1344.2828054000042
Median total errors in population: 290.7912
Error averages by case: (42.16933319999994 11.163 42.9481487999999 12.082 43.144315000000276 11.178 43.462708800000456 11.103 39.75827740000032 11.146 42.39525099999939 11.949 43.90113000000027 11.035 43.06709319999988 11.099 42.69813100000057 11.087 41.6143056000004 11.096 42.05797369999922 11.115 42.17472020000056 11.1 42.79690719999961 11.149 41.337470999999546 11.04 42.55656479999954 11.178 43.945684399999706 11.215 41.68177279999999 11.147 42.0173887999995 11.088 42.763701599999315 11.163 41.47701889999972 11.203 42.90888239999944 11.175 43.1971344000003 11.224 42.76264400000046 11.184 43.563640800000826 11.204 42.71260639999945 12.047)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.5984 11 0.0567 10 0.3207 10 0.841 10 0.8843 11 0.7367 9 0.9124 11 0.2613 11 0.5737 11 0.8463 10 0.4747 9 0.3276 10 0.6614 11 0.3464 11 0.6044 10 0.6934 10 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 11)
Average genome size in population (length): 17.397
Average program size in population (points): 18.397
Average percent parens in population: 0.061
Minimum age in population: 267.3506624866792
Maximum age in population: 271.7503772423358
Average age in population: 269.8167641014018
Median age in population: 269.8127110457176
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 32
Genome diversity (% unique Plush genomes):	 0.48
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 32
Syntactic diversity (% unique Push programs):	 0.48
Total error diversity:				 0.021
Error (vector) diversity:			 0.021
Behavioral diversity:				 0.021
--- Run Statistics ---
Number of program evaluations used so far: 186000
Number of point (instruction) evaluations so far: 205735137
--- Timings ---
Current time: 1529615379533 milliseconds
Total Time:         524.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       271.9 seconds, 51.9%
Fitness Testing:    196.0 seconds, 37.4%
Report:              56.2 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 185
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 186
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 186
;;******************************
;; -*- Number IO problem report - generation 186
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_div} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction float_sub} {:instruction float_tan} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_dec} {:instruction print_integer})
Best program: (float_div integer_dup_items integer_swap float_sub float_tan in1 integer_fromfloat in2 float_dup_times integer_add float_dec print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 12
Size: 13
Percent parens: 0.077
--- Population Statistics ---
Average total errors in population: 1591.6667176000042
Median total errors in population: 290.7912
Error averages by case: (52.978745899999936 11.193 53.70707559999979 12.105 52.437819600000346 11.208 52.54426420000064 11.117 52.211540300000486 11.171 50.74163749999925 11.948 52.29854100000029 11.041 52.46058369999969 11.111 51.740015300000735 11.107 50.88493600000056 11.112 50.96386579999897 11.138 51.589586500000635 11.115 53.60229049999942 11.183 48.75317869999939 11.048 51.8990167999993 11.201 54.95240899999948 11.258 52.8413480000003 11.189 51.32182519999904 11.107 53.70107419999893 11.193 51.688881299999586 11.226 52.20349999999936 11.209 53.80193580000053 11.26 53.657053000000644 11.213 54.81621430000113 11.235 52.127379399999356 12.054)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 10 0.0567 10 0.3207 9 0.159 10 0.8843 10 0.2633 11 0.0876 10 0.2613 11 0.4263 10 0.8463 11 0.4747 9 0.3276 10 0.6614 11 0.3464 11 0.3956 10 0.3066 10 0.1971 10 0.3638 11 0.4726 11 0.219 11 0.8853 11 0.2388 11)
Average genome size in population (length): 17.576
Average program size in population (points): 18.576
Average percent parens in population: 0.061
Minimum age in population: 268.5772495340803
Maximum age in population: 273.2859222707786
Average age in population: 271.3653849330605
Median age in population: 271.4075611163816
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 36
Genome diversity (% unique Plush genomes):	 0.497
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 36
Syntactic diversity (% unique Push programs):	 0.497
Total error diversity:				 0.026
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 187000
Number of point (instruction) evaluations so far: 206174837
--- Timings ---
Current time: 1529615381789 milliseconds
Total Time:         526.3 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       273.3 seconds, 51.9%
Fitness Testing:    196.5 seconds, 37.3%
Report:              56.3 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 186
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 187
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 187
;;******************************
;; -*- Number IO problem report - generation 187
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction float_add} {:instruction tag_float_527} {:instruction integer_min} {:instruction float_swap} {:instruction 92} {:instruction integer_mod} {:instruction integer_inc} {:instruction integer_rot} {:instruction float_dup_times} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_shove} {:instruction tagged_641} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup} {:instruction integer_add} {:instruction float_sin} {:instruction print_integer})
Best program: (integer_min integer_div float_add tag_float_527 integer_min float_swap 92 integer_mod integer_inc integer_rot float_dup_times in1 integer_fromfloat integer_shove tagged_641 in1 integer_fromfloat in2 float_dup integer_add float_sin print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 22
Size: 23
Percent parens: 0.043
--- Population Statistics ---
Average total errors in population: 1541.9848015000043
Median total errors in population: 290.7912
Error averages by case: (49.52247749999994 11.188 50.55014879999979 12.099 50.97437640000033 11.21 51.65111840000056 11.114 48.01199390000043 11.165 50.81725099999912 11.947 51.93108400000027 11.051 50.91263039999977 11.107 50.75871080000068 11.102 48.88461960000052 11.117 49.205270299999036 11.14 50.07968840000061 11.111 50.33436829999946 11.182 48.596097499999445 11.055 50.46032319999933 11.202 51.8787159999995 11.256 49.69634800000006 11.179 50.07271839999931 11.106 50.68970159999904 11.192 50.28727399999957 11.238 50.76406159999939 11.21 50.44824400000044 11.261 50.59864400000064 11.214 52.073329000000996 11.239 51.044606399999395 12.056)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 11 0.0567 11 0.3207 9 0.159 10 0.1157 10 0.2633 11 0.0876 11 0.2613 11 0.4263 11 0.1537 11 0.4747 10 0.3276 11 0.3386 11 0.3464 11 0.3956 11 0.3066 11 0.1971 11 0.3638 11 0.4726 11 0.219 11 0.1147 10 0.2388 11)
Average genome size in population (length): 17.521
Average program size in population (points): 18.521
Average percent parens in population: 0.061
Minimum age in population: 269.5772495340803
Maximum age in population: 274.7474019807423
Average age in population: 272.8561153842219
Median age in population: 272.9218713988264
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 25
Genome diversity (% unique Plush genomes):	 0.5
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 25
Syntactic diversity (% unique Push programs):	 0.5
Total error diversity:				 0.018
Error (vector) diversity:			 0.018
Behavioral diversity:				 0.019
--- Run Statistics ---
Number of program evaluations used so far: 188000
Number of point (instruction) evaluations so far: 206613187
--- Timings ---
Current time: 1529615383948 milliseconds
Total Time:         528.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       274.7 seconds, 52.0%
Fitness Testing:    197.1 seconds, 37.3%
Report:              56.5 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 187
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 188
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 188
;;******************************
;; -*- Number IO problem report - generation 188
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_add} {:instruction tag_float_527} {:instruction integer_fromfloat} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction print_integer})
Best program: (float_add tag_float_527 integer_fromfloat integer_inc integer_min in1 integer_fromfloat in2 float_dup_times integer_add print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 11
Size: 12
Percent parens: 0.083
--- Population Statistics ---
Average total errors in population: 1695.1510845000043
Median total errors in population: 290.7912
Error averages by case: (56.45571559999994 11.239 57.38039039999935 12.123 57.399435600000345 11.255 56.81136520000101 11.127 55.14734960000056 11.205 55.54168799999864 11.925 56.51575920000029 11.04 57.33937729999932 11.132 55.18726340000078 11.124 54.019921900000604 11.126 55.608038199998916 11.159 55.319601300000635 11.129 58.01382749999895 11.204 52.991891399999375 11.052 56.18753279999882 11.246 60.37479499999897 11.299 56.678884000000735 11.203 55.04688309999857 11.127 56.409819399998554 11.233 55.93210169999916 11.281 56.77287299999936 11.252 58.80715500000054 11.304 56.865652000001084 11.257 58.89650830000112 11.284 57.06025559999937 12.061)
Error minima by case: (0.1443 11 0.4612 11 0.1077 3 0.5984 2 0.0567 11 0.3207 10 0.841 2 0.1157 10 0.7367 2 0.0876 2 0.2613 2 0.4263 1 0.1537 2 0.4747 2 0.3276 3 0.3386 2 0.3464 2 0.3956 2 0.6934 11 0.1971 3 0.3638 3 0.4726 2 0.781 11 0.1147 2 0.2388 11)
Average genome size in population (length): 17.644
Average program size in population (points): 18.644
Average percent parens in population: 0.062
Minimum age in population: 271.5499947431498
Maximum age in population: 276.0451079020778
Average age in population: 274.313050094028
Median age in population: 274.3315911670712
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 23
Genome diversity (% unique Plush genomes):	 0.524
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 23
Syntactic diversity (% unique Push programs):	 0.524
Total error diversity:				 0.032
Error (vector) diversity:			 0.032
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 189000
Number of point (instruction) evaluations so far: 207054512
--- Timings ---
Current time: 1529615385967 milliseconds
Total Time:         530.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       276.0 seconds, 52.0%
Fitness Testing:    197.6 seconds, 37.3%
Report:              56.8 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 188
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 189
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 189
;;******************************
;; -*- Number IO problem report - generation 189
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction integer_rot} {:instruction float_dec} {:instruction integer_min} {:instruction float_add} {:instruction tag_float_527} {:instruction float_sin} {:instruction float_tan} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_pop} {:instruction integer_add} {:instruction float_dec} {:instruction 92} {:instruction integer_inc} {:instruction integer_yank} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_sin} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_min integer_div integer_rot float_dec integer_min float_add tag_float_527 float_sin float_tan integer_fromfloat in2 float_pop integer_add float_dec 92 integer_inc integer_yank in1 integer_fromfloat in2 float_sin integer_add print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 23
Size: 24
Percent parens: 0.042
--- Population Statistics ---
Average total errors in population: 1793.0356020000047
Median total errors in population: 290.7912
Error averages by case: (59.26616869999994 11.213 60.356847199999585 12.114 62.11405330000041 11.236 61.10054400000091 11.127 57.35925680000063 11.189 58.94711979999866 11.949 60.354310000000304 11.052 61.48148159999948 11.129 59.9816603000009 11.115 59.99005760000068 11.129 59.62596379999875 11.154 60.902672500000705 11.125 60.357444199999186 11.202 57.38297699999926 11.053 61.47934039999887 11.227 61.98374759999914 11.281 59.75453760000049 11.195 61.003278799998554 11.116 59.81930059999859 11.218 61.35450009999925 11.262 61.80924259999929 11.233 60.49440840000062 11.291 60.0093670000009 11.232 62.466820100001264 11.258 61.481501999999296 12.059)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 11 0.0567 10 0.3207 9 0.159 10 0.1157 10 0.2633 9 0.0876 10 0.2613 11 0.4263 10 0.1537 11 0.4747 10 0.3276 10 0.3386 11 0.3464 11 0.3956 10 0.3066 11 0.1971 11 0.3638 11 0.4726 11 0.219 11 0.1147 11 0.2388 11)
Average genome size in population (length): 17.439
Average program size in population (points): 18.439
Average percent parens in population: 0.062
Minimum age in population: 272.8470130501095
Maximum age in population: 277.7271644792658
Average age in population: 275.7656284336372
Median age in population: 275.8249155737664
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.505
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.505
Total error diversity:				 0.026
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 190000
Number of point (instruction) evaluations so far: 207490787
--- Timings ---
Current time: 1529615388089 milliseconds
Total Time:         532.6 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       277.4 seconds, 52.1%
Fitness Testing:    198.2 seconds, 37.2%
Report:              56.9 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 189
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 190
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 190
;;******************************
;; -*- Number IO problem report - generation 190
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction print_float} {:instruction float_stackdepth} {:instruction float_pop} {:instruction integer_inc} {:instruction float_yankdup} {:instruction integer_inc} {:instruction integer_mult} {:instruction float_flush} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_min print_float float_stackdepth float_pop integer_inc float_yankdup integer_inc integer_mult float_flush 92 integer_inc integer_min in1 integer_fromfloat in2 float_dup_times integer_add print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 18
Size: 19
Percent parens: 0.053
--- Population Statistics ---
Average total errors in population: 1659.5112397000044
Median total errors in population: 290.7912
Error averages by case: (55.43316869999994 11.211 56.1272307999994 12.121 54.96435810000032 11.21 55.28507540000095 11.131 53.63459700000055 11.191 54.582316799998594 11.957 55.849972000000285 11.053 55.22593079999936 11.122 54.75833180000081 11.119 53.88919880000065 11.121 54.43038839999895 11.143 54.378865400000606 11.133 56.10829049999904 11.198 53.57790639999934 11.053 54.53268919999879 11.219 57.45140899999904 11.274 55.06334800000075 11.199 54.11622079999856 11.119 55.88430059999854 11.202 53.436881299999165 11.229 54.83013619999939 11.209 56.48488100000056 11.282 55.92192900000102 11.225 56.63867310000112 11.243 54.87814059999939 12.063)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 11 0.0567 11 0.3207 9 0.159 10 0.8843 10 0.7367 11 0.9124 10 0.2613 10 0.5737 11 0.8463 11 0.4747 9 0.3276 11 0.6614 11 0.3464 11 0.6044 10 0.6934 10 0.1971 10 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 11)
Average genome size in population (length): 17.228
Average program size in population (points): 18.228
Average percent parens in population: 0.062
Minimum age in population: 274.1705114302846
Maximum age in population: 279.2149163030315
Average age in population: 277.2883111582326
Median age in population: 277.3127346395316
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 29
Genome diversity (% unique Plush genomes):	 0.513
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 29
Syntactic diversity (% unique Push programs):	 0.513
Total error diversity:				 0.021
Error (vector) diversity:			 0.021
Behavioral diversity:				 0.021
--- Run Statistics ---
Number of program evaluations used so far: 191000
Number of point (instruction) evaluations so far: 207921837
--- Timings ---
Current time: 1529615390240 milliseconds
Total Time:         534.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       278.8 seconds, 52.1%
Fitness Testing:    198.7 seconds, 37.2%
Report:              57.1 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 190
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 191
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 191
;;******************************
;; -*- Number IO problem report - generation 191
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction integer_div} {:instruction float_add} {:instruction tag_float_527} {:instruction integer_yankdup} {:instruction tag_float_451} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_min integer_div float_add tag_float_527 integer_yankdup tag_float_451 integer_min in1 integer_fromfloat in2 float_dup_times integer_add print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 13
Size: 14
Percent parens: 0.071
--- Population Statistics ---
Average total errors in population: 1881.0500366000044
Median total errors in population: 290.7912
Error averages by case: (64.00344719999994 11.234 64.71392479999962 12.128 64.93016100000038 11.241 64.60693760000079 11.127 63.24225680000066 11.202 62.13432679999887 11.955 64.24267400000029 11.053 63.535944399999785 11.136 63.69987040000094 11.123 62.75140800000073 11.132 62.85300899999877 11.155 63.06995140000066 11.127 64.79405899999924 11.21 60.658875799999215 11.051 63.97835759999912 11.232 66.70210199999906 11.304 64.04123040000047 11.211 63.35746559999885 11.124 64.63922039999859 11.228 63.88730299999957 11.267 64.37187879999932 11.242 65.09051800000067 11.309 64.61058600000085 11.254 65.51878780000129 11.278 63.22274079999934 12.07)
Error minima by case: (0.1443 11 0.4612 11 0.1077 6 0.4016 4 0.0567 10 0.3207 10 0.159 3 0.8843 11 0.2633 4 0.0876 4 0.2613 4 0.4263 3 0.8463 5 0.4747 3 0.3276 6 0.6614 6 0.3464 5 0.3956 4 0.3066 11 0.1971 6 0.3638 6 0.4726 6 0.219 11 0.8853 5 0.2388 11)
Average genome size in population (length): 17.744
Average program size in population (points): 18.744
Average percent parens in population: 0.061
Minimum age in population: 275.9975843281919
Maximum age in population: 280.6339342563615
Average age in population: 278.7962217868009
Median age in population: 278.846340532942
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.525
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.525
Total error diversity:				 0.023
Error (vector) diversity:			 0.023
Behavioral diversity:				 0.024
--- Run Statistics ---
Number of program evaluations used so far: 192000
Number of point (instruction) evaluations so far: 208365637
--- Timings ---
Current time: 1529615392381 milliseconds
Total Time:         537.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       280.2 seconds, 52.2%
Fitness Testing:    199.3 seconds, 37.1%
Report:              57.3 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 191
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 192
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 192
;;******************************
;; -*- Number IO problem report - generation 192
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_div} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction float_div} {:instruction integer_dup_items} {:instruction integer_swap} {:instruction float_sub} {:instruction float_swap} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction float_dup_times} {:instruction tag_integer_484} {:instruction float_swap} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction float_pop} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (float_div integer_dup_items integer_swap float_div integer_dup_items integer_swap float_sub float_swap tag_float_527 float_pop in2 float_dup_times tag_integer_484 float_swap tag_float_527 float_pop in2 in1 integer_fromfloat float_pop float_dup_times integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 1925.8217739000042
Median total errors in population: 290.7912
Error averages by case: (66.40088009999994 11.239 67.5953859999993 12.137 66.38649790000034 11.254 66.56964880000145 11.124 64.15097330000063 11.212 64.14870609999815 11.944 66.64826350000031 11.049 64.94389649999894 11.14 65.68950790000085 11.117 62.24503480000065 11.135 62.51584349999886 11.161 64.25777630000067 11.12 67.52221269999869 11.211 61.88548839999923 11.044 65.3040919999983 11.239 69.3421177999986 11.303 66.57319120000108 11.207 64.5065396999981 11.117 67.61152699999835 11.235 65.21149659999872 11.287 65.70916879999938 11.247 67.7921002000002 11.308 67.55680500000152 11.261 67.88804950000083 11.277 64.92157029999935 12.077)
Error minima by case: (0.1443 11 0.4612 11 0.1077 5 0.4016 4 0.0567 10 0.3207 9 0.159 3 0.8843 10 0.2633 4 0.0876 4 0.2613 4 0.4263 3 0.8463 5 0.4747 3 0.3276 5 0.6614 5 0.3464 5 0.3956 4 0.3066 11 0.1971 5 0.3638 5 0.4726 5 0.219 11 0.8853 4 0.2388 11)
Average genome size in population (length): 17.396
Average program size in population (points): 18.396
Average percent parens in population: 0.062
Minimum age in population: 276.9975843281919
Maximum age in population: 282.2339377104821
Average age in population: 280.2189458250926
Median age in population: 280.2824264917235
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 15
Genome diversity (% unique Plush genomes):	 0.527
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 15
Syntactic diversity (% unique Push programs):	 0.527
Total error diversity:				 0.024
Error (vector) diversity:			 0.024
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 193000
Number of point (instruction) evaluations so far: 208800762
--- Timings ---
Current time: 1529615394486 milliseconds
Total Time:         539.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       281.6 seconds, 52.2%
Fitness Testing:    199.8 seconds, 37.1%
Report:              57.5 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 192
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 193
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 193
;;******************************
;; -*- Number IO problem report - generation 193
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_tan} {:instruction integer_dec} {:instruction in2} {:instruction integer_max} {:instruction integer_mult} {:instruction in2} {:instruction integer_dup_times} {:instruction integer_stackdepth} {:instruction float_dup_items} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_mod} {:instruction print_integer})
Best program: (float_tan integer_dec in2 integer_max integer_mult in2 integer_dup_times integer_stackdepth float_dup_items integer_min in1 integer_fromfloat in2 float_dup_times integer_add float_mod print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 17
Size: 18
Percent parens: 0.056
--- Population Statistics ---
Average total errors in population: 1465.430331800004
Median total errors in population: 290.7912
Error averages by case: (47.28106479999994 11.18 48.535760799999665 12.093 47.86780720000037 11.182 49.76729920000076 11.1 44.871731000000445 11.151 46.44289239999893 11.947 49.9378580000003 11.038 47.124630399999624 11.107 48.702024600000705 11.092 44.081356800000464 11.097 44.691054199999044 11.11 46.339835800000664 11.087 48.212829399999265 11.16 45.65321799999944 11.043 47.03397839999915 11.178 49.73007039999943 11.234 47.29800160000042 11.158 46.2701359999989 11.087 48.63202239999886 11.172 46.86466819999937 11.209 47.43978919999934 11.181 48.43235360000043 11.233 48.518454000000816 11.2 47.58141140000105 11.205 46.82308399999934 12.053)
Error minima by case: (0.1443 11 0.4612 11 0.1077 3 0.5984 5 0.0567 11 0.3207 9 0.841 5 0.8843 11 0.7367 5 0.9124 2 0.2613 2 0.5737 1 0.8463 5 0.4747 5 0.3276 3 0.6614 5 0.3464 5 0.6044 2 0.6934 11 0.1971 3 0.3638 3 0.4726 5 0.781 11 0.8853 2 0.2388 11)
Average genome size in population (length): 16.888
Average program size in population (points): 17.888
Average percent parens in population: 0.064
Minimum age in population: 278.7778461472812
Maximum age in population: 283.5186722726953
Average age in population: 281.6947888721359
Median age in population: 281.7239837387425
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.49
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.49
Total error diversity:				 0.02
Error (vector) diversity:			 0.02
Behavioral diversity:				 0.021
--- Run Statistics ---
Number of program evaluations used so far: 194000
Number of point (instruction) evaluations so far: 209223137
--- Timings ---
Current time: 1529615396555 milliseconds
Total Time:         541.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       282.9 seconds, 52.3%
Fitness Testing:    200.4 seconds, 37.0%
Report:              57.7 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 193
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 194
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 194
;;******************************
;; -*- Number IO problem report - generation 194
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction print_integer} {:instruction integer_div} {:instruction tagged_435} {:instruction integer_swap} {:instruction in2} {:instruction float_min} {:instruction tag_integer_484} {:instruction integer_yankdup} {:instruction tag_float_527} {:instruction tag_integer_484} {:instruction integer_inc} {:instruction integer_dup} {:instruction tag_float_527} {:instruction tag_float_370} {:instruction in2} {:instruction in1} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction tag_float_36} {:instruction integer_add} {:instruction print_integer})
Best program: (print_integer integer_div tagged_435 integer_swap in2 float_min tag_integer_484 integer_yankdup tag_float_527 tag_integer_484 integer_inc integer_dup tag_float_527 tag_float_370 in2 in1 in1 integer_fromfloat in2 float_dup_times integer_add tag_float_36 integer_add print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 24
Size: 25
Percent parens: 0.040
--- Population Statistics ---
Average total errors in population: 1464.725599300004
Median total errors in population: 290.7912
Error averages by case: (46.563601599999934 11.181 47.28461439999968 12.1 47.948484100000364 11.189 47.604528000000705 11.114 45.73148360000062 11.167 47.51289239999874 11.951 47.97487900000029 11.042 48.21567169999961 11.107 46.935764000000866 11.1 46.90014520000071 11.106 47.44579289999881 11.127 47.361672500000665 11.114 47.221214599999314 11.171 45.58624929999925 11.044 47.534685199999 11.193 48.56436159999926 11.245 46.152387200000376 11.173 47.10890519999877 11.11 47.02838079999873 11.178 47.300288499999446 11.207 47.84424259999934 11.191 47.62518920000061 11.249 47.060272000000786 11.199 48.82352610000123 11.226 47.86136759999934 12.051)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 10 0.0567 11 0.3207 10 0.159 10 0.8843 10 0.2633 11 0.0876 9 0.2613 11 0.4263 11 0.8463 11 0.4747 10 0.3276 11 0.6614 11 0.3464 11 0.3956 11 0.3066 10 0.1971 11 0.3638 11 0.4726 11 0.219 11 0.8853 11 0.2388 11)
Average genome size in population (length): 16.767
Average program size in population (points): 17.767
Average percent parens in population: 0.066
Minimum age in population: 279.9588169651212
Maximum age in population: 285.2519597394602
Average age in population: 283.1705257497557
Median age in population: 283.2210141322314
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.493
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.493
Total error diversity:				 0.022
Error (vector) diversity:			 0.022
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 195000
Number of point (instruction) evaluations so far: 209642562
--- Timings ---
Current time: 1529615398913 milliseconds
Total Time:         543.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       284.4 seconds, 52.3%
Fitness Testing:    201.0 seconds, 37.0%
Report:              57.9 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 194
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 195
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 195
;;******************************
;; -*- Number IO problem report - generation 195
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_rot} {:instruction float_add} {:instruction integer_dup_times} {:instruction integer_flush} {:instruction float_max} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction in2} {:instruction float_dup} {:instruction float_div} {:instruction integer_div} {:instruction tagged_573} {:instruction float_swap} {:instruction float_mod} {:instruction float_dup} {:instruction integer_shove} {:instruction float_dup} {:instruction float_flush} {:instruction integer_dup_times} {:instruction in2} {:instruction integer_inc} {:instruction integer_dup_items} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction float_cos} {:instruction print_integer})
Best program: (float_rot float_add integer_dup_times integer_flush float_max in1 integer_fromfloat in2 float_dup_times in2 float_dup float_div integer_div tagged_573 float_swap float_mod float_dup integer_shove float_dup float_flush integer_dup_times in2 integer_inc integer_dup_items integer_min in1 integer_fromfloat in2 integer_add float_cos print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 31
Size: 32
Percent parens: 0.031
--- Population Statistics ---
Average total errors in population: 1897.7658629000045
Median total errors in population: 290.7912
Error averages by case: (63.207437099999936 11.238 64.1156963999993 12.133 66.04183790000036 11.253 64.83796160000115 11.144 62.218859900000595 11.217 65.5535920999984 11.954 65.39805900000029 11.055 66.00198569999935 11.147 63.93229330000084 11.13 64.60432040000074 11.143 64.25148639999873 11.171 65.1553777000007 11.146 63.69821269999887 11.22 62.332755299999256 11.064 65.49737479999862 11.257 65.0144405999989 11.305 62.65042000000081 11.208 64.99444359999833 11.135 63.987979799998335 11.239 65.29110589999905 11.279 65.83078739999935 11.247 64.10704540000057 11.318 63.92255700000119 11.265 66.63719650000095 11.279 65.85963639999935 12.076)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.5984 10 0.0567 11 0.3207 10 0.841 10 0.8843 11 0.7367 11 0.9124 10 0.2613 11 0.5737 11 0.8463 11 0.4747 10 0.3276 11 0.6614 11 0.3464 10 0.6044 10 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 11)
Average genome size in population (length): 16.671
Average program size in population (points): 17.671
Average percent parens in population: 0.065
Minimum age in population: 282.0949360374291
Maximum age in population: 286.7856494017981
Average age in population: 284.6226418959228
Median age in population: 284.6511169904878
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.508
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.508
Total error diversity:				 0.017
Error (vector) diversity:			 0.017
Behavioral diversity:				 0.018
--- Run Statistics ---
Number of program evaluations used so far: 196000
Number of point (instruction) evaluations so far: 210059662
--- Timings ---
Current time: 1529615401304 milliseconds
Total Time:         545.7 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       285.8 seconds, 52.4%
Fitness Testing:    201.6 seconds, 36.9%
Report:              58.2 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 195
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 196
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 196
;;******************************
;; -*- Number IO problem report - generation 196
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction float_shove} {:instruction tag_float_527} {:instruction float_pop} {:instruction in2} {:instruction in1} {:instruction integer_fromfloat} {:instruction integer_swap} {:instruction float_dup_times} {:instruction integer_add} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction integer_add} {:instruction float_dec} {:instruction print_integer})
Best program: (float_shove tag_float_527 float_pop in2 in1 integer_fromfloat integer_swap float_dup_times integer_add in1 integer_fromfloat in2 integer_add float_dec print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 15
Size: 16
Percent parens: 0.063
--- Population Statistics ---
Average total errors in population: 1622.381906400004
Median total errors in population: 290.7912
Error averages by case: (53.109900299999936 11.202 53.81776519999968 12.112 54.05948410000028 11.219 54.32732320000063 11.118 51.46405060000039 11.176 53.84557169999912 11.952 54.817243000000246 11.053 53.79628329999966 11.116 53.76750070000063 11.109 52.89679480000046 11.125 52.95427029999922 11.144 53.10281990000049 11.118 53.829675699999385 11.19 52.63019869999953 11.055 53.49199559999921 11.214 55.368054599999496 11.268 53.166348000000454 11.189 53.13769639999913 11.118 53.80762139999903 11.199 52.48127399999949 11.247 53.784425399999506 11.218 53.994771400000374 11.273 53.792301000000705 11.217 55.06321430000085 11.248 53.93732279999947 12.058)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 11 0.0567 11 0.3207 10 0.159 10 0.8843 10 0.2633 10 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 10 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.3066 11 0.1971 11 0.3638 11 0.4726 11 0.219 11 0.8853 11 0.2388 10)
Average genome size in population (length): 16.794
Average program size in population (points): 17.794
Average percent parens in population: 0.064
Minimum age in population: 283.1083236988931
Maximum age in population: 288.09230319279
Average age in population: 286.1063841737196
Median age in population: 286.1191135900903
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 17
Genome diversity (% unique Plush genomes):	 0.484
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 17
Syntactic diversity (% unique Push programs):	 0.484
Total error diversity:				 0.018
Error (vector) diversity:			 0.018
Behavioral diversity:				 0.018
--- Run Statistics ---
Number of program evaluations used so far: 197000
Number of point (instruction) evaluations so far: 210479912
--- Timings ---
Current time: 1529615403417 milliseconds
Total Time:         548.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       287.2 seconds, 52.4%
Fitness Testing:    202.2 seconds, 36.9%
Report:              58.5 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 196
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 197
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 197
;;******************************
;; -*- Number IO problem report - generation 197
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_swap} {:instruction float_max} {:instruction float_sin} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup} {:instruction integer_add} {:instruction integer_add} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction float_dec} {:instruction print_integer})
Best program: (integer_min float_swap float_max float_sin in1 integer_fromfloat in2 float_dup integer_add integer_add in1 integer_fromfloat in2 float_dup_times integer_add float_dec print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 17
Size: 18
Percent parens: 0.056
--- Population Statistics ---
Average total errors in population: 1839.0347826000043
Median total errors in population: 290.7912
Error averages by case: (62.52286999999994 11.236 63.268079999998896 12.137 62.2320395000004 11.241 62.537076600001456 11.137 60.02703000000072 11.209 62.196803299997946 11.946 63.2484624000003 11.056 62.03941309999892 11.124 62.05648800000096 11.128 60.95626820000078 11.135 61.2296293999987 11.163 61.2937719000007 11.134 63.15136639999846 11.221 60.80942609999915 11.059 61.6126878999982 11.244 64.99977919999843 11.312 62.41023040000117 11.217 61.05195619999791 11.128 63.092059999997836 11.233 60.50158159999866 11.266 61.993883199999296 11.243 63.44757280000069 11.32 63.094900000001594 11.255 64.46570540000134 11.284 62.3017009999993 12.066)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 11 0.0567 11 0.3207 10 0.841 10 0.8843 7 0.7367 9 0.9124 10 0.2613 11 0.5737 10 0.8463 11 0.4747 10 0.3276 11 0.6614 11 0.3464 11 0.6044 10 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 11)
Average genome size in population (length): 16.385
Average program size in population (points): 17.385
Average percent parens in population: 0.065
Minimum age in population: 284.9916644076858
Maximum age in population: 289.6924974921449
Average age in population: 287.5573911619512
Median age in population: 287.6136634123415
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 18
Genome diversity (% unique Plush genomes):	 0.493
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 18
Syntactic diversity (% unique Push programs):	 0.493
Total error diversity:				 0.021
Error (vector) diversity:			 0.021
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 198000
Number of point (instruction) evaluations so far: 210890037
--- Timings ---
Current time: 1529615405558 milliseconds
Total Time:         550.1 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       288.6 seconds, 52.5%
Fitness Testing:    202.7 seconds, 36.8%
Report:              58.7 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 197
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 198
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 198
;;******************************
;; -*- Number IO problem report - generation 198
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_add} {:instruction integer_add} {:instruction float_div} {:instruction integer_flush} {:instruction integer_inc} {:instruction integer_mult} {:instruction float_flush} {:instruction 92} {:instruction integer_inc} {:instruction integer_min} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup_times} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_add integer_add float_div integer_flush integer_inc integer_mult float_flush 92 integer_inc integer_min in1 integer_fromfloat in2 float_dup_times integer_add print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 16
Size: 17
Percent parens: 0.059
--- Population Statistics ---
Average total errors in population: 1484.953410400004
Median total errors in population: 290.7912
Error averages by case: (48.763766099999934 11.179 49.497532399999734 12.095 47.859914900000305 11.173 48.085716800000355 11.092 47.02650420000043 11.156 47.38236469999928 11.961 48.63528900000025 11.028 48.411440299999875 11.109 47.46892090000062 11.083 46.573094000000474 11.089 47.616838099999136 11.114 47.37455690000055 11.089 49.33029049999955 11.151 46.185996299999495 11.031 47.44996119999944 11.171 50.33740899999949 11.217 48.32288400000021 11.149 46.8673227999994 11.086 49.435168599999066 11.18 46.277062399999764 11.192 47.80188059999945 11.176 49.60988100000044 11.224 49.41654900000053 11.195 50.14313190000093 11.194 47.89093479999946 12.055)
Error minima by case: (0.1443 11 0.4612 11 0.1077 6 0.4016 4 0.0567 10 0.3207 10 0.841 3 0.1157 10 0.7367 4 0.9124 4 0.2613 4 0.5737 3 0.1537 5 0.4747 3 0.3276 6 0.3386 6 0.3464 5 0.6044 4 0.6934 11 0.1971 6 0.3638 6 0.4726 6 0.781 11 0.1147 5 0.2388 11)
Average genome size in population (length): 16.431
Average program size in population (points): 17.431
Average percent parens in population: 0.065
Minimum age in population: 286.4149025671753
Maximum age in population: 290.992166985235
Average age in population: 289.0247518049439
Median age in population: 289.088089800453
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 22
Genome diversity (% unique Plush genomes):	 0.482
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 22
Syntactic diversity (% unique Push programs):	 0.482
Total error diversity:				 0.023
Error (vector) diversity:			 0.023
Behavioral diversity:				 0.023
--- Run Statistics ---
Number of program evaluations used so far: 199000
Number of point (instruction) evaluations so far: 211301337
--- Timings ---
Current time: 1529615407621 milliseconds
Total Time:         552.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       290.0 seconds, 52.5%
Fitness Testing:    203.2 seconds, 36.8%
Report:              58.8 seconds, 10.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 198
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 199
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 199
;;******************************
;; -*- Number IO problem report - generation 199
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_tan} {:instruction integer_add} {:instruction print_integer})
Best program: (in1 integer_fromfloat in2 float_tan integer_add print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 6
Size: 7
Percent parens: 0.143
--- Population Statistics ---
Average total errors in population: 1435.5331198000042
Median total errors in population: 290.7912
Error averages by case: (45.91031299999994 11.193 46.68669199999988 12.109 47.17953040000032 11.209 46.53613440000029 11.101 44.14242690000047 11.169 45.51711979999934 11.953 46.87235600000027 11.041 46.3021758 11.115 45.691817200000706 11.092 44.85713040000056 11.103 45.55175759999903 11.137 45.573720200000594 11.105 46.70037019999955 11.172 44.32877459999942 11.038 46.2985647999995 11.208 48.72597559999952 11.244 45.91377280000008 11.158 45.49355359999929 11.09 46.637380799999136 11.195 45.25304789999979 11.239 46.722882399999406 11.198 46.990860400000464 11.258 46.59327200000053 11.217 47.48970540000101 11.228 45.92578559999943 12.066)
Error minima by case: (0.1443 11 0.4612 11 0.1077 6 0.4016 4 0.0567 11 0.3207 10 0.159 3 0.8843 10 0.2633 4 0.0876 4 0.2613 4 0.4263 3 0.8463 5 0.4747 3 0.3276 6 0.6614 6 0.3464 5 0.3956 4 0.3066 11 0.1971 6 0.3638 6 0.4726 6 0.219 11 0.8853 5 0.2388 11)
Average genome size in population (length): 16.54
Average program size in population (points): 17.54
Average percent parens in population: 0.064
Minimum age in population: 287.5922636024973
Maximum age in population: 292.5114083665545
Average age in population: 290.5013098288202
Median age in population: 290.5315248841034
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 24
Genome diversity (% unique Plush genomes):	 0.477
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 24
Syntactic diversity (% unique Push programs):	 0.477
Total error diversity:				 0.021
Error (vector) diversity:			 0.021
Behavioral diversity:				 0.021
--- Run Statistics ---
Number of program evaluations used so far: 200000
Number of point (instruction) evaluations so far: 211715362
--- Timings ---
Current time: 1529615409746 milliseconds
Total Time:         554.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       291.4 seconds, 52.6%
Fitness Testing:    203.8 seconds, 36.8%
Report:              59.0 seconds, 10.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 199
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 200
Computing errors... Done computing errors.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 200
;;******************************
;; -*- Number IO problem report - generation 200
Test total error for best: 11476.428700000008
Test mean error for best: 5.73821
;;------------------------------
Outputs of best individual on training cases:
Correct output: -52.8557243063 | Program output: -53           
Correct output: -46.5388439821 | Program output: -47           
Correct output: 183.1076678776 | Program output: 183           
Correct output: 59.5983956317  | Program output: 59            
Correct output: -40.9433158552 | Program output: -41           
Correct output: 0.6792530208   | Program output: 1             
Correct output: 2.8409776764   | Program output: 2             
Correct output: 87.1156693118  | Program output: 88            
Correct output: 12.7367383479  | Program output: 12            
Correct output: 34.9123643533  | Program output: 34            
Correct output: 98.2612616006  | Program output: 98            
Correct output: 86.5736990631  | Program output: 86            
Correct output: -79.8463167321 | Program output: -79           
Correct output: 2.4746909642   | Program output: 2             
Correct output: 132.3276241331 | Program output: 132           
Correct output: -171.6614203645 | Program output: -171          
Correct output: -58.3463633692 | Program output: -58           
Correct output: 80.6043645122  | Program output: 80            
Correct output: -10.3066391796 | Program output: -11           
Correct output: 130.1971143918 | Program output: 130           
Correct output: 150.3637736344 | Program output: 150           
Correct output: -111.4726490012 | Program output: -111          
Correct output: -20.2189788792 | Program output: -21           
Correct output: -40.8852589809 | Program output: -40           
Correct output: 32.7611922962  | Program output: 33            
;;******************************
--- Best Program (based on total-error) Statistics ---
Best genome: ({:instruction integer_min} {:instruction float_max} {:instruction float_sin} {:instruction in1} {:instruction integer_fromfloat} {:instruction in2} {:instruction float_dup} {:instruction integer_add} {:instruction integer_add} {:instruction print_integer})
Best program: (integer_min float_max float_sin in1 integer_fromfloat in2 float_dup integer_add integer_add print_integer)
Errors: [0.1443 11 0.4612 12 0.1077 11 0.5984 11 0.0567 11 0.3207 12 0.841 11 0.8843 11 0.7367 11 0.9124 11 0.2613 11 0.5737 11 0.8463 11 0.4747 11 0.3276 11 0.6614 11 0.3464 11 0.6044 11 0.6934 11 0.1971 11 0.3638 11 0.4726 11 0.781 11 0.8853 11 0.2388 12]
Total: 290.7912
Mean: 5.815824
Genome size: 10
Size: 11
Percent parens: 0.091
--- Population Statistics ---
Average total errors in population: 1546.4766016000044
Median total errors in population: 290.7912
Error averages by case: (50.95089019999994 11.196 51.81007559999958 12.107 50.3192687000003 11.209 51.32092160000073 11.116 49.506370200000575 11.176 49.935930299998915 11.946 51.6400380000003 11.051 50.11951469999956 11.108 50.646290600000825 11.115 48.13905760000063 11.117 48.55900899999894 11.138 49.344672500000605 11.116 51.99482939999927 11.19 48.707249299999305 11.057 49.70899559999906 11.206 53.764731799999225 11.263 51.10738720000052 11.19 49.204696399998866 11.112 51.643074199998765 11.198 49.55807689999948 11.229 50.07269779999939 11.211 52.327826200000544 11.266 51.675053000000815 11.213 52.46209960000111 11.232 50.14384519999939 12.052)
Error minima by case: (0.1443 11 0.4612 11 0.1077 11 0.4016 10 0.0567 11 0.3207 10 0.159 10 0.1157 10 0.2633 11 0.0876 11 0.2613 11 0.4263 11 0.1537 11 0.4747 10 0.3276 11 0.3386 11 0.3464 11 0.3956 11 0.3066 11 0.1971 11 0.3638 11 0.4726 11 0.219 10 0.1147 10 0.2388 11)
Average genome size in population (length): 16.462
Average program size in population (points): 17.462
Average percent parens in population: 0.065
Minimum age in population: 288.9237150411163
Maximum age in population: 294.0215847292933
Average age in population: 291.9738040761762
Median age in population: 292.0224793711086
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one Plush genome: 1
Median copy number of one Plush genome: 1
Max copy number of one Plush genome: 24
Genome diversity (% unique Plush genomes):	 0.462
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 24
Syntactic diversity (% unique Push programs):	 0.462
Total error diversity:				 0.026
Error (vector) diversity:			 0.026
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 201000
Number of point (instruction) evaluations so far: 212127403
--- Timings ---
Current time: 1529615411826 milliseconds
Total Time:         556.4 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       292.8 seconds, 52.6%
Fitness Testing:    204.4 seconds, 36.7%
Report:              59.1 seconds, 10.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 200
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

FAILURE
