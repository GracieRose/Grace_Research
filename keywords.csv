Count/Number Of,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
exec_eq,integer_swap,integer_gte,boolean_shove,boolean_and,string_pop,string_rot,string_parse_to_chars,integer_lt,string_stackdepth,integer_dup_times,char_iswhitespace,string_removechar,string_first,string_yank,string_concat,string_setchar,string_length,integer_eq,string_reverse,exec_s_when_autoconstructing,exec_yankdup,char_isletter,string_empty,char_isdigit,char_stackdepth,exec_when,string_conjchar,boolean_or,boolean_empty,string_dup_items,string_fromchar,exec_do*while,integer_rot,string_rest,char_allfromstring,exec_stackdepth,exec_do*range,char_shove,integer_dup_items,boolean_dup_items,exec_shove,boolean_xor,boolean_yankdup,integer_min,exec_yank,integer_mod,print_integer,string_replace,integer_div,string_replacefirst,boolean_frominteger,integer_flush,string_yankdup,exec_y_when_autoconstructing,integer_yank,string_emptystring,string_swap,integer_max,char_swap,string_contains,char_empty,exec_dup,exec_k,exec_noop,boolean_dup_times,exec_s,exec_y,boolean_rot,char_dup_items,integer_yankdup,string_replacechar,string_fromboolean,integer_mult,string_replacefirstchar,string_substring,boolean_stackdepth,string_shove,string_containschar,char_yankdup,char_yank,exec_do*times,integer_shove,string_flush,char_frominteger,boolean_dup,string_eq,boolean_not,char_eq,integer_dup,boolean_flush,boolean_pop,string_butlast,exec_swap,boolean_swap,integer_add,exec_flush,print_newline,char_dup_times,string_dup,string_frominteger,exec_dup_times,integer_fromchar,integer_inc,boolean_invert_first_then_and,integer_fromstring,exec_rot,char_rot,string_take,exec_string_iterate,string_split,integer_pop,exec_pop,print_char,exec_do*count,boolean_invert_second_then_and,integer_sub,string_nth,boolean_yank,integer_stackdepth,integer_dec,integer_gt,string_indexofchar,in1,char_dup,char_flush,char_pop,integer_lte,boolean_eq,exec_if,print_boolean,exec_k_when_autoconstructing,exec_empty,string_last,string_dup_times,print_string,exec_dup_items,string_occurrencesofchar,exec_while,integer_fromboolean,integer_empty,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
0.082728592,0.020319303,0.023222061,0.02467344,0.040638607,0.03628447,0.021770682,0.107402032,0.01161103,0.169811321,0.02467344,0.095791001,0.502177068,0.087082729,0.037735849,0.126269956,0.026124819,0.447024673,0.020319303,0.033381713,0.007256894,0.042089985,0.071117562,0.098693759,0.081277213,0.319303338,0.04934688,0.063860668,0.039187228,0.079825835,0.059506531,0.12191582,0.063860668,0.018867925,0.031930334,0.198838897,0.127721335,0.03628447,0.034833091,0.026124819,0.071117562,0.055152395,0.031930334,0.02467344,0.01161103,0.027576197,0.017416546,0.393323657,0.052249637,0.018867925,0.021770682,0.027576197,0.017416546,0.033381713,0.01161103,0.02467344,0.078374456,0.029027576,0.02467344,0.11030479,0.079825835,0.066763425,0.126269956,0.030478955,0.014513788,0.149492017,0.116110305,0.059506531,0.005805515,0.069666183,0.015965167,0.687953556,0.062409289,0.027576197,0.046444122,0.014513788,0.238026125,0.029027576,0.111756168,0.047895501,0.043541364,0.053701016,0.021770682,0.018867925,0.043541364,0.046444122,0.046444122,0.029027576,0.063860668,0.029027576,0.02467344,0.078374456,0.013062409,0.055152395,0.026124819,0.108853411,0.013062409,0.008708273,0.079825835,0.142235123,0.047895501,0.081277213,0.08563135,0.034833091,0.031930334,0.023222061,0.08563135,0.074020319,0.015965167,0.319303338,0.1712627,0.02467344,0.023222061,0.030478955,0.053701016,0.031930334,0.030478955,0.01161103,0.027576197,0.079825835,0.02467344,0.010159652,0.052249637,1,0.107402032,0.027576197,0.063860668,0.01161103,0.034833091,0.059506531,0.008708273,0.026124819,0.087082729,0.108853411,0.066763425,0.97532656,0.029027576,0.373004354,0.046444122,0.074020319,0.075471698,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Print,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
float_yankdup,string_rot,integer_swap,vector_float_conj,integer_gte,boolean_shove,boolean_and,print_float,string_pop,exec_eq,vector_float_occurrencesof,string_parse_to_chars,integer_lt,string_stackdepth,vector_float_rest,integer_dup_times,vector_float_first,integer_fromfloat,char_iswhitespace,string_removechar,string_first,string_yank,string_concat,string_setchar,string_length,integer_eq,string_reverse,exec_s_when_autoconstructing,exec_yankdup,vector_float_remove,float_sub,char_isletter,string_empty,char_isdigit,print_integer,exec_shove,string_conjchar,boolean_or,boolean_empty,string_dup_items,vector_float_subvec,string_fromchar,exec_do*while,integer_rot,string_rest,char_allfromstring,float_cos,vector_float_replacefirst,exec_stackdepth,exec_do*range,char_shove,float_inc,integer_dup_items,boolean_dup_items,float_max,float_min,vector_float_rot,float_rot,vector_float_replace,integer_mult,boolean_xor,vector_float_pushall,boolean_yankdup,boolean_frominteger,exec_yank,integer_mod,char_stackdepth,string_replace,integer_div,string_replacefirst,integer_min,float_shove,integer_flush,string_yankdup,vector_float_nth,exec_y_when_autoconstructing,integer_yank,string_emptystring,in2,vector_float_yankdup,string_swap,float_pop,float_dup_times,integer_max,char_swap,string_contains,char_empty,exec_dup,exec_k,float_frominteger,float_mult,exec_noop,boolean_dup_times,float_dup_items,exec_s,vector_float_butlast,exec_y,boolean_rot,float_mod,vector_float_swap,char_dup_items,vector_float_concat,integer_yankdup,string_replacechar,string_fromboolean,string_replacefirstchar,string_substring,vector_float_pop,boolean_stackdepth,string_shove,string_containschar,char_yankdup,char_yank,float_add,exec_do*times,vector_float_last,integer_shove,exec_if,vector_float_dup,print_exec,char_frominteger,vector_float_indexof,boolean_dup,string_eq,boolean_not,char_eq,integer_dup,boolean_flush,boolean_pop,string_butlast,exec_swap,boolean_swap,integer_add,exec_flush,print_newline,char_dup_times,float_stackdepth,string_dup,string_frominteger,exec_dup_times,exec_do*count,float_div,integer_fromchar,integer_inc,boolean_invert_first_then_and,vector_float_yank,integer_fromstring,exec_rot,vector_float_flush,float_dec,char_rot,vector_float_set,string_take,exec_string_iterate,string_split,integer_pop,vector_float_shove,exec_pop,vector_float_take,vector_float_length,float_sin,float_yank,print_char,exec_when,boolean_invert_second_then_and,integer_sub,float_tan,exec_dup_items,vector_float_dup_items,boolean_yank,float_dup,vector_float_dup_times,integer_stackdepth,integer_dec,integer_gt,exec_while,in1,char_dup,in3,char_flush,float_swap,char_pop,integer_empty,float_flush,boolean_eq,string_flush,print_boolean,exec_k_when_autoconstructing,exec_do*vector_float,exec_empty,string_last,string_dup_times,print_string,vector_float_reverse,string_nth,string_occurrencesofchar,string_indexofchar,integer_fromboolean,integer_lte,vector_float_stackdepth,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
0.014173228,0.020472441,0.04488189,0.006299213,0.034645669,0.027559055,0.02992126,0.049606299,0.026771654,0.065354331,0.007874016,0.056692913,0.029133858,0.15511811,0.011023622,0.039370079,0.011811024,0.005511811,0.071653543,0.283464567,0.049606299,0.02519685,0.069291339,0.018897638,0.24488189,0.022047244,0.072440945,0.018110236,0.051968504,0.006299213,0.013385827,0.08976378,0.082677165,0.055905512,0.269291339,0.063779528,0.120472441,0.02519685,0.048031496,0.029133858,0.004724409,0.081102362,0.077165354,0.043307087,0.024409449,0.103937008,0.006299213,0.006299213,0.170866142,0.051968504,0.033858268,0.028346457,0.04015748,0.046456693,0.008661417,0.007086614,0.004724409,0.01023622,0.007874016,0.036220472,0.031496063,0.068503937,0.02992126,0.030708661,0.040944882,0.026771654,0.177165354,0.024409449,0.034645669,0.016535433,0.178740157,0.007086614,0.033858268,0.033858268,0.007874016,0.017322835,0.047244094,0.038582677,0.339370079,0.004724409,0.02519685,0.008661417,0.012598425,0.177165354,0.060629921,0.037007874,0.049606299,0.111023622,0.032283465,0.228346457,0.01023622,0.018897638,0.07007874,0.006299213,0.098425197,0.01496063,0.123622047,0.018110236,0.012598425,0.007874016,0.100787402,0.005511811,0.033858268,0.366929134,0.040944882,0.04015748,0.025984252,0.003937008,0.119685039,0.025984252,0.053543307,0.050393701,0.037795276,0.235433071,0.088976378,0.009448819,0.039370079,0.077165354,0.016535433,0.003937008,0.032283465,0.007086614,0.037795276,0.025984252,0.031496063,0.073228346,0.05984252,0.024409449,0.041732283,0.022834646,0.066141732,0.02519685,0.056692913,0.016535433,0.027559055,0.1,0.090551181,0.08503937,0.027559055,0.127559055,0.096850394,0.187401575,0.066141732,0.048818898,0.032283465,0.005511811,0.022047244,0.075590551,0.003937008,0.014173228,0.04015748,0.003149606,0.033858268,0.172440945,0.227559055,0.02992126,0.005511811,0.025984252,0.003937008,0.088188976,0.003937008,0.007086614,0.094488189,0.062204724,0.026771654,0.05984252,0.003937008,0.045669291,0.005511811,0.030708661,0.02519685,0.004724409,0.123622047,0.053543307,0.033070866,0.052755906,1,0.097637795,0.151968504,0.026771654,0.01023622,0.051968504,0.05511811,0.005511811,0.025984252,0.027559055,0.005511811,0.027559055,0.137007874,0.051968504,0.053543307,0.037795276,0.57007874,0.006299213,0.019685039,0.122047244,0.030708661,0.061417323,0.031496063,0.018110236,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Return,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
float_yankdup,string_rot,integer_swap,vector_float_conj,integer_gte,boolean_shove,boolean_and,string_pop,exec_eq,vector_float_occurrencesof,vector_integer_flush,string_parse_to_chars,integer_lt,string_stackdepth,vector_float_rest,vector_integer_pushall,exec_do*vector_integer,vector_integer_reverse,vector_integer_concat,vector_integer_occurrencesof,integer_dup_times,vector_float_first,integer_fromfloat,char_iswhitespace,string_removechar,exec_do*vector_float,string_first,vector_integer_subvec,string_yank,string_concat,string_setchar,string_length,integer_eq,float_dec,string_reverse,exec_s_when_autoconstructing,exec_yankdup,vector_float_remove,vector_integer_yank,vector_integer_dup_items,vector_integer_swap,char_isletter,string_empty,char_isdigit,vector_integer_dup_times,vector_integer_shove,exec_when,string_conjchar,vector_integer_rest,boolean_or,boolean_empty,string_dup_items,vector_float_subvec,string_fromchar,vector_integer_emptyvector,exec_do*while,integer_rot,char_dup,string_replacechar,string_rest,char_allfromstring,float_cos,vector_float_replacefirst,exec_stackdepth,exec_do*range,char_shove,float_inc,integer_dup_items,boolean_dup_items,float_max,float_min,float_sub,vector_float_rot,float_rot,vector_float_replace,vector_integer_replacefirst,vector_integer_last,exec_shove,boolean_xor,vector_float_pushall,boolean_yankdup,integer_min,exec_yank,integer_mod,char_stackdepth,vector_integer_indexof,vector_integer_length,string_replace,integer_div,integer_mult,boolean_frominteger,float_shove,integer_flush,string_yankdup,vector_float_nth,exec_y_when_autoconstructing,integer_yank,string_emptystring,vector_integer_set,vector_float_yankdup,string_swap,float_pop,float_dup_times,integer_max,char_swap,string_contains,char_empty,exec_dup,exec_k,float_frominteger,float_mult,exec_noop,boolean_dup_times,float_dup_items,exec_s,char_pop,vector_float_butlast,exec_y,print_string,boolean_rot,float_mod,vector_float_swap,vector_integer_stackdepth,char_dup_items,vector_float_concat,integer_yankdup,vector_integer_remove,string_fromboolean,string_replacefirstchar,vector_integer_empty,string_substring,vector_float_pop,boolean_stackdepth,string_shove,string_containschar,char_yankdup,char_yank,float_add,exec_do*times,vector_float_last,integer_shove,vector_integer_nth,exec_if,vector_float_dup,char_frominteger,vector_float_indexof,boolean_dup,string_eq,boolean_not,char_eq,vector_integer_take,boolean_flush,boolean_pop,string_butlast,exec_swap,boolean_swap,integer_add,exec_flush,print_newline,char_dup_times,float_stackdepth,string_dup,string_frominteger,exec_dup_times,float_div,integer_fromchar,integer_inc,boolean_invert_first_then_and,string_replacefirst,vector_float_yank,integer_fromstring,exec_rot,vector_float_flush,vector_integer_contains,char_rot,vector_float_set,string_take,exec_string_iterate,string_split,integer_pop,vector_float_shove,exec_pop,vector_float_take,vector_float_length,vector_integer_eq,float_sin,float_yank,print_char,exec_do*count,boolean_invert_second_then_and,integer_sub,float_tan,string_nth,vector_integer_rot,vector_float_dup_items,boolean_yank,float_dup,vector_float_dup_times,integer_stackdepth,vector_integer_yankdup,integer_dec,integer_gt,vector_integer_butlast,string_indexofchar,in1,in2,in3,char_flush,float_swap,vector_integer_pop,integer_lte,float_flush,vector_integer_first,boolean_eq,string_flush,print_boolean,exec_k_when_autoconstructing,vector_integer_replace,exec_empty,string_last,string_dup_times,integer_dup,vector_float_reverse,exec_dup_items,string_occurrencesofchar,vector_integer_conj,print_integer,exec_while,integer_fromboolean,integer_empty,vector_integer_dup,vector_float_stackdepth
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
0.010942249,0.037082067,0.085106383,0.004863222,0.072948328,0.070516717,0.065653495,0.036474164,0.101519757,0.006079027,0.015805471,0.06443769,0.078419453,0.080851064,0.008510638,0.113677812,0.246808511,0.241945289,0.036474164,0.036474164,0.087537994,0.009118541,0.004255319,0.011550152,0.193920973,0.105775076,0.017629179,0.023708207,0.03768997,0.066869301,0.004863222,0.244984802,0.068085106,0.010942249,0.032826748,0.057142857,0.085106383,0.004863222,0.038297872,0.034650456,0.040729483,0.008510638,0.0443769,0.009118541,0.041945289,0.045592705,0.065653495,0.008510638,0.037082067,0.060790274,0.080851064,0.029787234,0.003647416,0.018844985,0.032218845,0.133130699,0.072340426,0.015197568,0.245592705,0.038297872,0.052887538,0.004863222,0.004863222,0.222492401,0.086322188,0.006079027,0.021884498,0.070516717,0.06443769,0.00668693,0.005471125,0.009118541,0.003647416,0.007902736,0.006079027,0.090577508,0.040729483,0.094224924,0.068085106,0.052887538,0.066869301,0.169604863,0.074164134,0.110638298,0.089969605,0.039513678,0.058966565,0.039513678,0.097264438,0.085106383,0.143465046,0.005471125,0.058358663,0.038297872,0.006079027,0.063829787,0.065045593,0.038905775,0.061398176,0.003647416,0.036474164,0.00668693,0.009726444,0.081458967,0.015197568,0.040729483,0.00668693,0.141641337,0.055319149,0.137993921,0.007902736,0.058966565,0.077203647,0.004863222,0.10212766,0.007294833,0.011550152,0.131306991,0.243161094,0.061398176,0.009726444,0.006079027,0.091793313,0.009726444,0.004255319,0.097264438,0.026139818,0.037082067,0.00668693,0.047416413,0.032218845,0.003039514,0.190881459,0.032218845,0.007294833,0.007902736,0.00668693,0.144680851,0.129483283,0.007294833,0.075379939,0.062613982,0.066869301,0.012765957,0.007294833,0.005471125,0.072340426,0.041945289,0.073556231,0.007902736,0.024316109,0.060790274,0.074772036,0.040729483,0.089969605,0.07112462,0.077203647,0.039513678,0.003647416,0.01337386,0.069908815,0.066261398,0.037082067,0.113677812,0.144680851,0.035258359,0.079635258,0.056534954,0.035258359,0.004255319,0.042553191,0.094832827,0.003039514,0.035866261,0.009118541,0.002431611,0.035258359,0.085106383,0.100911854,0.072948328,0.004255319,0.034650456,0.003039514,0.068085106,0.199392097,0.003039514,0.005471125,0.011550152,0.122796353,0.066869301,0.08449848,0.003039514,0.005471125,0.043768997,0.004255319,0.063829787,0.019452888,0.003647416,0.297264438,0.048024316,0.085106383,0.080851064,0.036474164,0.003647416,1,0.254711246,0.077203647,0.006079027,0.007902736,0.023100304,0.067477204,0.004255319,0.041337386,0.069300912,0.021884498,0.001215805,0.06443769,0.096048632,0.08449848,0.017021277,0.040729483,0.126443769,0.004863222,0.090577508,0.007294833,0.047416413,0.001823708,0.06443769,0.110030395,0.09118541,0.078419453,0.013981763
